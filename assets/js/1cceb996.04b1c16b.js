"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[3113],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:o,l[1]=i;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5174:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var a=n(7462),o=(n(7294),n(4137));const r={sidebar_label:"misc",title:"ALToolbox.misc"},l=void 0,i={unversionedId:"reference/ALToolbox/misc",id:"reference/ALToolbox/misc",title:"ALToolbox.misc",description:"thousands",source:"@site/docs/reference/ALToolbox/misc.md",sourceDirName:"reference/ALToolbox",slug:"/reference/ALToolbox/misc",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/ALToolbox/misc",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/reference/ALToolbox/misc.md",tags:[],version:"current",frontMatter:{sidebar_label:"misc",title:"ALToolbox.misc"},sidebar:"someSidebar",previous:{title:"copy_button",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/ALToolbox/copy_button"},next:{title:"save_input_data",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/ALToolbox/save_input_data"}},s={},c=[{value:"thousands",id:"thousands",level:4},{value:"tel",id:"tel",level:4},{value:"fa_icon",id:"fa_icon",level:4},{value:"space",id:"space",level:4},{value:"yes_no_unknown",id:"yes_no_unknown",level:4},{value:"number_to_letter",id:"number_to_letter",level:4},{value:"collapse_template",id:"collapse_template",level:4},{value:"tabbed_templates_html",id:"tabbed_templates_html",level:4},{value:"review_widget",id:"review_widget",level:4},{value:"sum_if_defined",id:"sum_if_defined",level:4},{value:"add_records",id:"add_records",level:4},{value:"output_checkbox",id:"output_checkbox",level:4},{value:"nice_county_name",id:"nice_county_name",level:4}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"thousands"},"thousands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def thousands(num: Union[float, str, Decimal], show_decimals=False) -> str\n")),(0,o.kt)("p",null,"Return a whole number formatted with thousands separator.\nOptionally, format with 2 decimal points (for a PDF form with the\ncurrency symbol already present in the form)"),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"trucate"),", will call ",(0,o.kt)("inlineCode",{parentName:"p"},"int(num)"),", truncating the decimals instead of\nrounding to the closest int."),(0,o.kt)("h4",{id:"tel"},"tel"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def tel(phone_number) -> str\n")),(0,o.kt)("p",null,"Format a phone number so you can click on it to open in your phone dialer"),(0,o.kt)("h4",{id:"fa_icon"},"fa","_","icon"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def fa_icon(icon: str,\n            color="primary",\n            color_css=None,\n            size="sm",\n            fa_class="fa-solid") -> str\n')),(0,o.kt)("p",null,"Return HTML for a font-awesome icon of the specified size and color. You can reference\na CSS variable (such as Bootstrap theme color) or a true CSS color reference, such as ","'","blue","'"," or\n","'",(0,o.kt)("inlineCode",{parentName:"p"},"DDDDDD"),"'",". Defaults to Bootstrap theme color ",'"',"primary",'"',"."),(0,o.kt)("p",null,"Sizes can be ","'","2xs","'",", ","'","xs","'",", ","'","sm","'",", ","'","md","'"," (or None), ","'","lg","'",", ","'","xl","'",", ","'","2xl","'","."),(0,o.kt)("h4",{id:"space"},"space"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def space(var_name: str, prefix=" ", suffix="") -> str\n')),(0,o.kt)("p",null,"If the value as a string is defined, return it prefixed/suffixed. Defaults to prefix\nof a space. Helps build a sentence with less cruft. Equivalent to SPACE function in\nHotDocs."),(0,o.kt)("h4",{id:"yes_no_unknown"},"yes","_","no","_","unknown"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def yes_no_unknown(var_name: str,\n                   condition: Optional[bool],\n                   unknown="Unknown",\n                   placeholder=0)\n')),(0,o.kt)("p",null,"Return ","'","unknown","'"," if the value is None rather than False. Helper for PDF filling with\nyesnomaybe fields"),(0,o.kt)("h4",{id:"number_to_letter"},"number","_","to","_","letter"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def number_to_letter(n: Optional[int]) -> str\n")),(0,o.kt)("p",null,"Returns a capital letter representing ordinal position. E.g., 1=A, 2=B, etc. Appends letters\nonce you reach 26 in a way compatible with Excel/Google Sheets column naming conventions. 27=AA, 28=AB..."),(0,o.kt)("h4",{id:"collapse_template"},"collapse","_","template"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def collapse_template(template,\n                      classname=None,\n                      closed_icon="caret-right",\n                      open_icon="caret-down")\n')),(0,o.kt)("p",null,"Insert HTML for a Bootstrap ",'"',"collapse",'"'," div."),(0,o.kt)("p",null,"Optionally, you can specify a custom icon to override the defaults:"),(0,o.kt)("p",null,"The default icons are ",'"',"\ud83d\udf82",'"'," which displays when the text is collapsed (",(0,o.kt)("inlineCode",{parentName:"p"},"closed_icon"),") and\n",'"',"\u25bc",'"'," which displays when the text is open (",(0,o.kt)("inlineCode",{parentName:"p"},"open_icon"),")."),(0,o.kt)("h4",{id:"tabbed_templates_html"},"tabbed","_","templates","_","html"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def tabbed_templates_html(tab_group_name: str, *pargs) -> str\n")),(0,o.kt)("p",null,"Provided a list of templates, create Bootstrap v 4.5 tabs with the ",(0,o.kt)("inlineCode",{parentName:"p"},"subject")," as the tab label."),(0,o.kt)("h4",{id:"review_widget"},"review","_","widget"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def review_widget(\n        *,\n        up_action: str,\n        down_action: str,\n        review_action: Optional[str] = None,\n        thumbs_display: str = "Did we help you?",\n        review_display: str = "Thanks! Let us know what we could do better",\n        submit_review_button: str = "Add your review",\n        post_review_display: str = "Thank you for your review!") -> str\n')),(0,o.kt)("p",null,"A widget that allows people to give a quick review (thumbs up and down, with an optional text\ncomponent) in the middle of an interview without triggering a page reload."),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"review_action")," is provided, once you press either of the thumbs, a text input screen with\na submit button appears, and once the text review is submitted (or after the thumbs, if no\n",(0,o.kt)("inlineCode",{parentName:"p"},"review_action")," was provided), a final ",'"',"thank you",'"'," messsage is displayed."),(0,o.kt)("p",null,"@param up_action {string} - the variable name of an event to be executed on the server if the\nthumbs up is pressed\n@param down_action {string} - the variable name of an event to be executed on the server i\nthe thumbs down is pressed\n@param (optional) review_action {string} - the variable name of an event to be execute on the\nserver when someone submits their text review\n@param (optional) thumbs_display {string} - text displayed to user describing the thumbs\n@param (optional) review_display {string} - text displayed to user describing the text input\n@param (optional) submit_review_button {string} - text on the button to submit their text review\n@param (optional) post_review_display {string} - text displayed to user after review is\nsubmitted"),(0,o.kt)("h4",{id:"sum_if_defined"},"sum","_","if","_","defined"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def sum_if_defined(*pargs)\n")),(0,o.kt)("p",null,"Lets you add up the value of variables that are not in a list"),(0,o.kt)("h4",{id:"add_records"},"add","_","records"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def add_records(obj, labels)\n")),(0,o.kt)("p",null,"List demo interviews in the current package to be run from the landing page"),(0,o.kt)("h4",{id:"output_checkbox"},"output","_","checkbox"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'def output_checkbox(value_to_check: bool,\n                    checked_value: str = "[X]",\n                    unchecked_value: str = "[  ]")\n')),(0,o.kt)("p",null,"Generate a conditional checkbox for docx templates"),(0,o.kt)("h4",{id:"nice_county_name"},"nice","_","county","_","name"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"def nice_county_name(address: Address) -> str\n")),(0,o.kt)("p",null,"If the county name contains the word ",'"',"County",'"',", which Google Address\nAutocomplete does by default, remove it."))}u.isMDXComponent=!0}}]);