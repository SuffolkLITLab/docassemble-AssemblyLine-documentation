"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[5017],{8453:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>r});var s=n(6540);const t={},i=s.createContext(t);function l(e){const o=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:o},e.children)}},8896:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"components/ALToolbox/al_income_jobs","title":"Jobs: ALJob and ALJobList\\n","description":"Asking people about their jobs is a common task when getting financial information. The ALJob class tries to be complete but simple for your users to answer, doing the math for them, and straight-forward for you to use.","source":"@site/docs/components/ALToolbox/al_income_jobs.md","sourceDirName":"components/ALToolbox","slug":"/components/ALToolbox/ALIncome/jobs","permalink":"/docs/components/ALToolbox/ALIncome/jobs","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/ALToolbox/al_income_jobs.md","tags":[],"version":"current","frontMatter":{"id":"al_income_jobs","title":"Jobs: ALJob and ALJobList\\n","sidebar_label":"Jobs","slug":"ALIncome/jobs"},"sidebar":"docs","previous":{"title":"Expenses","permalink":"/docs/components/ALToolbox/ALIncome/expenses"},"next":{"title":"Itemized jobs","permalink":"/docs/components/ALToolbox/ALIncome/itemizedjobs"}}');var t=n(4848),i=n(8453);const l={id:"al_income_jobs",title:"Jobs: ALJob and ALJobList\n",sidebar_label:"Jobs",slug:"ALIncome/jobs"},r=void 0,a={},c=[{value:"ALJobList tutorial",id:"aljoblist-tutorial",level:2},{value:"Before",id:"before",level:3},{value:"Writing the interview",id:"writing-the-interview",level:3}];function d(e){const o={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Details:n}=o;return n||function(e,o){throw new Error("Expected "+(o?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(o.p,{children:["Asking people about their jobs is a common task when getting financial information. The ",(0,t.jsx)(o.code,{children:"ALJob"})," class tries to be complete but simple for your users to answer, doing the math for them, and straight-forward for you to use."]}),"\n",(0,t.jsxs)(o.p,{children:["If you want to jump right in, check out a ",(0,t.jsx)(o.a,{href:"https://apps-test.suffolklitlab.org/start/ALToolbox/al_income_demo?use_feature=ALJob",children:"live demo of the ALJob feature"}),"."]}),"\n",(0,t.jsx)(o.h2,{id:"aljoblist-tutorial",children:"ALJobList tutorial"}),"\n",(0,t.jsx)(o.p,{children:"Let's make a short interview that asks about someone's jobs, lets\nthem review their answers, and shows them summaries about their\nincome from those jobs."}),"\n",(0,t.jsx)(o.h3,{id:"before",children:"Before"}),"\n",(0,t.jsx)(o.p,{children:"Before you start, we'll assume that you:"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["have access to a ",(0,t.jsx)(o.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/classes/assembly-line/2020-assembly-line-assignment-1#before-you-get-started",children:"developer account on a docassemble server"})]}),"\n",(0,t.jsxs)(o.li,{children:["have the ",(0,t.jsxs)(o.a,{href:"/docs/get_started/installation#run-the-installation-script",children:[(0,t.jsx)(o.code,{children:"ALToolbox"})," package installed on your server"]})]}),"\n",(0,t.jsxs)(o.li,{children:["know ",(0,t.jsx)(o.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/classes/docacon-2020/hello-world#introduction-to-the-docassemble-playground",children:"what the playground is"})," and ",(0,t.jsx)(o.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/classes/docacon-2020/hello-world#hello-world",children:"how to use it to develop a docassemble interview"})]}),"\n",(0,t.jsxs)(o.li,{children:["know ",(0,t.jsx)(o.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/yaml#documents",children:'what "blocks" are'})," in docassemble"]}),"\n"]}),"\n",(0,t.jsx)(o.h3,{id:"writing-the-interview",children:"Writing the interview"}),"\n",(0,t.jsx)(o.p,{children:"This interview will be minimum functionality; it will gather all of the information about someone's jobs, ask them to review it, and finally, will display the information."}),"\n",(0,t.jsxs)(o.p,{children:["First, include the ",(0,t.jsx)(o.code,{children:"al_income.yml"})," YAML file in your interview. This will\nlet you use the al_income questions and python code."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"include:\n  - docassemble.ALToolbox:al_income.yml\n"})}),"\n",(0,t.jsxs)(o.p,{children:["Then, create an ",(0,t.jsx)(o.code,{children:"ALJobList"})," using a ",(0,t.jsx)(o.code,{children:"objects"})," block."]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"objects:\n  - jobs: ALJobList.using(complete_attribute='complete', ask_number=True)\n"})}),"\n",(0,t.jsxs)(o.admonition,{title:"Other objects",type:"tip",children:[(0,t.jsxs)(o.p,{children:["By default, each ALJob will use ",(0,t.jsx)(o.code,{children:"Individual"})," object for the employer. You can change this to be the\n",(0,t.jsx)(o.code,{children:"ALIndividual"})," object by using the following ",(0,t.jsx)(o.code,{children:"objects"})," block:"]}),(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"objects:\n  - jobs: ALJobList.using(\n        object_type=ALJob.using(employer_type=ALIndividual),\n        complete_attribute='complete', ask_number=True)\n"})})]}),"\n",(0,t.jsxs)(o.p,{children:["Next, add a ",(0,t.jsx)(o.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/practical-guide-docassemble/controlling-interview-order#the-interview-order-block",children:"interview order code block"}),":"]}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"mandatory: True\ncode: |\n  jobs.gather()\n"})}),"\n",(0,t.jsx)(o.p,{children:"The interview will ask how many jobs the user has, and then for each job, will ask them:"}),"\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsx)(o.li,{children:"their job title. This is mostly for their benefit, and is the simplest way of asking for the information."}),"\n",(0,t.jsx)(o.li,{children:'information about their employer. They can mark if they are self-employed, and the module will mark the employers name as\n"self-employed".'}),"\n",(0,t.jsxs)(o.li,{children:["how much the user gets paid. This screen handles both hourly and salaried workers, and asks how often they receive their pay,\nand if they have any deductions from their paycheck.","\n",(0,t.jsxs)(o.ul,{children:["\n",(0,t.jsxs)(o.li,{children:["if you need more detailed information about someone's pay, such as their\ntips and taxes withheld, you should use ",(0,t.jsxs)(o.a,{href:"/docs/components/ALToolbox/ALIncome/itemizedjobs",children:["the ",(0,t.jsx)(o.code,{children:"ALItemizedJobList"})," class"]})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"You can let the user review their answers with the following screen:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"id: job review\nquestion: |\n  Review your jobs\nsubquestion: |\n  Here is what you've told us about your jobs. You can add more or continue\n  to the next question.\n\n  ${ jobs.table }\n\n  ${ jobs.add_action() }\nfield: review_jobs\n"})}),"\n",(0,t.jsxs)(o.admonition,{title:"Review screens",type:"tip",children:[(0,t.jsxs)(o.p,{children:["You can also add the job list to a ",(0,t.jsx)(o.a,{href:"https://docassemble.org/docs/fields.html#review",children:"review screen"})," with the below code:"]}),(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"review:\n  - Edit: jobs.revisit\n    button: |\n      **Jobs**:\n\n      % for job in jobs:\n      * ${ job.source } at ${ job.employer.name }\n      % endfor\n"})})]}),"\n",(0,t.jsx)(o.p,{children:"Once you have this information, you can use it in a variety of ways.\nLet's add one last screen to display our information. We'll\ndescribe what each line of code is doing on the screen."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"event: final_screen\nquestion: Summary of your jobs\nsubquestion: |\n  Annual gross income from all jobs: ${ currency(jobs.total()) }\n\n  Annual net income (gross - deductions) from all jobs: ${ currency(jobs.net_total()) }\n\n  Monthly gross income from all jobs: ${ currency(jobs.total(times_per_year=12)) }\n\n  Annual gross income from the first job listed: ${ currency(jobs[0].total()) }\n\n  Employer information from the first job: ${ jobs[0].employer_name_address_phone() }\n"})}),"\n",(0,t.jsx)(o.p,{children:"Add the screens we just made to the mandatory code block above, so it looks like:"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"mandatory: True\ncode: |\n  jobs.gather()\n  review_jobs\n  final_screen\n"})}),"\n",(0,t.jsx)(o.p,{children:"And you can now run through the interview!"}),"\n",(0,t.jsxs)(n,{children:[(0,t.jsx)("summary",{children:"Click this section to see the whole interview"}),(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{className:"language-yml",children:"---\ninclude:\n  - al_income.yml\n---\nobjects:\n  - jobs: ALJobList.using(complete_attribute='complete', ask_number=True)\n---\nmandatory: True\ncode: |\n  jobs.gather()\n  review_jobs\n  final_screen\n---\nid: job review\nquestion: |\n  Review your jobs\nsubquestion: |\n  Here is what you've told us about your jobs. You can add more or continue\n  to the next question.\n\n  ${ jobs.table }\n\n  ${ jobs.add_action() }\nfield: review_jobs\n---\nevent: final_screen\nquestion: Summary of your jobs\nsubquestion: |\n  Annual gross income from all jobs: ${ currency(jobs.total()) }\n\n  Annual net income (gross - deductions) from all jobs: ${ currency(jobs.net_total()) }\n\n  Monthly gross income from all jobs: ${ currency(jobs.total(times_per_year=12)) }\n\n  Annual gross income from the first job listed: ${ currency(jobs[0].total()) }\n\n  Employer information from the first job: ${ jobs[0].employer_name_address_phone() }\n"})})]}),"\n",(0,t.jsxs)(o.p,{children:["You'll likely want to display this information in a PDF or word template as well. ",(0,t.jsx)(o.a,{href:"/docs/authoring/generated_yaml#attachment-block",children:"This section describing the Attachment block"})," will help with displaying information in the PDF, and ",(0,t.jsx)(o.a,{href:"/docs/authoring/docx",children:"this page about working with DOCX files"})," will help DOCX users."]})]})}function h(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);