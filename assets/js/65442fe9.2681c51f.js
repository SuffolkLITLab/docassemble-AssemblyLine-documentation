"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[1037],{4137:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>h});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},p=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=d(n),p=r,h=u["".concat(l,".").concat(p)]||u[p]||c[p]||a;return n?i.createElement(h,s(s({ref:t},m),{},{components:n})):i.createElement(h,s({ref:t},m))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var d=2;d<a;d++)s[d]=n[d];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var i=n(7462),r=(n(7294),n(4137));const a={id:"alreminders",title:"Scheduled reminders\n",sidebar_label:"Scheduled Reminders",slug:"/framework/alreminders"},s=void 0,o={unversionedId:"framework/alreminders",id:"framework/alreminders",title:"Scheduled reminders\n",description:"A guided interview is always an intervention into one part of a larger process.",source:"@site/docs/framework/alreminders.md",sourceDirName:"framework",slug:"/framework/alreminders",permalink:"/docassemble-AssemblyLine-documentation/docs/framework/alreminders",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/framework/alreminders.md",tags:[],version:"current",frontMatter:{id:"alreminders",title:"Scheduled reminders\n",sidebar_label:"Scheduled Reminders",slug:"/framework/alreminders"},sidebar:"mainSidebar",previous:{title:"Reserved variable names that you cannot use",permalink:"/docassemble-AssemblyLine-documentation/docs/framework/reserved_keywords"},next:{title:"ALIncome: Python Classes to gather financial information\n",permalink:"/docassemble-AssemblyLine-documentation/docs/alincome/overview"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting started with the Assembly Line&#39;s reminders system",id:"getting-started-with-the-assembly-lines-reminders-system",level:2},{value:"Include the YAML file",id:"include-the-yaml-file",level:3},{value:"Integrate it into your interview order block",id:"integrate-it-into-your-interview-order-block",level:3},{value:"Customize the list of times and reminders",id:"customize-the-list-of-times-and-reminders",level:3},{value:"Allowing the user to unsubscribe",id:"allowing-the-user-to-unsubscribe",level:4},{value:"The STOP keyword in Twilio",id:"the-stop-keyword-in-twilio",level:4},{value:"Customize other screens",id:"customize-other-screens",level:3},{value:"Caveats and warnings",id:"caveats-and-warnings",level:2},{value:"<code>al_reminders</code> takes over docassemble&#39;s <code>cron</code> system",id:"al_reminders-takes-over-docassembles-cron-system",level:3},{value:"Dates are only calculated once",id:"dates-are-only-calculated-once",level:3},{value:"<code>cron</code> resets the <code>modified</code> date of your interview",id:"cron-resets-the-modified-date-of-your-interview",level:3}],m={toc:d};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,i.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"A guided interview is always an intervention into one part of a larger process."),(0,r.kt)("p",null,"One way to help the user after the main interview is over is to send them reminders\nat scheduled times."),(0,r.kt)("p",null,"You can use scheduled reminders to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Remind the user to show up in court"),(0,r.kt)("li",{parentName:"ul"},"Provide a link to the interview so they can perform a follow-up step (like sending in a motion)"),(0,r.kt)("li",{parentName:"ul"},"Provide affirmations"),(0,r.kt)("li",{parentName:"ul"},'Provide helpful information "just in time" around important milestones in their case')),(0,r.kt)("p",null,"The Assembly Line's reminder system supports both:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Email reminders, and"),(0,r.kt)("li",{parentName:"ol"},"SMS text messages")),(0,r.kt)("p",null,"This is simply a light API with basic use of Docassemble's built-in\n",(0,r.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/background.html#scheduled"},"cron")," system. If it doesn't\nfit your needs, you may want to use our example for inspiration and build your own."),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("p",null,"To send reminders by SMS, you will need an SMS provider set up in your docassemble configuration.\nCurrently, Docassemble's only supported provider is Twilio."),(0,r.kt)("p",null,"To send reminders by ",(0,r.kt)("strong",{parentName:"p"},"email")," you will need email configured on your server."),(0,r.kt)("h2",{id:"getting-started-with-the-assembly-lines-reminders-system"},"Getting started with the Assembly Line's reminders system"),(0,r.kt)("p",null,"The Assembly Line reminder system is an optional part of the Assembly Line.\nIt was added in Assembly Line version ",(0,r.kt)("inlineCode",{parentName:"p"},"2.23.0"),".\nTo add it to your interview, add the following line:"),(0,r.kt)("h3",{id:"include-the-yaml-file"},"Include the YAML file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"include:\n  - docassemble.AssemblyLine:al_reminders.yml\n")),(0,r.kt)("admonition",{title:"Warning",type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"The Assembly Line reminder system uses Docassemble's scheduled task system.\nIf you want to use reminders but have an existing scheduled task in your interview, you need\nto configure your scheduled tasks so that they work together. ")),(0,r.kt)("h3",{id:"integrate-it-into-your-interview-order-block"},"Integrate it into your interview order block"),(0,r.kt)("p",null,"You need to integrate the Assembly Line reminder system in two places:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Ask your user if they want to receive reminders, with ",(0,r.kt)("inlineCode",{parentName:"li"},"al_user_wants_reminders")),(0,r.kt)("li",{parentName:"ol"},"Send a confirmation message to the user letting them know they've successfully subscribed, with ",(0,r.kt)("inlineCode",{parentName:"li"},"al_reminders_sent_initial_test_message"))),(0,r.kt)("p",null,"Because the Assembly Line reminder system evaluates the list of reminders just once by default,\nyou should wait to ask the user if they want reminders until after any questions that can change\nthe date of the reminders gets sent out."),(0,r.kt)("p",null,"Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nid: interview order\ncode: |\n  users[0].name.first\n  eviction_answer_date\n  # ... Ask other interview questions\n  al_user_wants_reminders\n  al_reminders_sent_initial_test_message\n  interview_order_eviction_answer = True\n")),(0,r.kt)("h3",{id:"customize-the-list-of-times-and-reminders"},"Customize the list of times and reminders"),(0,r.kt)("p",null,"To use the reminder system, you will need to customize\nthe ",(0,r.kt)("inlineCode",{parentName:"p"},"al_reminders")," dictionary and add any email and SMS\ntemplates that you want to use."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"al_reminders")," is a dictionary. Each entry is a dictionary\nwith the following keys:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"description"),", a short plain language description of the reminder"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"date"),", a date the reminder will be sent. Should be in ISO format and will be calculated only once. You can use ",(0,r.kt)("inlineCode",{parentName:"li"},"mako")," to calculate with variables."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"email template"),": the name of a ",(0,r.kt)("inlineCode",{parentName:"li"},"template")," block in your YAML file that will be used for email reminders"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"sms template"),": same as the ",(0,r.kt)("inlineCode",{parentName:"li"},"email template"),", but for SMS reminders")),(0,r.kt)("p",null,"In the examples below, we define ",(0,r.kt)("inlineCode",{parentName:"p"},"al_reminders")," with Docassemble's ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," block. But you\ncan define it any way that makes sense for you. All entries should be strings. If you use\na ",(0,r.kt)("inlineCode",{parentName:"p"},"code")," block instead of a ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," block, make sure you put the names of templates in quotes."),(0,r.kt)("p",null,"Note that when ",(0,r.kt)("inlineCode",{parentName:"p"},"al_user_wants_reminders")," is triggered,\nat least the ",(0,r.kt)("inlineCode",{parentName:"p"},"description")," key for each entry in ",(0,r.kt)("inlineCode",{parentName:"p"},"al_user_wants_reminders"),"\nwill be evaluated."),(0,r.kt)("p",null,"Here is what the default ",(0,r.kt)("inlineCode",{parentName:"p"},"al_user_wants_reminders")," question looks like:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(2666).Z,width:"849",height:"847"})),(0,r.kt)("p",null,"Here is a complete example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nvariable name: al_reminders\nuse objects: True\ndata:\nappear_in_court:\n    description: Show up in court\n    date: ${ eviction_answer_date.plus(days=3).format(\"yyyy-MM-dd\") }\n    email template: eviction_email_reminder_template\n    sms template: eviction_sms_reminder_template\n---\ntemplate: eviction_email_reminder_template\nsubject: |\n  ${ users }, you may have a court date coming up\ncontent: |\n  When you used the eviction answer interview at Court Forms Online, you asked\n  us to send you reminders about important dates.\n  \n  According to the information you told us, your court date should be on \n  ${ eviction_answer_date.plus(days=4) }. That's tomorrow!\n\n  This is not a message from the court. Make sure to double-check if something\n  changed in your court case.\n\n  You can [unsubscribe](${ interview_url_action('al_reminders_unsubscribe_emails') }) if you no longer want to get reminders.\n---\ntemplate: eviction_sms_reminder_template\ncontent: |\n  ${ users }, you may have court tomorrow!\n\n  According to the information you told us when you used Court Forms Online, your court date should be on \n  ${ eviction_answer_date.plus(days=4) }. That's tomorrow!\n\n  This message is from Court Forms Online. This is not a message from the court.\n\n  Click to unsubscribe ${ interview_url_action('al_reminders_unsubscribe_emails') } to stop reminders from this\n  interview or reply STOP if you no longer want any reminders from ${ AL_ORGANIZATION_TITLE }.\n")),(0,r.kt)("h4",{id:"allowing-the-user-to-unsubscribe"},"Allowing the user to unsubscribe"),(0,r.kt)("p",null,"The event ",(0,r.kt)("inlineCode",{parentName:"p"},"al_reminders_unsubscribe_emails")," triggers a screen that lets the user\nturn off reminders."),(0,r.kt)("p",null,"You should add this to the bottom of every email and SMS message. You can do so like this:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"${ interview_url_action('al_reminders_unsubscribe_emails') }")),(0,r.kt)("h4",{id:"the-stop-keyword-in-twilio"},"The STOP keyword in Twilio"),(0,r.kt)("p",null,"If your user replies STOP to an SMS message, it will stop them from receiving any messages\nfrom the Twilio phone number that they get the message on."),(0,r.kt)("h3",{id:"customize-other-screens"},"Customize other screens"),(0,r.kt)("p",null,"The reminder system provides several other screens, code blocks and templates you may wish to customize:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"id: wants reminders"),": the screen that lets the user ask to get reminders and choose the method and provide email and phone"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"template: al_reminder_initial_sms_template"),", the confirmation message sent to the user's phone when they first sign up"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"template: al_reminder_initial_email_template"),", same but for emails"),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"al_reminders_cron_daily = True"),": if you need to allow your user to edit the date reminders\nwill get sent after they first sign up for reminders, you may want to customize the code in this code block.")),(0,r.kt)("p",null,"Take a look at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine/blob/main/docassemble/AssemblyLine/data/questions/al_reminders.yml"},"al_reminders.yml"),"\nto find and customize the blocks that you need."),(0,r.kt)("h2",{id:"caveats-and-warnings"},"Caveats and warnings"),(0,r.kt)("h3",{id:"al_reminders-takes-over-docassembles-cron-system"},(0,r.kt)("inlineCode",{parentName:"h3"},"al_reminders")," takes over docassemble's ",(0,r.kt)("inlineCode",{parentName:"h3"},"cron")," system"),(0,r.kt)("p",null,"If you use ",(0,r.kt)("inlineCode",{parentName:"p"},"cron")," for anything else, you will need to customize a few blocks\nto make sure they work together."),(0,r.kt)("p",null,"Specifically:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Combine any ",(0,r.kt)("inlineCode",{parentName:"li"},"cron_daily")," tasks with the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine/blob/main/docassemble/AssemblyLine/data/questions/al_reminders.yml"},"Assembly Line's version")," (search for ",(0,r.kt)("inlineCode",{parentName:"li"},"cron_daily")," in this file and copy the relevant block). Docassemble only evaluates one per interview."),(0,r.kt)("li",{parentName:"ol"},"Make sure you define ",(0,r.kt)("inlineCode",{parentName:"li"},"al_reminders_evaluate_stop_cron")," so that it doesn't stop\ncron before ",(0,r.kt)("strong",{parentName:"li"},"your")," tasks are finished.")),(0,r.kt)("h3",{id:"dates-are-only-calculated-once"},"Dates are only calculated once"),(0,r.kt)("p",null,"If you need more flexible calculation of dates, you might want to\ncustomize the block that defines ",(0,r.kt)("inlineCode",{parentName:"p"},"al_reminders_cron_daily = True")," to insert a\n",(0,r.kt)("inlineCode",{parentName:"p"},'reconsider("al_reminders")')," at an appropriate place."),(0,r.kt)("p",null,"We don't do that by default for you because you may want to calculate a date\nbased on ",(0,r.kt)("inlineCode",{parentName:"p"},"today()"),"."),(0,r.kt)("h3",{id:"cron-resets-the-modified-date-of-your-interview"},(0,r.kt)("inlineCode",{parentName:"h3"},"cron")," resets the ",(0,r.kt)("inlineCode",{parentName:"h3"},"modified")," date of your interview"),(0,r.kt)("p",null,"Whenever the ",(0,r.kt)("inlineCode",{parentName:"p"},"cron")," system runs, it updates the ",(0,r.kt)("inlineCode",{parentName:"p"},"modified")," date of the interview.\nThis will bump the interview up on the user's list of recent interviews. It also\nmeans that it will extend the date that the session is on the server. By default,\ndocassemble deletes unused sessions after 90 days. The 90 days won't start running\nuntil ",(0,r.kt)("inlineCode",{parentName:"p"},"cron")," is explicitly stopped in the interview."),(0,r.kt)("p",null,"By default, the Assembly Line reminders system shuts off ",(0,r.kt)("inlineCode",{parentName:"p"},"cron")," (for the specific\nuser's session) after all reminders have been sent."),(0,r.kt)("p",null,"This is just good to keep in mind when you describe your data retention policies to users."))}u.isMDXComponent=!0},2666:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/reminders_question-b1932db48f17f00a37dff1c998de6ad8.png"}}]);