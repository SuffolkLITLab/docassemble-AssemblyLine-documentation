"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[5140],{7770:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"components/EFSPIntegration/py_efsp_client","title":"EFSPIntegration.py_efsp_client","description":"* EFSPIntegration.py\\\\efsp\\\\client","source":"@site/docs/components/EFSPIntegration/py_efsp_client.md","sourceDirName":"components/EFSPIntegration","slug":"/components/EFSPIntegration/py_efsp_client","permalink":"/docs/components/EFSPIntegration/py_efsp_client","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/EFSPIntegration/py_efsp_client.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"EFSPIntegration.interview_logic","permalink":"/docs/components/EFSPIntegration/interview_logic"},"next":{"title":"WIP Intro","permalink":"/docs/components/ALKiln/intro"}}');var s=t(4848),r=t(8453);const o={},c="EFSPIntegration.py_efsp_client",l={},a=[{value:"CORR_ID_HEADER",id:"corr_id_header",level:3},{value:"LoggerWithContext Objects",id:"loggerwithcontext-objects",level:2},{value:"EfspConnection Objects",id:"efspconnection-objects",level:2},{value:"__init__",id:"__init__",level:3},{value:"Arguments",id:"arguments",level:4},{value:"authenticate_user",id:"authenticate_user",level:3},{value:"register_user",id:"register_user",level:3},{value:"get_password_rules",id:"get_password_rules",level:3},{value:"get_notification_options",id:"get_notification_options",level:3},{value:"get_firm",id:"get_firm",level:3},{value:"update_firm",id:"update_firm",level:3},{value:"get_courts",id:"get_courts",level:3},{value:"get_court",id:"get_court",level:3},{value:"get_court_list",id:"get_court_list",level:3},{value:"get_filing_list",id:"get_filing_list",level:3},{value:"get_service_types",id:"get_service_types",level:3},{value:"get_cases_raw",id:"get_cases_raw",level:3}];function _(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"efspintegrationpy_efsp_client",children:"EFSPIntegration.py_efsp_client"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client",children:"EFSPIntegration.py_efsp_client"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.CORR_ID_HEADER",children:"CORR_ID_HEADER"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.LoggerWithContext",children:"LoggerWithContext"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection",children:"EfspConnection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.__init__",children:"__init__"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.authenticate_user",children:"authenticate_user"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.register_user",children:"register_user"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_password_rules",children:"get_password_rules"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_notification_options",children:"get_notification_options"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_firm",children:"get_firm"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.update_firm",children:"update_firm"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_courts",children:"get_courts"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_court",children:"get_court"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_court_list",children:"get_court_list"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_filing_list",children:"get_filing_list"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_service_types",children:"get_service_types"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#EFSPIntegration.py_efsp_client.EfspConnection.get_cases_raw",children:"get_cases_raw"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The base python client used to communicate with the E-file proxy server."}),"\n",(0,s.jsx)(n.p,{children:"Doesn't include anything from docassemble, and can be used without having it installed."}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.CORR_ID_HEADER"}),"\n",(0,s.jsx)(n.h3,{id:"corr_id_header",children:"CORR_ID_HEADER"}),"\n",(0,s.jsx)(n.p,{children:"TODO(brycew): Figure out how to add"}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.LoggerWithContext"}),"\n",(0,s.jsx)(n.h2,{id:"loggerwithcontext-objects",children:"LoggerWithContext Objects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class LoggerWithContext(LoggerAdapter)\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Acts like the ",(0,s.jsx)(n.code,{children:"merge_extra"})," feature from LoggerAdapter (python 3.13) is always on."]}),"\n",(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"https://github.com/python/cpython/pull/107292/files",children:"https://github.com/python/cpython/pull/107292/files"}),"."]}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection"}),"\n",(0,s.jsx)(n.h2,{id:"efspconnection-objects",children:"EfspConnection Objects"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class EfspConnection()\n"})}),"\n",(0,s.jsx)(n.p,{children:"A python client that communicates with the E-file proxy server."}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.__init__"}),"\n",(0,s.jsx)(n.h3,{id:"__init__",children:"__init__"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def __init__(*,\n             url: str,\n             api_key: str,\n             default_jurisdiction: str = None,\n             logger=None)\n"})}),"\n",(0,s.jsx)(n.h4,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsx)(n.p,{children:"url (str)\napi_key (str)\ndefault_jurisdiction (str)"}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.authenticate_user"}),"\n",(0,s.jsx)(n.h3,{id:"authenticate_user",children:"authenticate_user"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def authenticate_user(*,\n                      tyler_email: Optional[str] = None,\n                      tyler_password: Optional[str] = None,\n                      jeffnet_key: Optional[str] = None,\n                      jurisdiction: str = None) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"Authenticates the user with the EFM server (not the E-file proxy)."}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.register_user"}),"\n",(0,s.jsx)(n.h3,{id:"register_user",children:"register_user"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def register_user(person: dict,\n                  registration_type: str,\n                  *,\n                  password: str = None,\n                  firm_name_or_id: str = None) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"registration_type needs to be INDIVIDUAL, FIRM_ADMINISTRATOR, or FIRM_ADMIN_NEW_MEMBER.\nIf registration_type is INDIVIDUAL or FIRM_ADMINISTRATOR, you need a password.\nIf it's FIRM_ADMINISTRATOR or FIRM_ADMIN_NEW_MEMBER, you need a firm_name_or_id"}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_password_rules"}),"\n",(0,s.jsx)(n.h3,{id:"get_password_rules",children:"get_password_rules"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_password_rules() -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"Password rules are stored in the global court, id 0."}),"\n",(0,s.jsx)(n.p,{children:"TODO: They're in other courts too, including 1. Could they ever be different?"}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_notification_options"}),"\n",(0,s.jsx)(n.h3,{id:"get_notification_options",children:"get_notification_options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_notification_options() -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"AKA NotificationPreferencesList"}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_firm"}),"\n",(0,s.jsx)(n.h3,{id:"get_firm",children:"get_firm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_firm() -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:'Gets info about the "firm" for an associated user. If a user is a pro-se, this\ncontains their address information.'}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.update_firm"}),"\n",(0,s.jsx)(n.h3,{id:"update_firm",children:"update_firm"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def update_firm(firm: dict) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"firm should have the below keys:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"firstName, middleName, lastName if it's a person"}),"\n",(0,s.jsx)(n.li,{children:"firmName if it's a business"}),"\n",(0,s.jsx)(n.li,{children:"address (a dict), with keys addressLine1 addressLine2, city, state, zipCode, country"}),"\n",(0,s.jsx)(n.li,{children:"phoneNumber"}),"\n",(0,s.jsx)(n.li,{children:"email"}),"\n"]}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_courts"}),"\n",(0,s.jsx)(n.h3,{id:"get_courts",children:"get_courts"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_courts(fileable_only: bool = False,\n               with_names: bool = False) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gets the list of courts."}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_court"}),"\n",(0,s.jsx)(n.h3,{id:"get_court",children:"get_court"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_court(court_id: str) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"Gets codes for a specific court"}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_court_list"}),"\n",(0,s.jsx)(n.h3,{id:"get_court_list",children:"get_court_list"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_court_list() -> ApiResponse\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Gets a list of all of the courts that you can file into. Slightly more limited than\n",(0,s.jsx)(n.a,{href:"#get_courts",children:"get_courts"})]}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_filing_list"}),"\n",(0,s.jsx)(n.h3,{id:"get_filing_list",children:"get_filing_list"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_filing_list(court_id: str,\n                    user_id: str = None,\n                    start_date: datetime = None,\n                    before_date: datetime = None) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"Returns a list of filings that a particular user has made with a court."}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_service_types"}),"\n",(0,s.jsx)(n.h3,{id:"get_service_types",children:"get_service_types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_service_types(court_id: str, all_vars: dict = None) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"Checks the court info: if it has conditional service types, call a special API with all filing info so far to get service types"}),"\n",(0,s.jsx)("a",{id:"EFSPIntegration.py_efsp_client.EfspConnection.get_cases_raw"}),"\n",(0,s.jsx)(n.h3,{id:"get_cases_raw",children:"get_cases_raw"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"def get_cases_raw(court_id: str,\n                  *,\n                  person_name: dict = None,\n                  business_name: str = None,\n                  docket_number: str = None) -> ApiResponse\n"})}),"\n",(0,s.jsx)(n.p,{children:"Finds existing cases at a particular court. Only one of person_name, business_name, or docket_number should be\nprovided at a time.\nParams:\ncourt_id (str)\nperson_name (dict)\nbusiness_name (str)\ndocket_number (str)"})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(_,{...e})}):_(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const s={},r=i.createContext(s);function o(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);