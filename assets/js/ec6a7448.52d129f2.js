"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[3705],{2077:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"components/ALToolbox/save_input_data","title":"ALToolbox.save_input_data","description":"* ALToolbox.save\\\\input\\\\data","source":"@site/docs/components/ALToolbox/save_input_data.md","sourceDirName":"components/ALToolbox","slug":"/components/ALToolbox/save_input_data","permalink":"/docs/components/ALToolbox/save_input_data","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/ALToolbox/save_input_data.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"ALToolbox.misc","permalink":"/docs/components/ALToolbox/misc"},"next":{"title":"ALToolbox.llms","permalink":"/docs/components/ALToolbox/llms"}}');var a=n(4848),o=n(8453);const i={},l="ALToolbox.save_input_data",r={},c=[{value:"save_input_data",id:"save_input_data",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Notes",id:"notes",level:4}];function d(e){const t={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"altoolboxsave_input_data",children:"ALToolbox.save_input_data"})}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.a,{href:"#ALToolbox.save_input_data",children:"ALToolbox.save_input_data"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:(0,a.jsx)(t.a,{href:"#ALToolbox.save_input_data.save_input_data",children:"save_input_data"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)("a",{id:"ALToolbox.save_input_data.save_input_data"}),"\n",(0,a.jsx)(t.h3,{id:"save_input_data",children:"save_input_data"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'def save_input_data(title: str = "",\n                    input_dict: Optional[Dict[str, Any]] = None,\n                    tags: Optional[List[str]] = None) -> None\n'})}),"\n",(0,a.jsx)(t.p,{children:"Save survey interview input data to JSON storage for data reporting purposes."}),"\n",(0,a.jsx)(t.p,{children:"Processes and stores user input data from survey-type interviews into the\nDocassemble JSON storage system. Automatically handles type inference and\nflattening of complex data structures like checkboxes and multiselect fields."}),"\n",(0,a.jsx)(t.h4,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"title"})," ",(0,a.jsx)(t.em,{children:"str, optional"}),' - A descriptive title for this data entry.\nDefaults to "".']}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"input_dict"})," ",(0,a.jsx)(t.em,{children:"Optional[Dict[str, Any]], optional"})," - Dictionary mapping field\nnames to their values from interview questions. Values can be strings,\nfloats, ints, or DADict objects. If None, an empty dict is used.\nDefaults to None."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.code,{children:"tags"})," ",(0,a.jsx)(t.em,{children:"Optional[List[str]], optional"})," - List of string tags to associate\nwith this data entry for categorization and filtering. Defaults to None."]}),"\n"]}),"\n",(0,a.jsx)(t.h4,{id:"notes",children:"Notes"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsx)(t.li,{children:"This function saves data to storage but does not return anything"}),"\n",(0,a.jsx)(t.li,{children:"Checkbox and multiselect fields (DADict) are automatically flattened\nso each option becomes a separate database column with a boolean value"}),"\n",(0,a.jsx)(t.li,{children:"Each call creates one database record per interview session"}),"\n",(0,a.jsx)(t.li,{children:"Data is stored with a random 32-character alphanumeric key"}),"\n"]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Example"}),":"]}),"\n",(0,a.jsx)(t.p,{children:'>>> survey_data = {\n...     "age": 25,\n...     "income": 50000.0,\n...     "interests": my_checkbox_dict\n... }\n>>> save_input_data("User Survey", survey_data, ["survey", "demographics"])'})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var s=n(6540);const a={},o=s.createContext(a);function i(e){const t=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);