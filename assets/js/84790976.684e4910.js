"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[9885],{9645:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});var r=n(4848),i=n(8453);const d={id:"document_variables_reference",title:"Field labels to use in template files",sidebar_label:"Field labels to use in template files",slug:"/label_variables"},l=void 0,t={id:"document_variables_reference",title:"Field labels to use in template files",description:"The Document Assembly Line framework can help you automate templates that use any",source:"@site/docs/doc_vars_reference.md",sourceDirName:".",slug:"/label_variables",permalink:"/docs/label_variables",draft:!1,unlisted:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/doc_vars_reference.md",tags:[],version:"current",frontMatter:{id:"document_variables_reference",title:"Field labels to use in template files",sidebar_label:"Field labels to use in template files",slug:"/label_variables"},sidebar:"docs",previous:{title:"Dynamic phrasing based on values",permalink:"/docs/authoring/dynamic_phrasing_based_on_values"},next:{title:"Name formats",permalink:"/docs/naming"}},a={},o=[{value:"Example documents",id:"example-documents",level:2},{value:"The basics",id:"the-basics",level:2},{value:"Fields, labels, and variables",id:"fields-labels-and-variables",level:3},{value:"General rules for labels",id:"general-rules-for-labels",level:3},{value:"Labels should be valid Python variable names that start with a letter",id:"labels-should-be-valid-python-variable-names-that-start-with-a-letter",level:4},{value:"Variable names are case sensitive - make them all lowercase",id:"variable-names-are-case-sensitive---make-them-all-lowercase",level:4},{value:"Use the Python <code>snake_case</code> format for field labels",id:"use-the-python-snake_case-format-for-field-labels",level:4},{value:"Use short but descriptive labels",id:"use-short-but-descriptive-labels",level:4},{value:"Some suggestions for coming up with custom labels",id:"some-suggestions-for-coming-up-with-custom-labels",level:4},{value:"How the Assembly Line labels work",id:"how-the-assembly-line-labels-work",level:3},{value:"Special names for special roles: <code>users</code> and <code>other_parties</code>",id:"special-names-for-special-roles-users-and-other_parties",level:3},{value:"People are &quot;plural&quot; by default",id:"people-are-plural-by-default",level:3},{value:"Special situation for names of people in PDFs",id:"special-situation-for-names-of-people-in-pdfs",level:3},{value:"Labels for people, places, and things",id:"labels-for-people-places-and-things",level:2},{value:"Labels for people&#39;s names",id:"standard-roles",level:3},{value:"Custom names",id:"custom-names",level:4},{value:"Different forms of someone&#39;s name",id:"peron-names",level:4},{value:"Listing all parties at once",id:"listing-all-parties-at-once",level:4},{value:"Demographic data for people",id:"person-demographics",level:3},{value:"Addresses",id:"address-fields",level:3},{value:"Other contact information",id:"person-contact-information",level:3},{value:"Signatures",id:"person-signatures",level:3},{value:"Information about court and court processes",id:"courts",level:3},{value:"Special endings to mark data types",id:"special-endings-to-mark-data-types",level:2},{value:"Indicating paired yes/no checkboxes",id:"yes-no-fields",level:3},{value:"Marking dates",id:"dates",level:3},{value:"Marking currency figures",id:"currency-fields",level:3},{value:"Dealing with PDF limitations - adding the same field twice",id:"dealing-with-pdf-limitations---adding-the-same-field-twice",level:2},{value:"Remember, you will always have a chance to fix things later",id:"remember-you-will-always-have-a-chance-to-fix-things-later",level:2},{value:"See also",id:"see-also",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.p,{children:["The Document Assembly Line framework can help you automate templates that use any\nfield (or ",(0,r.jsx)(s.code,{children:"variable"}),") names that you choose. However, you should use the names\nthat we list below for full compatibility."]}),"\n",(0,r.jsx)(s.h2,{id:"example-documents",children:"Example documents"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(2331).A+"",children:"A fully labeled PDF"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:n(5673).A+"",children:"The DOCX version of the same motion"})}),"\n"]}),"\n",(0,r.jsxs)(s.admonition,{title:"Use a custom AI assistant for labeling instead",type:"info",children:[(0,r.jsx)(s.p,{children:"As a supplement to reading these documents, you can use a Custom GPT to apply the information they contain:"}),(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://chatgpt.com/g/g-YXA6N4aNQ-weaver-field-name-assistant-for-docx-files",children:"Custom GPT to label DOCX files"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"https://chatgpt.com/g/g-UVwQeaoIb-weaver-field-name-assistant-for-pdfs",children:"Custom GPT to label PDF files"})}),"\n"]}),(0,r.jsx)(s.p,{children:"The Custom GPTs have instructions to help you come up with a label for any field in your document\nthat follows the rules."}),(0,r.jsx)(s.p,{children:"AI can make mistakes! Always double-check the information it gives you."})]}),"\n",(0,r.jsx)(s.h2,{id:"the-basics",children:"The basics"}),"\n",(0,r.jsx)(s.h3,{id:"fields-labels-and-variables",children:"Fields, labels, and variables"}),"\n",(0,r.jsxs)(s.p,{children:["A blank space on a paper form is usually called a ",(0,r.jsx)(s.code,{children:"form field"}),", or ",(0,r.jsx)(s.code,{children:"field"})," for\nshort. We call adding unique names that refer to those blank spaces ",(0,r.jsx)(s.code,{children:"labeling"}),"\nthem."]}),"\n",(0,r.jsxs)(s.p,{children:["When you access the labeled field in your Docassemble code, it is usually called\na ",(0,r.jsx)(s.code,{children:"variable"}),"."]}),"\n",(0,r.jsx)(s.h3,{id:"general-rules-for-labels",children:"General rules for labels"}),"\n",(0,r.jsx)(s.p,{children:"You should always use the specific labels from this page when they match the\nconcepts in your form. But if you cannot find a matching label, use the general\nrules below to add as many custom labels as you need."}),"\n",(0,r.jsx)(s.h4,{id:"labels-should-be-valid-python-variable-names-that-start-with-a-letter",children:"Labels should be valid Python variable names that start with a letter"}),"\n",(0,r.jsxs)(s.p,{children:["PDF and DOCX ",(0,r.jsx)(s.code,{children:"labels"})," should also work as valid ",(0,r.jsx)(s.a,{href:"/docs/coding_style_guide/python",children:"Python variable\nnames"}),". The basic rule is that Python variable names\nneed to start with a letter and can only contain letters, digits, and the ",(0,r.jsx)(s.code,{children:"_"}),"\nunderscore character. Some variable names are\n",(0,r.jsx)(s.a,{href:"/docs/framework/reserved_keywords",children:"reserved"})," and have a special meaning inside\nAssemblyLine interviews. You should not use a variable name on the\n",(0,r.jsx)(s.a,{href:"/docs/framework/reserved_keywords",children:"reserved"})," list. Doing so can lead to\nhard to track bugs."]}),"\n",(0,r.jsx)(s.h4,{id:"variable-names-are-case-sensitive---make-them-all-lowercase",children:"Variable names are case sensitive - make them all lowercase"}),"\n",(0,r.jsx)(s.p,{children:"Field names are case sensitive. The convention is to never re-use variable names\nwith different capitalizations to store different things. Stick with all lower\ncase names for fields when possible."}),"\n",(0,r.jsxs)(s.h4,{id:"use-the-python-snake_case-format-for-field-labels",children:["Use the Python ",(0,r.jsx)(s.code,{children:"snake_case"})," format for field labels"]}),"\n",(0,r.jsxs)(s.p,{children:["In PDFs, labels should be all one word, lowercase, with multiple words separated\nby an underscore, the ",(0,r.jsx)(s.code,{children:"_"})," character. This convention is called ",(0,r.jsx)(s.code,{children:"snake_case"}),". Do\nnot use a ",(0,r.jsx)(s.code,{children:"."})," symbol or ",(0,r.jsx)(s.code,{children:"[]"})," inside a PDF field's ",(0,r.jsx)(s.code,{children:"label"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["In a DOCX file, you can use the ",(0,r.jsx)(s.code,{children:"."})," symbol as well as brackets ",(0,r.jsx)(s.code,{children:"[]"})," but they\nhave a special meaning. The ",(0,r.jsx)(s.code,{children:"."})," separates an ",(0,r.jsx)(s.code,{children:"object"})," from its ",(0,r.jsx)(s.code,{children:"attribute"}),", and\nthe ",(0,r.jsx)(s.code,{children:"[]"})," indicates that you are referencing a list of items. Beginners should\navoid these symbols ",(0,r.jsx)(s.strong,{children:"except"})," when instructed to do so for one of the variable\nnames below."]}),"\n",(0,r.jsx)(s.h4,{id:"use-short-but-descriptive-labels",children:"Use short but descriptive labels"}),"\n",(0,r.jsx)(s.p,{children:"Use variable names that are descriptive but also short. Avoid using\nabbreviations. A good rule of thumb is to spell out acronyms and initialisms for\nclarity, but to freely remove words other than nouns and verbs to keep the names\nshort. Use a name you would still understand if you read it in a year."}),"\n",(0,r.jsx)(s.p,{children:"About 30 characters is a good limit to the length of a variable name. It's\nunusual to need more than that. If your variable name is shorter than 5 characters,\nit might not be descriptive enough."}),"\n",(0,r.jsx)(s.h4,{id:"some-suggestions-for-coming-up-with-custom-labels",children:"Some suggestions for coming up with custom labels"}),"\n",(0,r.jsx)(s.p,{children:"There are no hard and fast rules other than the ones listed above, but here are\nsome conventions that may help you:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:'Drop words from the variable name that don\'t add specific meaning. Filler\nwords like "a", "the", etc. are almost never needed. Stick with nouns and\nverbs.'}),"\n",(0,r.jsxs)(s.li,{children:["Yes/no variables (also called ",(0,r.jsx)(s.code,{children:"boolean"}),') commonly start with a form of the\nverb "to be" or "to have", paired with a noun. E.g., ',(0,r.jsx)(s.code,{children:"is_attorney"})," or\n",(0,r.jsx)(s.code,{children:"has_notice_to_quit"}),". You can also use other verbs--",(0,r.jsx)(s.code,{children:"writes_docassemble"})," or\n",(0,r.jsx)(s.code,{children:"saved_status"})," or ",(0,r.jsx)(s.code,{children:"wants_copies_returned"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Do not include the ",(0,r.jsx)(s.strong,{children:"type"})," of variable in the variable name itself. It is\nusually redundant and is not a common Python style. Exception: you might add\nsomething like ",(0,r.jsx)(s.code,{children:"_list"})," or ",(0,r.jsx)(s.code,{children:"_date"})," that is both a type and is descriptive of\nthe variable's real world contents."]}),"\n",(0,r.jsxs)(s.li,{children:["There are now a number of ",(0,r.jsx)(s.a,{href:"https://github.com/search?q=%22docassemble.AssemblyLine%22&type=code",children:"samples of\ninterviews"}),"\nbuilt with the Assembly Line framework that you can find online. You can get\nideas for variable names to use in your interview that match if they apply to\nthe same concepts."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"When you're stuck, feel free to ask for help! It's a good idea to get a second\nopinion the first few times you label a document. A fellow programmer may have\nsome good ideas to make your variable names shorter, clearer, or more closely\nfollow programming conventions."}),"\n",(0,r.jsx)(s.h3,{id:"how-the-assembly-line-labels-work",children:"How the Assembly Line labels work"}),"\n",(0,r.jsx)(s.p,{children:"We have identified common fields that exist in most paper court forms:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"names of people"}),"\n",(0,r.jsx)(s.li,{children:"addresses"}),"\n",(0,r.jsx)(s.li,{children:"information that identifies the court"}),"\n",(0,r.jsx)(s.li,{children:"signatures"}),"\n",(0,r.jsx)(s.li,{children:"dates"}),"\n",(0,r.jsx)(s.li,{children:"currency figures"}),"\n",(0,r.jsx)(s.li,{children:"a pair of yes/no checkboxes"}),"\n",(0,r.jsx)(s.li,{children:"docket numbers or court filing numbers"}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"We came up with a convention to identify the roles that people may play in\nrelation to your form:"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:'The "user" of the form: the person who the form is being filed for, making a\nrequest or response to the court'}),"\n",(0,r.jsx)(s.li,{children:'The "other_party" of the form: the person who the user is responding to or suing'}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"We have also identified some common names for people that appear across many\nforms."}),"\n",(0,r.jsx)(s.p,{children:"By using the labels for fields that we selected, you will be able to use the\nquestions that we have vetted and pre-written without needing to write them from\nscratch. You still have the option to customize those questions later."}),"\n",(0,r.jsx)(s.admonition,{title:"A note about objects",type:"note",children:(0,r.jsxs)(s.p,{children:["For those with programming experience, we turn most of the field labels that we\nrecognize into ",(0,r.jsx)(s.code,{children:"objects"}),". Learn more about the ",(0,r.jsx)(s.a,{href:"https://docassemble.org/docs/objects.html#Individual",children:"Individual\nobject"})," in the Docassemble\ndocumentation."]})}),"\n",(0,r.jsxs)(s.h3,{id:"special-names-for-special-roles-users-and-other_parties",children:["Special names for special roles: ",(0,r.jsx)(s.code,{children:"users"})," and ",(0,r.jsx)(s.code,{children:"other_parties"})]}),"\n",(0,r.jsxs)(s.p,{children:["Where possible, you should use the label ",(0,r.jsx)(s.code,{children:"users"})," for the person who the\ninterview is benefiting and ",(0,r.jsx)(s.code,{children:"other_parties"})," for the person that is on the other\nside of their dispute. Sometimes this is not known. In that situation, you\ncan use the labels ",(0,r.jsx)(s.code,{children:"plaintiffs"})," and ",(0,r.jsx)(s.code,{children:"defendants"})," or ",(0,r.jsx)(s.code,{children:"petitioners"})," and ",(0,r.jsx)(s.code,{children:"respondents"}),"."]}),"\n",(0,r.jsx)(s.admonition,{type:"important",children:(0,r.jsxs)(s.p,{children:["The term ",(0,r.jsx)(s.code,{children:"users"}),' does not always mean the person sitting in front of the screen.\nWe use the term "user" to mean the person who the form is ',(0,r.jsx)(s.strong,{children:"for"}),". I.e.,\nit should usually not be used to identify an attorney or advocate filling\nin a form for someone else. In a court case, the ",(0,r.jsx)(s.code,{children:"user"})," should normally\nbe a party to the case."]})}),"\n",(0,r.jsx)(s.h3,{id:"people-are-plural-by-default",children:'People are "plural" by default'}),"\n",(0,r.jsx)(s.p,{children:"We made the choice to make all variables representing people plural by default.\nThis allows us to use consistent terms across the many forms that do allow multiple\nparties in different roles."}),"\n",(0,r.jsx)(s.h3,{id:"special-situation-for-names-of-people-in-pdfs",children:"Special situation for names of people in PDFs"}),"\n",(0,r.jsx)(s.p,{children:"In PDF forms, you can identify a single person's name like this:"}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"users1"}),", ",(0,r.jsx)(s.code,{children:"users2"}),". This is due to a limit in how PDF labels work."]}),"\n",(0,r.jsxs)(s.p,{children:["When the form is automated in the Weaver, the field name becomes part of a list:\n",(0,r.jsx)(s.code,{children:"users"}),". There is also a special syntax that lets you indicate which item in the\nlist you are accessing, with the first item starting at 0: ",(0,r.jsx)(s.code,{children:"users[0]"})," represents\nthe first user, ",(0,r.jsx)(s.code,{children:"users[1]"})," the second, and so on."]}),"\n",(0,r.jsxs)(s.p,{children:["The Docassemble and DOCX variable name ",(0,r.jsx)(s.code,{children:"users[0]"})," is the equivalent of ",(0,r.jsx)(s.code,{children:"users"}),"\nor ",(0,r.jsx)(s.code,{children:"users1"})," in a PDF label. ",(0,r.jsx)(s.code,{children:"users[1]"})," is the equivalent of ",(0,r.jsx)(s.code,{children:"user2"}),"."]}),"\n",(0,r.jsx)(s.p,{children:"Names are not transformed at all when you work in a DOCX template. You need to use the\nDocassemble syntax from the beginning if you are identifying a specific person in a list."}),"\n",(0,r.jsx)(s.h2,{id:"labels-for-people-places-and-things",children:"Labels for people, places, and things"}),"\n",(0,r.jsx)(s.h3,{id:"standard-roles",children:"Labels for people's names"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"users"})," (Always use this for the person benefiting from the form)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"other_parties"})," (Always use this for the opposing party)"]}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"plaintiffs"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"defendants"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"petitioners"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"respondents"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"children"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"spouses"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"parents"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"caregivers"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"attorneys"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"translators"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"debt_collectors"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"creditors"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"witnesses"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"guardians_ad_litem"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"guardians"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"decedents"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.code,{children:"interested_parties"})}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{title:"Historical note",type:"note",children:(0,r.jsxs)(s.p,{children:["When the Assembly Line Project first began, we used ",(0,r.jsx)(s.strong,{children:"singular"})," names for\npeople that were then automatically turned into ",(0,r.jsx)(s.strong,{children:"plural"})," names. Like: ",(0,r.jsx)(s.code,{children:"user"}),"\nbecame ",(0,r.jsx)(s.code,{children:"users"}),". This feature still works but is confusing now that we automate\nboth PDF forms and DOCX templates. We do not recommend using it any longer."]})}),"\n",(0,r.jsx)(s.h4,{id:"custom-names",children:"Custom names"}),"\n",(0,r.jsxs)(s.p,{children:["You can add your own custom names for people to represent concepts that are not\nlisted above. Just use them in a way that matches specific information about the person\nbelow--like ",(0,r.jsx)(s.code,{children:"custom_name"}),", ",(0,r.jsx)(s.code,{children:"custom_name_first"}),", etc. and the Weaver tool will\nprompt you to decide if they should be treated as like people in the automation process."]}),"\n",(0,r.jsx)(s.h4,{id:"peron-names",children:"Different forms of someone's name"}),"\n",(0,r.jsxs)(s.p,{children:["Substitute the name ",(0,r.jsx)(s.code,{children:"users"})," with any of the names listed above."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"users1_name"})," or ",(0,r.jsx)(s.code,{children:"users1_name_full"})]}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"users[0]"})," or ",(0,r.jsx)(s.code,{children:"users[0].name.full()"})]}),(0,r.jsx)(s.td,{children:"Full name"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_name_first"})}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"users[0].name.first"})," or ",(0,r.jsx)(s.code,{children:"users[0].familiar()"})]}),(0,r.jsx)(s.td,{children:"First name only"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_name_middle"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].name.middle"})}),(0,r.jsx)(s.td,{children:"Middle name only"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_name_middle_initial"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].name.middle_initial()"})}),(0,r.jsx)(s.td,{children:"First letter of middle name"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_name_last"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].name.last"})}),(0,r.jsx)(s.td,{children:"Last name only"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_name_suffix"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].name.suffix"})}),(0,r.jsx)(s.td,{children:"Suffix of user's name only"})]})]})]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsxs)(s.p,{children:['If the form has only one "user", "plaintiff", etc., it is not necessary to use a digit.\nYou can just write ',(0,r.jsx)(s.code,{children:"users_name"}),", for example."]})}),"\n",(0,r.jsx)(s.h4,{id:"listing-all-parties-at-once",children:"Listing all parties at once"}),"\n",(0,r.jsxs)(s.p,{children:["In a DOCX file, writing out ",(0,r.jsx)(s.code,{children:"users"})," will list all of the ",(0,r.jsx)(s.code,{children:"users"}),"\nadded to the form, separated by a comma. Writing ",(0,r.jsx)(s.code,{children:"users.familiar()"}),"\nwill list all of the first names of each ",(0,r.jsx)(s.code,{children:"user"})," separated by a comma."]}),"\n",(0,r.jsx)(s.p,{children:"This works for any Docassemble list."}),"\n",(0,r.jsx)(s.h3,{id:"person-demographics",children:"Demographic data for people"}),"\n",(0,r.jsxs)(s.p,{children:["Substitute any name for a person for ",(0,r.jsx)(s.code,{children:"users"})," below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_birthdate"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].birthdate"})}),(0,r.jsx)(s.td,{children:"Birthdate (formatted like January 1, 2021 by default)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_age"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].age_in_years()"})}),(0,r.jsx)(s.td,{children:"Calculated age (based on birthdate)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_gender"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].gender"})}),(0,r.jsx)(s.td,{children:"Gender"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_gender_female"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].gender_female"})}),(0,r.jsx)(s.td,{children:"User is female (for checkbox field)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_gender_male"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].gender_male"})}),(0,r.jsx)(s.td,{children:"User is male (for checkbox field)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_gender_other"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].gender_other"})}),(0,r.jsx)(s.td,{children:"User is not male or female (for checkbox field)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_gender_nonbinary"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].gender_nonbinary"})}),(0,r.jsx)(s.td,{children:"User identifies as nonbinary (for checkbox field)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_gender_undisclosed"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].gender_undisclosed"})}),(0,r.jsx)(s.td,{children:"User chose not to disclose gender (for checkbox field)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_gender_self_described"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].gender_self_described"})}),(0,r.jsx)(s.td,{children:"User chose to self-describe gender (for checkbox field)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"user_needs_interpreter"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"user_needs_interpreter"})}),(0,r.jsx)(s.td,{children:"User needs an interpreter (for checkbox field)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"user_preferred_language"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"user_preferred_language"})}),(0,r.jsx)(s.td,{children:"User's preferred language"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"address-fields",children:"Addresses"}),"\n",(0,r.jsxs)(s.p,{children:["Substitute any name for a person for ",(0,r.jsx)(s.code,{children:"users"})," below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_block"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.block()"})}),(0,r.jsx)(s.td,{children:"Full address, on multiple lines"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_on_one_line"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.on_one_line()"})}),(0,r.jsx)(s.td,{children:"Full address on one line"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_line_one"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.line_one()"})}),(0,r.jsx)(s.td,{children:"Line one of the address, including unit or apartment number"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_line_two"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.line_two()"})}),(0,r.jsx)(s.td,{children:"Line two of the address, usually city, state, and Zip/postal code"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_address"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.address"})}),(0,r.jsx)(s.td,{children:"Street address"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_unit"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.unit"})}),(0,r.jsx)(s.td,{children:"Apartment, unit, or suite"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_city"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.city"})}),(0,r.jsx)(s.td,{children:"City or town"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_state"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.state"})}),(0,r.jsx)(s.td,{children:"State, province, or sub-locality (dependent on country)"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_zip"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.zip"})}),(0,r.jsx)(s.td,{children:"Zip or postal code"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_county"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.county"})}),(0,r.jsx)(s.td,{children:"County or parish"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_address_country"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].address.country"})}),(0,r.jsx)(s.td,{children:"Country"})]})]})]}),"\n",(0,r.jsx)(s.admonition,{title:"Mailing addresses",type:"info",children:(0,r.jsxs)(s.p,{children:["The Assembly Line framework also supports mailing addresses. Replace ",(0,r.jsx)(s.code,{children:"address"})," with ",(0,r.jsx)(s.code,{children:"mailing_address"}),"\nto ask a separate question about the user's mailing address."]})}),"\n",(0,r.jsx)(s.h3,{id:"person-contact-information",children:"Other contact information"}),"\n",(0,r.jsxs)(s.p,{children:["Substitute any name for a person for ",(0,r.jsx)(s.code,{children:"users"})," below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_phone_number"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].phone_number"})}),(0,r.jsx)(s.td,{children:"Phone number"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_mobile_number"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].mobile_number"})}),(0,r.jsx)(s.td,{children:'A phone number explicitly labeled as the "mobile" number'})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_phones"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].phone_numbers()"})}),(0,r.jsx)(s.td,{children:"A list of both mobile and other phone numbers"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_email"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].email"})}),(0,r.jsx)(s.td,{children:"Email"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"person-signatures",children:"Signatures"}),"\n",(0,r.jsxs)(s.p,{children:["Substitute any name for a person for ",(0,r.jsx)(s.code,{children:"users"})," below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_signature"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0].signature"})}),(0,r.jsx)(s.td,{children:"Signature"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"signature_date"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"signature_date"})}),(0,r.jsx)(s.td,{children:"Date the form is completed (automatically filled in by default)"})]})]})]}),"\n",(0,r.jsx)(s.h3,{id:"courts",children:"Information about court and court processes"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court"})}),(0,r.jsx)(s.td,{children:'Court\'s full name, like: "Eastern Housing Court"'})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court_county"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court.address.county"})}),(0,r.jsx)(s.td,{children:"County where court is located"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court_division"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court.division"})}),(0,r.jsx)(s.td,{children:'Division of court (e.g., "Eastern")'})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court_department"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"trial_court.department"})}),(0,r.jsx)(s.td,{children:'Department of court (e.g., "Housing Court")'})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"docket_number"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"docket_number"})}),(0,r.jsx)(s.td,{children:"Case or docket number"})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"docket_numbers"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"docket_numbers"})}),(0,r.jsx)(s.td,{children:"A comma-separated list of docket numbers (rare but used in some family law cases)"})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"special-endings-to-mark-data-types",children:"Special endings to mark data types"}),"\n",(0,r.jsx)(s.p,{children:"Usually, it is not recommended to mark the type of fields in Docassemble. There are\na few exceptions that both mark type and carry a separate meaning that the Weaver\nwill recognize."}),"\n",(0,r.jsx)(s.h3,{id:"yes-no-fields",children:"Indicating paired yes/no checkboxes"}),"\n",(0,r.jsx)(s.p,{children:"The Weaver turns paired yes/no checkboxes into a single Docassemble variable."}),"\n",(0,r.jsxs)(s.p,{children:["Use any valid keyword to replace ",(0,r.jsx)(s.code,{children:"is_minor"})," in the example below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"is_minor_yes"}),", ",(0,r.jsx)(s.code,{children:"is_minor_no"})]}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"is_minor"})}),(0,r.jsx)(s.td,{children:"Indicates the user is a minor"})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"dates",children:"Marking dates"}),"\n",(0,r.jsxs)(s.p,{children:["Marking dates is optional. If you do mark a field with the ",(0,r.jsx)(s.code,{children:"_date"})," suffix,\nthe Weaver will automatically recognize it as a date."]}),"\n",(0,r.jsxs)(s.p,{children:["Replace ",(0,r.jsx)(s.code,{children:"firm_founding"})," with any valid keyword in the example below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"firm_founding_date"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"firm_founding_date"})}),(0,r.jsx)(s.td,{children:"Will be recognized as a date field by the Weaver."})]})})]}),"\n",(0,r.jsx)(s.h3,{id:"currency-fields",children:"Marking currency figures"}),"\n",(0,r.jsxs)(s.p,{children:["Marking currency values is optional. If you do mark a field with ",(0,r.jsx)(s.code,{children:"_amount"})," or ",(0,r.jsx)(s.code,{children:"_value"}),",\nthe Weaver will automatically recognize it as a currency amount."]}),"\n",(0,r.jsxs)(s.p,{children:["Replace ",(0,r.jsx)(s.code,{children:"expense_rent"})," or ",(0,r.jsx)(s.code,{children:"house"})," with any valid keyword in the example below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"expense_rent_amount"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"expense_rent_amount"})}),(0,r.jsx)(s.td,{children:"Will be recognized as a currency value by the Weaver."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"house_value"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"house_value"})}),(0,r.jsx)(s.td,{children:"Will be recognized as a currency value by the Weaver."})]})]})]}),"\n",(0,r.jsx)(s.h2,{id:"dealing-with-pdf-limitations---adding-the-same-field-twice",children:"Dealing with PDF limitations - adding the same field twice"}),"\n",(0,r.jsx)(s.p,{children:"Docassemble does not work with PDF forms that use the same label for a field\ntwice."}),"\n",(0,r.jsxs)(s.p,{children:["To work around this issue, annotate the second or third field with two\nunderscores and any digit, like this: ",(0,r.jsx)(s.code,{children:"__1"}),"."]}),"\n",(0,r.jsxs)(s.p,{children:["Replace ",(0,r.jsx)(s.code,{children:"users1_name"})," with any other valid field name in the example below."]}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"PDF variation"}),(0,r.jsx)(s.th,{children:"Docassemble / DOCX form"}),(0,r.jsx)(s.th,{children:"Meaning"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users1_name__1"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0]"})}),(0,r.jsx)(s.td,{children:"Allows you to label two fields in the PDF to contain the user's name."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"user1_name__2"})}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"users[0]"})}),(0,r.jsx)(s.td,{children:"Same as above"})]})]})]}),"\n",(0,r.jsx)(s.p,{children:"DOCX files do not have any limit on using the same variable name twice.\nThis special syntax only applies to PDF templates."}),"\n",(0,r.jsx)(s.admonition,{title:"Use any digit",type:"note",children:(0,r.jsxs)(s.p,{children:["Docassemble does not do anything with the digit. Feel free to use ",(0,r.jsx)(s.code,{children:"__1"}),", ",(0,r.jsx)(s.code,{children:"__99"})," or any\nother series of digits, in any order."]})}),"\n",(0,r.jsx)(s.h2,{id:"remember-you-will-always-have-a-chance-to-fix-things-later",children:"Remember, you will always have a chance to fix things later"}),"\n",(0,r.jsx)(s.p,{children:"Do your best to get your template right before running it through the Weaver.\nGetting things right at the beginning can save you a lot of time and effort."}),"\n",(0,r.jsx)(s.p,{children:"However, you can always edit your template later. When you make changes to your\ntemplate, you do not need to run it through the Weaver again. You can upload\nyour edited template directly to the Docassemble playground's templates folder."}),"\n",(0,r.jsx)(s.h2,{id:"see-also",children:"See also"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"/docs/framework/reserved_keywords",children:"List of reserved variable names"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},5673:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/files/generic_motion_family_law-5bd3ea15f47d60d41513381f897f85fb.docx"},2331:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/files/generic_motion_family_law-4e8ec303c6cb2da97f64ce2c95c6bda7.pdf"},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>t});var r=n(6540);const i={},d=r.createContext(i);function l(e){const s=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(d.Provider,{value:s},e.children)}}}]);