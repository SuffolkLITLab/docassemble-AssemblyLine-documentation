"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[1181],{5340:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>i,default:()=>p,frontMatter:()=>c,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"components/ALToolbox/copy_button","title":"ALToolbox.copy_button","description":"* ALToolbox.copy\\\\button","source":"@site/docs/components/ALToolbox/copy_button.md","sourceDirName":"components/ALToolbox","slug":"/components/ALToolbox/copy_button","permalink":"/docs/components/ALToolbox/copy_button","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/ALToolbox/copy_button.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"ALToolbox.business_days","permalink":"/docs/components/ALToolbox/business_days"},"next":{"title":"ALToolbox.misc","permalink":"/docs/components/ALToolbox/misc"}}');var s=o(4848),l=o(8453);const c={},i="ALToolbox.copy_button",r={},a=[{value:"copy_button_html",id:"copy_button_html",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4}];function d(t){const e={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"altoolboxcopy_button",children:"ALToolbox.copy_button"})}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.a,{href:"#ALToolbox.copy_button",children:"ALToolbox.copy_button"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"#ALToolbox.copy_button.copy_button_html",children:"copy_button_html"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)("a",{id:"ALToolbox.copy_button.copy_button_html"}),"\n",(0,s.jsx)(e.h3,{id:"copy_button_html",children:"copy_button_html"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'def copy_button_html(text_to_copy: str,\n                     text_before: str = "",\n                     label: str = "Copy",\n                     tooltip_inert_text: str = "Copy to clipboard",\n                     tooltip_copied_text: str = "Copied!",\n                     copy_template_block: bool = False,\n                     scroll_class: str = "",\n                     style_class: str = "",\n                     adjust_height: str = "") -> str\n'})}),"\n",(0,s.jsx)(e.p,{children:"Return the HTML for a button that will let a user copy the given text."}),"\n",(0,s.jsx)(e.p,{children:"Creates a copy-to-clipboard button with customizable styling and tooltip text.\nThe button can be configured to display as a simple input field or as a styled\ntemplate block suitable for displaying longer content."}),"\n",(0,s.jsxs)(e.p,{children:["To use, include ",(0,s.jsx)(e.code,{children:"docassemble.ALToolbox:copy_button.yml"})," in your DA interview."]}),"\n",(0,s.jsx)(e.h4,{id:"arguments",children:"Arguments"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"text_to_copy"})," ",(0,s.jsx)(e.em,{children:"str"})," - Text you want the user to be able to copy to clipboard."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"text_before"})," ",(0,s.jsx)(e.em,{children:"str, optional"}),' - The prompt that will appear to the left of the\nHTML input. Defaults to "".']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"label"})," ",(0,s.jsx)(e.em,{children:"str, optional"}),' - The label text displayed on the copy button.\nDefaults to "Copy".']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"tooltip_inert_text"})," ",(0,s.jsx)(e.em,{children:"str, optional"}),' - Tooltip text shown when hovering over\nthe button before it\'s clicked. Defaults to "Copy to clipboard".']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"tooltip_copied_text"})," ",(0,s.jsx)(e.em,{children:"str, optional"}),' - Tooltip text shown when hovering over\nthe button after the text is placed on the clipboard. Defaults to "Copied!".']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"copy_template_block"})," ",(0,s.jsx)(e.em,{children:"bool, optional"})," - If True, displays the content in a\ntextarea with template block styling. If False, uses a simple input field.\nDefaults to False."]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"scroll_class"})," ",(0,s.jsx)(e.em,{children:"str, optional"}),' - CSS class for scroll behavior when using\ntemplate block mode. Defaults to "".']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"style_class"})," ",(0,s.jsx)(e.em,{children:"str, optional"}),' - Additional CSS classes for styling the container.\nDefaults to "".']}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"adjust_height"})," ",(0,s.jsx)(e.em,{children:"str, optional"}),' - HTML attributes for height adjustment behavior.\nDefaults to "".']}),"\n"]}),"\n",(0,s.jsx)(e.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"str"})," - Complete HTML string containing the copy button and associated elements."]}),"\n"]}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Example"}),":"]}),"\n",(0,s.jsx)(e.p,{children:'>>> copy_button_html("Hello World", text_before="Message:", label="Copy Message")\n\'<div class="al_copy">...<button class="btn btn-secondary al_copy_button">...</div>\''})]})}function p(t={}){const{wrapper:e}={...(0,l.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}},8453:(t,e,o)=>{o.d(e,{R:()=>c,x:()=>i});var n=o(6540);const s={},l=n.createContext(s);function c(t){const e=n.useContext(l);return n.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:c(t.components),n.createElement(l.Provider,{value:e},t.children)}}}]);