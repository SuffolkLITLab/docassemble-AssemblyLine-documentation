"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[3306],{4137:(e,n,a)=>{a.d(n,{Zo:()=>m,kt:()=>f});var t=a(7294);function s(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function l(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){s(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,s=function(e,n){if(null==e)return{};var a,t,s={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(s[a]=e[a]);return s}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var i=t.createContext({}),u=function(e){var n=t.useContext(i),a=n;return e&&(a="function"==typeof e?e(n):l(l({},n),e)),a},m=function(e){var n=u(e.components);return t.createElement(i.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},c=t.forwardRef((function(e,n){var a=e.components,s=e.mdxType,r=e.originalType,i=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=u(a),c=s,f=p["".concat(i,".").concat(c)]||p[c]||d[c]||r;return a?t.createElement(f,l(l({ref:n},m),{},{components:a})):t.createElement(f,l({ref:n},m))}));function f(e,n){var a=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var r=a.length,l=new Array(r);l[0]=c;var o={};for(var i in n)hasOwnProperty.call(n,i)&&(o[i]=n[i]);o.originalType=e,o[p]="string"==typeof e?e:s,l[1]=o;for(var u=2;u<r;u++)l[u]=a[u];return t.createElement.apply(null,l)}return t.createElement.apply(null,a)}c.displayName="MDXCreateElement"},425:(e,n,a)=>{a.d(n,{Z:()=>l});var t=a(7294),s=a(6010);const r="tabItem_Ymn6";function l(e){let{children:n,hidden:a,className:l}=e;return t.createElement("div",{role:"tabpanel",className:(0,s.Z)(r,l),hidden:a},n)}},4259:(e,n,a)=>{a.d(n,{Z:()=>c});var t=a(7462),s=a(7294),r=a(6010),l=a(1048),o=a(3609),i=a(1943),u=a(2957);const m="tabList__CuJ",p="tabItem_LNqP";function d(e){const{lazy:n,block:a,defaultValue:l,values:d,groupId:c,className:f}=e,b=s.Children.map(e.children,(e=>{if((0,s.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=d??b.map((e=>{let{props:{value:n,label:a,attributes:t}}=e;return{value:n,label:a,attributes:t}})),v=(0,o.l)(y,((e,n)=>e.value===n.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===l?l:l??b.find((e=>e.props.default))?.props.value??b[0].props.value;if(null!==k&&!y.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:h,setTabGroupChoices:g}=(0,i.U)(),[x,_]=(0,s.useState)(k),w=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=c){const e=h[c];null!=e&&e!==x&&y.some((n=>n.value===e))&&_(e)}const N=e=>{const n=e.currentTarget,a=w.indexOf(n),t=y[a].value;t!==x&&(T(n),_(t),null!=c&&g(c,String(t)))},q=e=>{let n=null;switch(e.key){case"Enter":N(e);break;case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;n=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;n=w[a]??w[w.length-1];break}}n?.focus()};return s.createElement("div",{className:(0,r.Z)("tabs-container",m)},s.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":a},f)},y.map((e=>{let{value:n,label:a,attributes:l}=e;return s.createElement("li",(0,t.Z)({role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,key:n,ref:e=>w.push(e),onKeyDown:q,onClick:N},l,{className:(0,r.Z)("tabs__item",p,l?.className,{"tabs__item--active":x===n})}),a??n)}))),n?(0,s.cloneElement)(b.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):s.createElement("div",{className:"margin-top--md"},b.map(((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==x})))))}function c(e){const n=(0,l.Z)();return s.createElement(d,(0,t.Z)({key:String(n)},e))}},2225:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var t=a(7462),s=(a(7294),a(4137)),r=a(4259),l=a(425);const o={id:"ql_names",title:"Names",sidebar_label:"Names",slug:"/question_library/names"},i=void 0,u={unversionedId:"question_library/ql_names",id:"question_library/ql_names",title:"Names",description:"Ask for names in parts",source:"@site/docs/question_library/names.md",sourceDirName:"question_library",slug:"/question_library/names",permalink:"/docassemble-AssemblyLine-documentation/docs/question_library/names",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/question_library/names.md",tags:[],version:"current",frontMatter:{id:"ql_names",title:"Names",sidebar_label:"Names",slug:"/question_library/names"},sidebar:"someSidebar",previous:{title:"Use input validation carefully",permalink:"/docassemble-AssemblyLine-documentation/docs/style_guide/question_style_validation"},next:{title:"Addresses",permalink:"/docassemble-AssemblyLine-documentation/docs/question_library/addresses"}},m={},p=[{value:"Ask for names in parts",id:"ask-for-names-in-parts",level:2},{value:"Optional: omit suffix",id:"optional-omit-suffix",level:3},{value:"Use a single field to get the name of a business",id:"use-a-single-field-to-get-the-name-of-a-business",level:3}],d={toc:p};function c(e){let{components:n,...o}=e;return(0,s.kt)("wrapper",(0,t.Z)({},d,o,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"ask-for-names-in-parts"},"Ask for names in parts"),(0,s.kt)("p",null,"We recognize that ",(0,s.kt)("a",{parentName:"p",href:"https://www.kalzumeus.com/2010/06/17/falsehoods-programmers-believe-about-names/"},'"names are\nhard"'),"."),(0,s.kt)("p",null,"However, in our experience, forms still expect that litigants will provide names\nin at least 2 parts: a last name (surname) and a first name (given name)."),(0,s.kt)("p",null,"We settled on using 4 standard name parts:"),(0,s.kt)("p",null,'Model "name" question:'),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"What is your name?"),(0,s.kt)("p",{parentName:"blockquote"},"First name: "),(0,s.kt)("p",{parentName:"blockquote"},"Middle name (optional): "),(0,s.kt)("p",{parentName:"blockquote"},"Last name: "),(0,s.kt)("p",{parentName:"blockquote"},"Suffix: ","[Dropdown menu]","  ")),(0,s.kt)("p",null,"In some countries, names also commonly have a prefix. Add a prefix if needed in\nyour country or culture."),(0,s.kt)(r.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"Assembly Line Example",label:"Assembly Line Example",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nid: person's name\nsets:\n  - person.name.first\n  - person.name.last\nquestion: |\n  Person's name\nfields:\n  - code: |\n      person.name_fields()\n"))),(0,s.kt)(l.Z,{value:"Vanilla Docassemble",label:"Vanilla Docassemble",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nid: person's name\nquestion: |\n  Person's name\nfields:\n  - First name: person.name.first\n  - Middle name: person.name.middle\n    required: False\n  - Last name: person.name.last\n  - Suffix: person.name.suffix\n    code: |\n      name_suffix()\n    required: False\n"))),(0,s.kt)(l.Z,{value:"preview",label:"Preview",mdxType:"TabItem"},(0,s.kt)("p",null,"  ",(0,s.kt)("img",{src:a(9486).Z,width:"740",height:"721"})))),(0,s.kt)("h3",{id:"optional-omit-suffix"},"Optional: omit suffix"),(0,s.kt)("p",null,"You may choose to omit the ",(0,s.kt)("inlineCode",{parentName:"p"},"suffix")," field:"),(0,s.kt)(r.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"Assembly Line Example",label:"Assembly Line Example",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nid: person's name\nsets:\n  - person.name.first\n  - person.name.last\nquestion: |\n  Person's name\nfields:\n  - code: |\n      person.name_fields(show_suffix=False)\n"))),(0,s.kt)(l.Z,{value:"Vanilla Docassemble",label:"Vanilla Docassemble",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nid: person's name\nquestion: |\n  Person's name\nfields:\n  - First: person.name.first\n  - Middle: person.name.middle\n    required: False\n  - Last: person.name.last\n")))),(0,s.kt)("h3",{id:"use-a-single-field-to-get-the-name-of-a-business"},"Use a single field to get the name of a business"),(0,s.kt)("p",null,"If the entity is a business, multiple name fields should\nbe replaced with one name field."),(0,s.kt)("p",null,"Make the question dynamic if you are not sure."),(0,s.kt)(r.Z,{mdxType:"Tabs"},(0,s.kt)(l.Z,{value:"Assembly Line Example",label:"Assembly Line Example",default:!0,mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nid: person's name\nsets:\n  - person.name.first\n  - person.name.last\nquestion: |\n  Person's name\nfields:\n  - code: |\n      person.name_fields(person_or_business=\"unsure\")\n"))),(0,s.kt)(l.Z,{value:"Vanilla Docassemble",label:"Vanilla Docassemble",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'---\nid: person\'s name\nquestion: |\n  Person\'s name\nfields:\n  - Is this a person or business?: person.person_type\n    input type: radio\n    choices:\n      - Business or organization: business\n      - Person: individual\n  - First name: person.name.first\n    show if:\n      variable: person.person_type\n      is: "individual"\n  - Last name: person.name.last\n    show if:\n      variable: person.person_type      \n      is: "individual"\n  - Suffix: person.name.suffix\n    code: |\n      name_suffix()\n    show if:\n      variable: person.person_type      \n      is: "individual"\n    required: False      \n  - Name of business or organization: person.name.first\n    show if:\n      variable: person.person_type\n      is: business\n')))))}c.isMDXComponent=!0},9486:(e,n,a)=>{a.d(n,{Z:()=>t});const t=a.p+"assets/images/alindividual_name_fields-f5c76b28cf4d47caed264e5d7ab44c20.png"}}]);