"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[2329],{4137:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>m});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),u=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},h=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,h=s(e,["components","mdxType","originalType","parentName"]),p=u(a),c=i,m=p["".concat(l,".").concat(c)]||p[c]||d[c]||o;return a?n.createElement(m,r(r({ref:t},h),{},{components:a})):n.createElement(m,r({ref:t},h))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:i,r[1]=s;for(var u=2;u<o;u++)r[u]=a[u];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5139:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var n=a(7462),i=(a(7294),a(4137));const o={id:"alkiln_about",title:"ALKiln automated testing",sidebar_label:"Overview",slug:"/alkiln"},r=void 0,s={unversionedId:"alkiln_about",id:"alkiln_about",title:"ALKiln automated testing",description:"\ud83d\udea7",source:"@site/docs/automated_testing.md",sourceDirName:".",slug:"/alkiln",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/automated_testing.md",tags:[],version:"current",frontMatter:{id:"alkiln_about",title:"ALKiln automated testing",sidebar_label:"Overview",slug:"/alkiln"},sidebar:"mainSidebar",previous:{title:"Feedback",permalink:"/docassemble-AssemblyLine-documentation/docs/framework/github_feedback"},next:{title:"Advanced",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln/advanced"}},l={},u=[{value:"Intro",id:"intro",level:2},{value:"Start",id:"start",level:2},{value:"Set up for ALKilnInThePlayground",id:"set-up-for-alkilnintheplayground",level:3},{value:"Set up for GitHub",id:"set-up-for-github",level:3},{value:"Quick reminders",id:"quick-reminders",level:2},{value:"Example",id:"example",level:3},{value:"First test",id:"first-test",level:2},{value:"Story tables",id:"story-tables",level:2},{value:"Generate a story table",id:"generate-a-story-table",level:3},{value:"Step description",id:"step-description",level:3},{value:"Rows",id:"rows",level:3},{value:"var",id:"var",level:3},{value:"value",id:"value",level:3},{value:"trigger",id:"trigger",level:3},{value:"Story table examples",id:"story-table-examples",level:3},{value:"<code>.there_is_another</code> loop",id:"there_is_another-loop",level:3},{value:"Story table signature",id:"story-table-signature",level:3},{value:"Other story table notes",id:"other-story-table-notes",level:3},{value:"Steps",id:"steps",level:2},{value:"Starting Steps",id:"starting-steps",level:3},{value:"Observe things about the page",id:"observe-things-about-the-page",level:3},{value:"Set values",id:"set-values",level:3},{value:"Other actions",id:"other-actions",level:3},{value:"Tips",id:"tips",level:2},{value:"Test output",id:"test-output",level:2},{value:"Error pictures",id:"error-pictures",level:3},{value:"Reports",id:"reports",level:3},{value:"See GitHub test results",id:"see-github-test-results",level:2},{value:"Errors and warnings",id:"errors-and-warnings",level:2},{value:"A missing trigger variable",id:"a-missing-trigger-variable",level:3},{value:"Timeout or &quot;took too long&quot; error",id:"timeout-or-took-too-long-error",level:3},{value:"Invalid playground path error",id:"invalid-playground-path-error",level:3},{value:"UnhandledPromiseRejection error",id:"unhandledpromiserejection-error",level:3},{value:"Phrase is missing",id:"phrase-is-missing",level:3},{value:"Inconsistent cell count",id:"inconsistent-cell-count",level:3},{value:"Security",id:"security",level:2},{value:"Disable the tests",id:"disable-the-tests",level:3},{value:"Disabling tests in one repository",id:"disabling-tests-in-one-repository",level:4},{value:"Disabling tests for the whole organization",id:"disabling-tests-for-the-whole-organization",level:4},{value:"Use a separate server just for testing",id:"use-a-separate-server-just-for-testing",level:3},{value:"See GitHub&#39;s security docs",id:"see-githubs-security-docs",level:3},{value:"Use ALKiln&#39;s commit sha",id:"use-alkilns-commit-sha",level:3},{value:"Set ALKiln&#39;s npm version",id:"set-alkilns-npm-version",level:3},{value:"GitHub secrets",id:"github-secrets",level:3},{value:"Your workflow file",id:"your-workflow-file",level:2},{value:"Required inputs",id:"required-inputs",level:3},{value:"Optional inputs",id:"optional-inputs",level:3},{value:"ALKiln environment variables",id:"alkiln-environment-variables",level:3},{value:"Arbitrary environment variables",id:"arbitrary-environment-variables",level:3},{value:"Make a GitHub issue when tests fail",id:"make-a-github-issue-when-tests-fail",level:3},{value:"Schedule test runs",id:"schedule-test-runs",level:3},{value:"FAQ",id:"faq",level:2},{value:"I have a private GitHub repository. Can I use this testing framework?",id:"i-have-a-private-github-repository-can-i-use-this-testing-framework",level:3},{value:"How do I add a new test file?",id:"how-do-i-add-a-new-test-file",level:3},{value:"How do I add a new test to an existing test file?",id:"how-do-i-add-a-new-test-to-an-existing-test-file",level:3},{value:"When do tests run?",id:"when-do-tests-run",level:3},{value:"Why should I write a Scenario description?",id:"why-should-i-write-a-scenario-description",level:3},{value:"Built with",id:"built-with",level:2},{value:"Repositories",id:"repositories",level:2}],h={toc:u};function p(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\ud83d\udea7"),(0,i.kt)("p",null,"Reference material for testing your interview with ALKiln. This is under very active development."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Any docassemble package can use ALKiln"),", though it does have special features created especially for projects using AssemblyLine."),(0,i.kt)("h2",{id:"intro"},"Intro"),(0,i.kt)("p",null,"The ALKiln (Assembly Line Kiln) framework runs tests on your docassemble interview either through the Playground or through GitHub, making sure your interviews are running correctly."),(0,i.kt)("p",null,"Docacon 2023, demo and examples of ALKiln automated testing:"),(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/TcLFA9a1bHs?start=3413",title:"Assembly Line Kiln testing framework at Docacon 2023",frameborder:"0",allow:"accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share; fullscreen",allowfullscreen:!0}),(0,i.kt)("p",null,"You can ",(0,i.kt)("a",{parentName:"p",href:"https://youtu.be/TcLFA9a1bHs?t=3712"},"skip straight to writing tests"),". A little earlier in the presentation, you can see a bit about ",(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=TcLFA9a1bHs&t=2970s"},"why we test, what we test, and why to automate testing"),"."),(0,i.kt)("p",null,"You can also read the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.google.com/presentation/d/165JJAj9w2YrXeifpyvHXTMUxr7u6UDvnCoYy1xvfdhU/edit"},"presentation slides themselves")," with all the speaker's notes."),(0,i.kt)("h2",{id:"start"},"Start"),(0,i.kt)("p",null,"You can use ALKiln from your server, through GitHub, or both. You can read more about the ",(0,i.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/advanced#two-ways-to-run-alkiln"},"differences between running ALKiln in GitHub vs. the Playground here"),"."),(0,i.kt)("h3",{id:"set-up-for-alkilnintheplayground"},"Set up for ALKilnInThePlayground"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},'On your server\'s "Package Management" page, install the ',(0,i.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/docassemble-ALKilnInThePlayground"},"ALKilnInThePlayground package")," from its ",(0,i.kt)("inlineCode",{parentName:"li"},"main")," branch."),(0,i.kt)("li",{parentName:"ol"},"Follow docassemble's instructions to add it to the ",(0,i.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/config.html#dispatch"},"dispatch list"),". This will add it to the server's list of interviews. It may look something like this:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"dispatch:\n  alkiln: docassemble.ALKilnInThePlayground:data/questions/run_alkiln_tests.yml\n  # Your other server interviews\n")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Make sure you have a Project that you want to test in your list of Projects."),(0,i.kt)("li",{parentName:"ol"},"Make sure that Project has some tests. They should be in the Sources folder of the Project and end in the extension ",(0,i.kt)("inlineCode",{parentName:"li"},".feature"),"."),(0,i.kt)("li",{parentName:"ol"},"Go to your server's list of interviews and run the ALKilnInThePlayground interview."),(0,i.kt)("li",{parentName:"ol"},"Start by picking the the newest version of ALKiln to install. It should be at the top of the list of options. Tap to install it."),(0,i.kt)("li",{parentName:"ol"},"Pick a Project to test."),(0,i.kt)("li",{parentName:"ol"},"Run the tests and see ",(0,i.kt)("a",{parentName:"li",href:"#test-output"},"the output"),".")),(0,i.kt)("h3",{id:"set-up-for-github"},"Set up for GitHub"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Prepare your repository or organization for testing using ",(0,i.kt)("a",{parentName:"li",href:"https://apps-dev.suffolklitlab.org/start/test-setup"},"https://apps-dev.suffolklitlab.org/start/test-setup"),". Follow the instructions there to add new code to your repository. This can take over half an hour if you're unfamiliar with GitHub and docassemble API keys."),(0,i.kt)("li",{parentName:"ol"},"In Docassemble, make a new Project and pull in the package's updated code."),(0,i.kt)("li",{parentName:"ol"},"In the Project's Sources folder, add files with a ",(0,i.kt)("inlineCode",{parentName:"li"},".feature")," extention to write tests. You might already have an example test in that folder if you chose to create one during the ALKiln setup interview."),(0,i.kt)("li",{parentName:"ol"},"Commit the new files to GitHub to trigger the tests to run."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#see-github-test-results"},"See the results"),".")),(0,i.kt)("h2",{id:"quick-reminders"},"Quick reminders"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"You write and edit ",(0,i.kt)("inlineCode",{parentName:"li"},".feature")," test files in your Sources folder."),(0,i.kt)("li",{parentName:"ol"},'By default, each Step or field may only take 30 seconds. You can change that with the "the maximum seconds" Step listed in the Steps.'),(0,i.kt)("li",{parentName:"ol"},"If you're using GitHub, tests are run when anyone commits to GitHub."),(0,i.kt)("li",{parentName:"ol"},"Tests can download files, but humans have to review them to see if they've come out right."),(0,i.kt)("li",{parentName:"ol"},"You will be able to see pictures of pages that errored. In GitHub, you can download them from the zip file in ",(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts"},"the Action's artifact section"),"."),(0,i.kt)("li",{parentName:"ol"},"ALKiln also creates test reports. In GitHub, you can download them in the same place.")),(0,i.kt)("p",null,"Give us feedback and ideas by making issues at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues"},"https://github.com/SuffolkLITLab/ALKiln/issues"),"."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"The tests use the ",(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/"},"gherkin language and syntax"),". Here's a complex example for a quick refresher on some of our features:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'@children\nFeature: I have children\n\n  @fast @child_benefits\n  Scenario: child has benefits\n    Given I start the interview at "some_file_name.yml"\n    And I get to the question id "benefits" with this data:\n      | var | value | trigger |\n      | x[i].name.first | Cashmere | children[0].name.first |\n      | x[i].name.last | Davis | children[0].name.first |\n      | x[i].name.first | Casey | children[1].name.first |\n      | x[i].name.last | Davis | children[1].name.first |\n      | x.there_are_any | True | children.there_are_any |\n      | x.target_number | 2 | children.there_is_another |\n    When I set the var "benefits[\'SSI\']" to "True"\n    And I tap to continue\n    Then the question id should be "download"\n    And I download "some_motion.pdf"\n\n')),(0,i.kt)("h2",{id:"first-test"},"First test"),(0,i.kt)("p",null,"You can write a short test right away that just makes sure your YAML file runs. Write a ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," for each file you want to test."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Feature: Interviews load\n\n  Scenario: The 209A loads\n    Given I start the interview at "ma_209a_package.yml"\n\n  Scenario: The Plaintiff\'s Motion to Modify loads\n    Given I start the interview at "plaintiffs_motion_to_modify_209a.yml"\n')),(0,i.kt)("p",null,"You can wait to write more complex tests till your code is more stable."),(0,i.kt)("h2",{id:"story-tables"},"Story tables"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Story table")," Steps, in our opinion, are the most effective and flexible way to set the values of fields in ALKiln in most cases. Using them, it doesn't matter what order you use to list your fields or what order your pages come in. It also doesn't matter if you include extra fields accidentally. They are a snapshot of the user who's filling out the form for that test."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    And I get to the question id "has sink" with this data:\n      | var | value | trigger |\n      | last_haircut_date | today - 730 | last_haircut_date |\n      | wants_virtual_haircut | True | wants_virtual_haircut |\n      | scissors[i].length | 2 | scissors[0].length |\n      | scissors[i].length | 7 | scissors[1].length |\n')),(0,i.kt)("p",null,"You can write a story table that goes all the way through your interview, or a story table that only goes part way."),(0,i.kt)("p",null,"Very basically, you tell the story table Step what ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," you want to get to and the variables and values it will need to get there. Whenever the test gets to a page, it checks your story table for any variables that match a variable on the page. When it finds a match, it sets the value of the field. When it's done with a page, it continues to the next page until it reaches the terminal ",(0,i.kt)("inlineCode",{parentName:"p"},"question"),"."),(0,i.kt)("p",null,"You can have multiple tables in one Scenario and you can put other steps between story table Steps. "),(0,i.kt)("p",null,"Right now, Story Tables are unable to use GitHub secrets to set variables."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"A story table Step ",(0,i.kt)("strong",{parentName:"p"},"must not")," be the first step in your Scenario. The ",(0,i.kt)("a",{parentName:"p",href:"#starting-steps"},(0,i.kt)("inlineCode",{parentName:"a"},"interview")," Step")," ",(0,i.kt)("strong",{parentName:"p"},"must")," come before it.")),(0,i.kt)("h3",{id:"generate-a-story-table"},"Generate a story table"),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("a",{parentName:"p",href:"https://plocket.github.io/al_story/"},"story table generator")," to generate a Scenario draft. Depending on your interview's code you might need to edit the table for it to work properly, but it can give you a good start."),(0,i.kt)("p",null,"Follow these instructions to use the generator:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"If you don't have one already, ",(0,i.kt)("a",{parentName:"li",href:"#how-do-i-add-a-new-test-file"},"add a new test file"),". You can leave out the Scenario."),(0,i.kt)("li",{parentName:"ol"},"Ensure your server config is set up to ",(0,i.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/config.html#debug"},"show debug info"),"."),(0,i.kt)("li",{parentName:"ol"},"Run your interview manually until you reach the page you want the story table to get to."),(0,i.kt)("li",{parentName:"ol"},'Open the "source" display of the interview. Currently, that looks like angle brackets, ',(0,i.kt)("inlineCode",{parentName:"li"},"</>"),", in the header of the page."),(0,i.kt)("li",{parentName:"ol"},"Note the ",(0,i.kt)("inlineCode",{parentName:"li"},"id")," of the page."),(0,i.kt)("li",{parentName:"ol"},'Tap the "Show variables and values" button. It will open a new tab showing a big JSON object.'),(0,i.kt)("li",{parentName:"ol"},"Copy all the text on that page."),(0,i.kt)("li",{parentName:"ol"},"Go to the ",(0,i.kt)("a",{parentName:"li",href:"https://plocket.github.io/al_story/"},"story table generator"),"."),(0,i.kt)("li",{parentName:"ol"},"Paste the JSON into the text area there, as instructed."),(0,i.kt)("li",{parentName:"ol"},"Use the other input fields to help finalize your Scenario, including the page ",(0,i.kt)("inlineCode",{parentName:"li"},"id"),"."),(0,i.kt)("li",{parentName:"ol"},"Copy the Scenario that has been generated for you."),(0,i.kt)("li",{parentName:"ol"},"Paste that into the already prepared test file.")),(0,i.kt)("p",null,"This works best with interviews that don't need ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variables")," or ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#generic"},"generic objects"),"."),(0,i.kt)("h3",{id:"step-description"},"Step description"),(0,i.kt)("p",null,"The Step that triggers a story table is"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    And I get to the question id "some id!" with this data:\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"question id:")," The story table needs to know the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," of the page this story table should get to. You can find the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block in the YAML in the Playground."),(0,i.kt)("h3",{id:"rows"},"Rows"),(0,i.kt)("p",null,"Indented under the description, put the header row of the table:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | var | value | trigger |\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"var")," lists the variable the field sets exactly as it appears in the code of the question."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"value")," is the value you want the test to fill in."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trigger")," lists the variable that triggers that variable's page. We describe that more in a section below.")),(0,i.kt)("p",null,"Under that, add a blank row for a field that you want the test to interact with during the interview:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      |  |  |  |\n")),(0,i.kt)("p",null,"You must include a row for every variable that need to be set in order to get to the page with the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," you chose."),(0,i.kt)("h3",{id:"var"},"var"),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," column, write the name of the variable that a field sets ",(0,i.kt)("strong",{parentName:"p"},"exactly as it appears in the ",(0,i.kt)("inlineCode",{parentName:"strong"},"question")," block"),". Most times you can see that name in the YAML ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block. If ",(0,i.kt)("inlineCode",{parentName:"p"},"code:")," is used to create the field's variable name, you may have to talk to the developers who wrote that code to find out the name or names of the variable or variables it generates."),(0,i.kt)("p",null,"Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"court_date\nusers[0].name.first\nusers[i].children[j].benefits['SSI']\nx.favorite_color\n")),(0,i.kt)("h3",{id:"value"},"value"),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," column, write what you want the field to be set to. For checkboxes, ",(0,i.kt)("inlineCode",{parentName:"p"},"True")," means 'checked' and ",(0,i.kt)("inlineCode",{parentName:"p"},"False")," means 'unchecked'."),(0,i.kt)("p",null,"One special value you can include is ",(0,i.kt)("inlineCode",{parentName:"p"},"today"),". That will insert the date on which the test is being run. You can also subtract from, or add days to, ",(0,i.kt)("inlineCode",{parentName:"p"},"today"),". Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | signature_date | today |  |\n      | court_date | today + 20 |  |\n      | minors_birth_date | today - 3650 |  |\n")),(0,i.kt)("p",null,"The last example makes sure that the date is 10 years in the past, ensuring that a minor always stays a minor for that test."),(0,i.kt)("h3",{id:"trigger"},"trigger"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," is an optional value in most cases. It is mandatory for rows that list ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variables"),", like ",(0,i.kt)("inlineCode",{parentName:"p"},"i"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"j"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"k"),", or ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#generic"},"generic objects")," (",(0,i.kt)("inlineCode",{parentName:"p"},"x"),"). Your interview ",(0,i.kt)("strong",{parentName:"p"},"must always")," include ",(0,i.kt)("a",{parentName:"p",href:"#trigger_variable_code"},"some special HTML")," to let the trigger variable work properly. As you can see, you will get a warning in the report if you leave that out."),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," column, write the name of the variable that triggers the page on which the field appears."),(0,i.kt)("p",null,"For the below, the ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"users[0].hair.how_much"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"---\nid: interview order\nmandatory: True\ncode: |\n  users[0].hair.how_much\n---\nid: hair\nquestion: |\n  Tell us about your hair\nfields:\n  - How much hair do you have?: users[i].hair.how_much\n  - What color is your hair?: users[i].hair.color\n")),(0,i.kt)("p",null,"Your story table rows to set those values would look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | var | value | trigger |\n      | users[i].hair.how_much | Enough | users[0].hair.how_much |\n      | users[i].hair.color | Sea green | users[0].hair.how_much |\n")),(0,i.kt)("p",null,"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," columns were different, both ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," columns listed ",(0,i.kt)("inlineCode",{parentName:"p"},"users[0].hair.how_much"),". That's because when the docassemble asks for ",(0,i.kt)("inlineCode",{parentName:"p"},"users[0].hair.how_much"),", both fields are on that page and both variables have to be set."),(0,i.kt)("p",null,"There are some rare cases where no ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," exists. For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," blocks with the ",(0,i.kt)("inlineCode",{parentName:"p"},"mandatory")," specifier:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mandatory: True\nquestion: |\n  Do you like mandatory questions?\nyesno: likes_mandatory_questions\n")),(0,i.kt)("p",null,"In those cases, leave the ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," column empty."),(0,i.kt)("h3",{id:"story-table-examples"},"Story table examples"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Simple field types with their values.")),(0,i.kt)("p",null,"The 'yes' choice of ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#yesno"},(0,i.kt)("inlineCode",{parentName:"a"},"yesno")," buttons")," or ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#fields%20yesno"},(0,i.kt)("inlineCode",{parentName:"a"},"yesno")," fields")," like ",(0,i.kt)("inlineCode",{parentName:"p"},"yesno")," checkboxes and ",(0,i.kt)("inlineCode",{parentName:"p"},"yesnoradio"),"s."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | has_hair | True | has_hair |\n")),(0,i.kt)("p",null,"The 'maybe' choice in ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#yesnomaybe"},"yesnomaybe buttons")," and ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#fields%20yesno"},"datatype: yesnomaybe")," fields."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | has_hair | None | has_hair |\n")),(0,i.kt)("p",null,"Checkboxes with multiple choices. The value 'True' means to check the checkbox and 'False' means to uncheck it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | benefits['SSI'] | True | benefits |\n")),(0,i.kt)("p",null,"Radio or dropdown choices."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | favorite_color | green | favorite_color |\n")),(0,i.kt)("p",null,"Text field or textarea. Even if the answer has multiple lines, you can only use one line. When a new line is supposed to appear, instead use ",(0,i.kt)("inlineCode",{parentName:"p"},"\\n"),". See below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | favorite_color | Blue.\\nNo, green!\\nAah... | favorite_color |\n")),(0,i.kt)("p",null,"A generic object with an index variable."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | x[i].name.first | Umi | users[1].name.first |\n")),(0,i.kt)("h3",{id:"there_is_another-loop"},(0,i.kt)("inlineCode",{parentName:"h3"},".there_is_another")," loop"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},".there_is_another")," loop in a story table is more complicated than you might expect."),(0,i.kt)("p",null,"The story table must handle setting the ",(0,i.kt)("inlineCode",{parentName:"p"},".there_is_another")," attribute automatically. You, as the developer, must pretend to use the ",(0,i.kt)("inlineCode",{parentName:"p"},".target_number")," attribute instead, whether you actually use it or not."),(0,i.kt)("p",null,"In your ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," column, replace any ",(0,i.kt)("inlineCode",{parentName:"p"},".there_is_another")," rows for a particular variable with with one ",(0,i.kt)("inlineCode",{parentName:"p"},".target_number")," row. In the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," column, put the number of items of the appropriate type."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," column should have the name of the page's trigger variable, as usual. Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | x[i].name.first | Jose | users[0].name.first |\n      | x[i].name.first | Sam | users[1].name.first |\n      | x[i].name.first | Umi | users[2].name.first |\n      | x.target_number | 3 | users.there_is_another |\n")),(0,i.kt)("h3",{id:"story-table-signature"},"Story table signature"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," for a row setting a signature doesn't matter. All signatures will be a single dot."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | user.signature |  | user.signature |\n")),(0,i.kt)("h3",{id:"other-story-table-notes"},"Other story table notes"),(0,i.kt)("p",null,"Don't worry about accidentally including variables that won't show up during the test. Extra rows will be ignored."),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/#steps"},"Steps")," must be written one after the other in the order they should happen. It's a bit more like you're the user clicking through the form. They can let you do things like download a file or make sure an user input invalidation message appears. If you change the order of the questions, even if you don't change any variable names, you may have to update these types of steps to change their order to match the new order of the screens."),(0,i.kt)("p",null,"Note: ",(0,i.kt)("inlineCode",{parentName:"p"},"When"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Then"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"And"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"Given")," at the beginning of sentences can all be used interchangeably. It doesn't matter which you use."),(0,i.kt)("h3",{id:"starting-steps"},"Starting Steps"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},'Establishing Steps that you might use as the first few lines of a "Scenario" - a test. They can also be used at any other time.')," "),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"You ",(0,i.kt)("strong",{parentName:"p"},"must")," include the ",(0,i.kt)("inlineCode",{parentName:"p"},"interview")," Step in each Scenario ",(0,i.kt)("strong",{parentName:"p"},"before setting any fields"),".")),(0,i.kt)("p",null,"Use an interview's filename in the ",(0,i.kt)("inlineCode",{parentName:"p"},"interview")," Step to open the interview you want to test."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Given I start the interview at "yaml_file_name.yml"\n')),(0,i.kt)("p",null,"This Step must ",(0,i.kt)("strong",{parentName:"p"},"always")," be included in ",(0,i.kt)("strong",{parentName:"p"},"each")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," ",(0,i.kt)("strong",{parentName:"p"},"before")," setting the values of any fields. There is no other way for the tests to know what website to go to."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"wait")," Step can be a way to pause before the test tries to go to the interview's first page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Given I wait 120 seconds\n    When I start the interview at "yaml_file_name.yml"\n')),(0,i.kt)("p",null,"This Step can also be used anywhere in your scenario to wait between Steps."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can also start by making sure the test will give the interview's first page time to load once the test goes there. The default maximum time is 30 seconds. This Step can be useful if you know that your interview's first page takes longer to load."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Given the maximum seconds for each Step is 200\n    When I start the interview at "yaml_file_name.yml"\n')),(0,i.kt)("p",null,"This Step can also be used anywhere else in your Scenario to give Steps more time to finish."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can use ",(0,i.kt)("span",{id:"log-in-step"},"the ",(0,i.kt)("inlineCode",{parentName:"p"},"log in")," Step")," to sign into your docassemble server before going to the interview:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Given I log in with the email "USER_EMAIL" and the password "USER_PASSWORD"\n    When I start the interview at "yaml_file_name.yml"\n')),(0,i.kt)("p",null,"This is a complex Step to use and right now only works in GitHub (though we are working on developing the feature for the Playground version). You ",(0,i.kt)("strong",{parentName:"p"},"must"),' use a GitHub "secret" to store each value as the information is sensitive. To learn how to create and add a secret for a test, see the ',(0,i.kt)("a",{parentName:"p",href:"#github-secrets"},"GitHub secrets section"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},'"USER_EMAIL"')," and ",(0,i.kt)("inlineCode",{parentName:"p"},'"USER_PASSWORD"')," are just examples of names. You can use any names you want."),(0,i.kt)("h3",{id:"observe-things-about-the-page"},"Observe things about the page"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"question id")," Step will make sure the page's question id is right. This Step can help humans keep track of what page the tests are on. It will also show up in the logs of the tests and can help you see where things went wrong."),(0,i.kt)("p",null,"Copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," value from the YAML ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block of the screen you want to test."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then the question id should be "some yaml block id!"\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"invalid answers")," Step can check that the user was prevented from continuing."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I will be told an answer is invalid\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"screenshot")," Step will take a picture of the screen. In GitHub tests, it will be put in the GitHub action's ",(0,i.kt)("a",{parentName:"p",href:"#see-github-test-results"},"artifacts"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I take a screenshot\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"link")," Step can make sure a link appears on the page. For example, a link to quickly leave the page for forms that deal with domestic abuse."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I should see the link to "a-url.com"\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"phrase")," Steps can check for text on the page. Checking phrases will be language specific."),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Getting the characters right can be tricky with docassemble. If you get told a phrase is missing, read about ",(0,i.kt)("a",{parentName:"p",href:"#phrase-is-missing"},"a possible reason")," in the errors section.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I SHOULD see the phrase "some phrase"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I should NOT see the phrase "some phrase"\n')),(0,i.kt)("p",null,"The phrase should be inside double quotation marks and should NOT itself contain ",(0,i.kt)("a",{parentName:"p",href:"https://www.compart.com/en/unicode/U+0022"},"regular double quotation marks")," inside it. That usually isn't a problem with docassemble pages because docassemble transforms our code in ways we don't always expect. See the ",(0,i.kt)("a",{parentName:"p",href:"#phrase-is-missing"},"missing phrase section")," that talks about special characters."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"accessibility")," Step can ",(0,i.kt)("span",{id:"accessibility"},"check a page for its accessibility")," by running ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/dequelabs/axe-core"},"aXe-core")," on the page."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I check the page for accessibility issues\n")),(0,i.kt)("p",null,"This will include a separate JSON file if there are any accessibility issues with the page."),(0,i.kt)("p",null,"You can also check all pages past a certain point automatically:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I check all pages for accessibility issues\n")),(0,i.kt)("p",null,"This is equivalent to running ",(0,i.kt)("inlineCode",{parentName:"p"},"I check the page for accessibility issues")," on every new page\nthat the test runner sees."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"text in JSON")," Step can check that a variable on the page has a specific text value. ",(0,i.kt)("strong",{parentName:"p"},"This is a multi-line step"),". It will also save a copy of all of the page's JSON variables to a file that starts with 'json_for' followed by the question's id. The JSON variables are the same variables that you would see in ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/errors.html#tocAnchor-1-1"},"the docassemble sources tab"),"."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"This step is unable to check values of nested objects. For example, it can test the value of a variable like ",(0,i.kt)("inlineCode",{parentName:"p"},"user_affidavit"),", but not an attribute like ",(0,i.kt)("inlineCode",{parentName:"p"},"user.affidavit"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then the text in the JSON variable "user_affidavit" should be\n    """\n    Three quotes then some affidavit text.\n\n    The text can be multi-line.\n\n    Then close with three quotes.\n    """\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"JSON variables")," Step will add the page's JSON variables to the final test report. It's a bit messy, but you do get to see all the variables."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    And I get the page's JSON variables and values\n")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"set-values"},"Set values"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Fill in fields with answers, set values, and interact with the page in other ways.")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"continue")," Step will tap the button to continue to the next page. The text on the button itself doesn't matter."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    When I tap to continue\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"set variable")," Step to set the value of a field."),(0,i.kt)("p",null,"Comparing this to ",(0,i.kt)("a",{parentName:"p",href:"#story-tables"},"a story table"),", as described above, the first quotes contain the equivalent of the ",(0,i.kt)("a",{parentName:"p",href:"#var"},(0,i.kt)("inlineCode",{parentName:"a"},"var"))," column and the second quotes contain the ",(0,i.kt)("a",{parentName:"p",href:"#value"},(0,i.kt)("inlineCode",{parentName:"a"},"value"))," you want to set."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I set the variable "users[i].hair_color" to "blue"\n')),(0,i.kt)("p",null,"One special value you can include is ",(0,i.kt)("inlineCode",{parentName:"p"},"today"),". That will insert the date on which the test is being run. You can also subtract from, or add days to, ",(0,i.kt)("inlineCode",{parentName:"p"},"today"),". Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I set the variable "signature_date" to "today"\n    When I set the variable "birthdate" to "today - 500"\n    When I set the variable "court_date" to "today + 12"\n')),(0,i.kt)("p",null,"You can also use environment variables to set values with ",(0,i.kt)("a",{parentName:"p",href:"#secret-variables-step"},"the ",(0,i.kt)("inlineCode",{parentName:"a"},"secret variables")," Step"),", even if the value doesn't need to be secret."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("span",{id:"secret-variables-step"},(0,i.kt)("code",null,"secret variables")," Step")," can set variables that have sensitive information. For example, a password. The value of this variable will not appear anywhere in the report or in the console. If there is an error on this page, ALKiln will still avoid taking a picture of the screen."),(0,i.kt)("p",null,'This is a complex Step to use and currently only works with tests running in GitHub (though it\'s in development for the Playground version). You can use a GitHub "secret" to store the value. To learn how to create and add a secret for the test, see the ',(0,i.kt)("a",{parentName:"p",href:"#github-secrets"},"GitHub secrets section"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    I set the variable "user_account_password" to the GitHub secret "USER1_PASSWORD"\n')),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"You ",(0,i.kt)("strong",{parentName:"p"},"MUST")," use ",(0,i.kt)("a",{parentName:"p",href:"#log-in-step"},"the ",(0,i.kt)("inlineCode",{parentName:"a"},"log in")," Step")," if you want to sign into your docassemble server. The ",(0,i.kt)("inlineCode",{parentName:"p"},"secret variables")," Step shown here is unable to do that.")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Sign on a signature page. All signatures are the same - one dot."),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("strong",{parentName:"p"},"AVOID")," taking screenshots of signature pages. There's a bug that will erase the signature if you do that.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    When I sign\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can also tap or click on specific elements, like buttons on a page.\nYou can use any valid ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors"},"CSS Selector"),"\nto get an element on the page, and can add any additional wait time after tapping the element."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I tap the "#element-id" element\n    And I tap the "#other-element" element and wait for 5 seconds\n')),(0,i.kt)("p",null,"If you are using the ",(0,i.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/framework/altoolbox#display-a-series-of-tabs"},"ALToolbox tabs"),", you can say that you're tapping the tab,\nand ALKiln will tap and wait until the tab is fully visible."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I tap the "TabGroup-specific_tab_name-tab" tab\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"story table")," Step to make sure the test reaches a particular screen given a set of fields with their values. See a better description in ",(0,i.kt)("a",{parentName:"p",href:"#story-tables"},"sections above"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    I get to the question id "some question block id" with this data:\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"name")," Step is specifically for the Document Assembly Line 4-part name questions."),(0,i.kt)("p",null,"Avoid punctuation. We recommend you just use 2 names - the first name and last name - but you can have all these formats:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Firstname Lastname"),(0,i.kt)("li",{parentName:"ul"},"Firstname Middlename Lastname"),(0,i.kt)("li",{parentName:"ul"},"Firstname Middlename Lastname Suffix (where suffix is one of the dropdown suffix choices, like ",(0,i.kt)("inlineCode",{parentName:"li"},"II"),")")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I set the name of "x[i]" to "Sam User"\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"address")," Step is specifically for the Document Assembly Line 4-part address questions."),(0,i.kt)("p",null,"It allows a US address format, but can otherwise be any address you want that matches the format of the example below. Remember the commas."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I set the address of "users[0]" to "120 Tremont Street, Unit 1, Boston, MA 02108"\n')),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"other-actions"},"Other actions"),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"download")," Step to download files so that humans can check that they are correct. When the tests run in GitHub, the files will be in ",(0,i.kt)("a",{parentName:"p",href:"#see-github-test-results"},"the GitHub action's artifacts"),'. If you think this step could take more than 30 seconds, use the "maximum seconds for each Step" Step to give the file more time to download.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I download "file-name.pdf"\n')),(0,i.kt)("p",null,"Leave out other parts of file's url."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"upload")," step to upload one or more files. You must store files that you plan to upload in your ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/playground.html#templates"},'"Sources" folder')," along with your tests."),(0,i.kt)("p",null,"As you can see in the examples, if you want to upload more than one file you must separate their names with a comma."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'And I upload "irrefutable_evidence.jpg, refutable_evidence.pdf" to "evidence_files"\n')),(0,i.kt)("p",null,"In a story table, use the name of the variable as usual and use the name of the file or files in the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," column."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | evidence_files | irrefutable_evidence.jpg, refutable_evidence.pdf |  |\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use ",(0,i.kt)("span",{id:"custom-timeout-step"},"the ",(0,i.kt)("inlineCode",{parentName:"p"},"custom timeout")," Step")," to give your pages or Steps more time to finish. The default maximum time is 30 seconds. This Step can be useful if you know that a page or an interaction with a field will take longer. You can also use it to shorten the time to let tests fail faster. If you need, you can use it in multiple places in each Scenario."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then the maximum seconds for each Step is 200\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use the ",(0,i.kt)("inlineCode",{parentName:"p"},"wait"),' Step to pause once a page has loaded. will let you wait for a number of seconds when you are on a page. The time must be shorter than the maximum amount of time for each Step. By default, that\'s 30 seconds, but you can increase that with the "maximum seconds for each Step" Step.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    When I wait 10 seconds\n")),(0,i.kt)("p",null,"This Step can be used multiple times."),(0,i.kt)("p",null,"Waiting can help in some situations where you run into problems with timing. The situations that need this are pretty rare, but here's an example: You navigate to a new page and set a field. Sometimes the test passes, but sometimes the test says an element on this page does not exist. The problem is probably that the page sometimes needs an extra few seconds to load. Add this step in to give it that time."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    And I tap to continue\n    When I wait 10 seconds\n    And I set the variable "favorite_color" to "puce"\n')),(0,i.kt)("h2",{id:"tips"},"Tips"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Some of these are just good practices to follow when coding your interviews.")),(0,i.kt)("p",null,"In questions with choices, give each label a value. See ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#field%20with%20buttons"},"docassemble's documentation on buttons")," to read about key-value pairs."),(0,i.kt)("p",null,"Not great with just labels:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: Tell me about yourself\nfields:\n  - Favorite color\n")),(0,i.kt)("p",null,"Better with values as well:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"question: Tell me about yourself\nfields:\n  - Favorite color: user_favorite_color\n")),(0,i.kt)("p",null,"It's always possible to use the labels alone, but giving a value as well ensures your tests will work for translated versions of your interview. It also helps your code be more translatable in general."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Add a ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/modifiers.html#id"},"unique id")," to each ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block of your interview. This also helps your team communicate with each other more easily."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Avoid ",(0,i.kt)("inlineCode",{parentName:"p"},"noyes")," type fields. For one thing, the ",(0,i.kt)("a",{parentName:"p",href:"#generate-a-story-table"},"story table generator")," code will need less editing. For another, we've found that humans tend to find those confusing too."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"If your package is not importing specifically al_package.yml from the styled Assembly Line package, make sure to add the ",(0,i.kt)("a",{parentName:"p",href:"#trigger_variable_code"},"trigger variable code")," to your interview."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can write tests that just go part-way through an interview. That way, you can work on adding more content and yet also be sure that the work you've already done isn't affected by the new changes."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use old Scenarios or story tables to help you make new ones. You don't have to make everything from scratch."),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"test-output"},"Test output"),(0,i.kt)("p",null,"ALKiln creates files and folders showing the output of the tests.\nIn GitHub, you can ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts"},'download these GitHub "artifacts"')," at the bottom of the summary page for that run of tests."),(0,i.kt)("p",null,"The output ALKiln creates includes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A report of the result from all the tests."),(0,i.kt)("li",{parentName:"ul"},"Pictures of screens where ALKiln ran into errors or unexpected behavior."),(0,i.kt)("li",{parentName:"ul"},"A folder for each test (or Scenario) named using your Scenario description."),(0,i.kt)("li",{parentName:"ul"},"A report for that specific Scenario, as well as pictures you took of screens, files you downloaded, and pictures of any errors it caused.")),(0,i.kt)("h3",{id:"error-pictures"},"Error pictures"),(0,i.kt)("p",null,"ALKiln will try to take pictures of pages that run into errors. The names of those files use the id of the page where the error happened. There you might see that the test was unable to continue to the next page because required fields weren't filled, or that a variable wasn't defined. ALKiln avoids taking pictures of erroring pages when the page used GitHub secrets in case they contain sensitive information."),(0,i.kt)("h3",{id:"reports"},"Reports"),(0,i.kt)("p",null,"We're always trying to understand what people would find helpful in these reports. Tell us about your experiences at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues"},"https://github.com/SuffolkLITLab/ALKiln/issues"),"."),(0,i.kt)("p",null,"A report might look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Assembly Line Kiln Automated Testing Report - Wed, 29 Dec 2021 17:49:00 GMT\n\n\n===============================\n===============================\nFailed scenarios:\n\n---------------\nScenario: I get to the download page\n---------------\n\nERROR: The question id was supposed to be "download", but it\'s actually "agree-to-terms".\n**-- Scenario Failed --**\n\n\n===============================\n===============================\nPassed scenarios:\n\n---------------\nScenario: I fill in my name\n---------------\nscreen id: user-name\n      | user.name.first | Maru |  |\n      | user.name.last | Plaintiff |  |\n')),(0,i.kt)("p",null,"A report has a title with the date and time. It also has two main sections - the failed Scenarios and the Scenarios that passed."),(0,i.kt)("p",null,"Within each of those, every Scenario will have its own section. In the Scenario's section, ALKiln will list the id of each screen where fields were set in the order in which they appeared. Under each ",(0,i.kt)("inlineCode",{parentName:"p"},"screen id")," will be the names of the variables whose fields were set and the values they were set to. We're still working out some issues here."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"If you used a ",(0,i.kt)("a",{parentName:"p",href:"#story-tables"},"story table")," Step, a Scenario might look more like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'---------------\nScenario: I fill in my name\n---------------\nscreen id: user-name\n      | user.name.first | Maru |  |\n      | user.name.last | Plaintiff |  |\n\n  Rows that got set:\n    And I get to the question id "child information" with this data:\n      | var | value | trigger |\n      | user.name.first | Maru |  |\n      | user.name.last | Plaintiff |  |\n  Unused rows:\n      | defendant.name.first | Sam |  |\n      | defendant.name.last | Defendant |  |\n')),(0,i.kt)("p",null,"Since story table Steps don't care about having extra unused rows, the report lets you know which rows did or did not get used. If rows are listed under \"Unused rows\", ALKiln couldn't find the fields for those variables during the test. Despite that, it was still able to get to the desired question id. You should check that section to make sure all your varibles got used."),(0,i.kt)("p",null,"Rows are listed in alphabetical order. If you have thoughts on pros and cons, we'd love to hear from you."),(0,i.kt)("p",null,'If everything looks right to you there, you can copy and paste the text under "Rows that got set" into your test to get rid of the extra rows you\'ve got hanging around.'),(0,i.kt)("hr",null),(0,i.kt)("p",null,"If a screen loaded with an error message, ALKiln will try to reload a few times, and will try to log the error message that it saw:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'---------------\nScenario: I opened the interview\n---------------\n\nERROR: On final attempt to load interview, got "Reference to invalid playground path"\n\nERROR: On final attempt to load interview, got "Reference to invalid playground path"\n\nERROR: On final attempt to load interview, got "Reference to invalid playground path"\n\nERROR: Failed to load "a-great-interview" after 3 tries. Each try gave the page 30 seconds to load.\n**-- Scenario Failed --**\n')),(0,i.kt)("p",null,"ALKiln will also try to take a picture of the page where the error happened. There will be two copies of that picture - one in the main folder of the output and one in the folder of the specific test (the Scenario) that caused the error."),(0,i.kt)("p",null,"Also watch the ",(0,i.kt)("a",{parentName:"p",href:"#errors-and-warnings"},"errors and warnings")," section for updates on similar information."),(0,i.kt)("h2",{id:"see-github-test-results"},"See GitHub test results"),(0,i.kt)("p",null,"In GitHub, to see the list of previous tests or running tests, go to your repository's ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#viewing-the-workflows-activity"},"GitHub Actions page"),"."),(0,i.kt)("p",null,"One of the rows should have the text of the commit you just made. The test may have a yellow dot next to it. That means it's still running. When the dot has turned into a red 'x' or a green checkmark, tap on the name to go to the test's summary page."),(0,i.kt)("p",null,"To see the output text of the test run online, its logs, follow ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/using-workflow-run-logs"},"these GitHub instructions"),"."),(0,i.kt)("p",null,"ALKiln also creates files and folders showing the output of the tests.\nIn GitHub, you can ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts"},'download these GitHub "artifacts"')," at the bottom of the summary page for that run of tests."),(0,i.kt)("h2",{id:"errors-and-warnings"},"Errors and warnings"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"This section is a constant work in progress.")),(0,i.kt)("h3",{id:"a-missing-trigger-variable"},"A missing trigger variable"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This warning only matters for story tables that use index variables or generic objects.")),(0,i.kt)("p",null,"That warning isn't a bug, but if the above doesn't apply to you, you can ignore it. A future goal of ours is to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues/452"},"remove the warning from Steps that don't need it"),"."),(0,i.kt)("p",null,"If you are using a story table with index variables or generic objects, you need to add some code to the interview file where you set your ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/initial.html#metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"metadata")," block"),". It controls items like ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"authors"),"."),(0,i.kt)("a",{name:"trigger_variable_code"}),(0,i.kt)("p",null,"Add this code to your ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata")," block to insert an invisible element in all your screens:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'  post: |\n    <div data-variable="${ encode_name(str( user_info().variable )) }" id="trigger" aria-hidden="true" style="display: none;"></div>\n')),(0,i.kt)("p",null,"If you already have something in your ",(0,i.kt)("inlineCode",{parentName:"p"},"post:")," metadata, just add that code anywhere inside there. There's a chance it can interfere with your css styles, so putting it at the end may be the best choice."),(0,i.kt)("p",null,"If you want to see some very technical details about why we need it in the first place, you can go to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues/256"},"https://github.com/SuffolkLITLab/ALKiln/issues/256"),", where we've tried to summarize the problem this is solving. Unfortunately, we haven't found another way to solve this particular problem."),(0,i.kt)("h3",{id:"timeout-or-took-too-long-error"},'Timeout or "took too long" error'),(0,i.kt)("p",null,'Different problems can cause the report to say that something "took too long" or caused a "timeout" error.'),(0,i.kt)("p",null,'A "timeout" error can happen when a page took too long to load at some point in setup, when running tests, or during test cleanup. This can be because:'),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The page was trying to load a big file."),(0,i.kt)("li",{parentName:"ol"},"ALKiln could not continue to the next page for some reason."),(0,i.kt)("li",{parentName:"ol"},"A Story Table was unable to reach the page with the specified ",(0,i.kt)("inlineCode",{parentName:"li"},"id"),"."),(0,i.kt)("li",{parentName:"ol"},"There's a typo in the name of the interview YAML file that the test should go to.")),(0,i.kt)("p",null,"If a page was taking too long to load a big file, use ",(0,i.kt)("a",{parentName:"p",href:"#custom-timeout-step"},"the ",(0,i.kt)("inlineCode",{parentName:"a"},"custom timeout")," Step")," to give the page more time to load."),(0,i.kt)("p",null,"You might be able to look at the error page picture for more details. In GitHub, you can download the test ",(0,i.kt)("a",{parentName:"p",href:"#see-github-test-results"},"artifacts")," to look for it."),(0,i.kt)("p",null,"In GitHub, this error can also happen when:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The server was busy for too long."),(0,i.kt)("li",{parentName:"ol"},"The server was down."),(0,i.kt)("li",{parentName:"ol"},"That url is stored in the ",(0,i.kt)("inlineCode",{parentName:"li"},"SERVER_URL")," ",(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets"},"GitHub secret")," is wrong or out of date.")),(0,i.kt)("p",null,"If the server might have been busy or down, try ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/re-running-workflows-and-jobs#re-running-all-the-jobs-in-a-workflow"},"re-running the tests"),"."),(0,i.kt)("p",null,"You won't be able to tell if the ",(0,i.kt)("inlineCode",{parentName:"p"},"SERVER_URL")," is wrong - GitHub considers the value of the secret to be sensitive information, so it's impossible to see that value. You can still give it a new value, though, and that's worth trying. Find the address of the docassemble server where the docassemble testing account is located. Edit the secret to give it that url."),(0,i.kt)("h3",{id:"invalid-playground-path-error"},"Invalid playground path error"),(0,i.kt)("p",null,'If you see the text "invalid playground path" in the report, that means the ',(0,i.kt)("inlineCode",{parentName:"p"},"Given I start the interview at...")," Step for that scenario is naming an interview that doesn't exist. Check for a typo."),(0,i.kt)("h3",{id:"unhandledpromiserejection-error"},"UnhandledPromiseRejection error"),(0,i.kt)("p",null,"This is a misleading error. You need to read the text of the whole paragraph to see what the actual error is."),(0,i.kt)("h3",{id:"phrase-is-missing"},"Phrase is missing"),(0,i.kt)("p",null,"If you get an error message that an expected phrase is missing, make sure you copy and paste the text you're expecting ",(0,i.kt)("strong",{parentName:"p"},"directly from the running interview page"),"."),(0,i.kt)("p",null,"Sometimes the characters in your code and the characters on screen are not the same. For example, in our code we often use apostrophes as quotes (",(0,i.kt)("inlineCode",{parentName:"p"},"'"),") and docassemble changes them to actual opening and closing quote characters (",(0,i.kt)("inlineCode",{parentName:"p"},"\u2018")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"\u2019"),"). Same for double quotes. In our code editor, we use the unicode character ",(0,i.kt)("a",{parentName:"p",href:"https://www.compart.com/en/unicode/U+0022"},(0,i.kt)("inlineCode",{parentName:"a"},'"')," (U+0022)")," both for opening and closing quotes. On the running interview page, docassemble changes those into ",(0,i.kt)("inlineCode",{parentName:"p"},"\u201c")," - ",(0,i.kt)("a",{parentName:"p",href:"https://www.compart.com/en/unicode/U+201C"},'"left double quotation mark" (U+201C)')," - and ",(0,i.kt)("inlineCode",{parentName:"p"},"\u201d")," - ",(0,i.kt)("a",{parentName:"p",href:"https://www.compart.com/en/unicode/U+201C"},'"right double quotation mark" (U+201D)')),(0,i.kt)("p",null,"They look very similar, but are not the same. It's best to copy the text ",(0,i.kt)("strong",{parentName:"p"},"straight from the screen the user sees.")),(0,i.kt)("p",null,"Wrong:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    I should see the phrase \"a document called a 'Certified docket sheet'\"\n")),(0,i.kt)("p",null,"Example error:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"The text \"a document called a 'Certified docket sheet'\" SHOULD be on this page, but it's NOT\n")),(0,i.kt)("p",null,"Right:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    I should see the phrase "a document called a \u2018Certified docket sheet\u2019"\n')),(0,i.kt)("h3",{id:"inconsistent-cell-count"},"Inconsistent cell count"),(0,i.kt)("p",null,"This error prevents all of your tests being run. The message is telling you that something about the syntax of the table is wrong. One of your story tables could missing a pipe (",(0,i.kt)("inlineCode",{parentName:"p"},"|"),") or could have an extra pipe, etc."),(0,i.kt)("p",null,"To fix this you can find the syntax typos by using an editor like the ",(0,i.kt)("a",{parentName:"p",href:"https://www.assertthat.com/online-gherkin-editor"},"editor at AssertThat"),". It will let you paste in your test code and will show a red 'x' next to the lines that have syntax errors. The editor will not show error next to lines that are commented out. Those are the ones that start with ",(0,i.kt)("inlineCode",{parentName:"p"},"#"),"."),(0,i.kt)("p",null,"The error message will include text similar to this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Error: Parse error in 'docassemble/ChildSupport/data/sources/new_case.feature': (10:5): inconsistent cell count within the table\n")),(0,i.kt)("h2",{id:"security"},"Security"),(0,i.kt)("p",null,"Using a third-party library or package is always a risk. That said, we take measures to help secure our code, such as protecting our release branches and requiring reviews before merging any new code."),(0,i.kt)("p",null,"In addition, here are some actions you can take to manage the security of the tests, as well as general guidelines for server security."),(0,i.kt)("h3",{id:"disable-the-tests"},"Disable the tests"),(0,i.kt)("p",null,"If you become worried about the tests, there are different ways you can stop the tests from running."),(0,i.kt)("p",null,'In order to run, the test setup interview added a "workflow" file to your repository. GitHub sometimes calls that an "action". That\'s what triggers the tests. You can manage that workflow, and your actions in general, in GitHub.'),(0,i.kt)("h4",{id:"disabling-tests-in-one-repository"},"Disabling tests in one repository"),(0,i.kt)("p",null,"GitHub lets you disable workflow files like these. See their instructions at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow"},"https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow"),"."),(0,i.kt)("p",null,"You can also delete the file from your repository completely. If you go to the front page of your repository, the file is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"workflows")," folder of the ",(0,i.kt)("inlineCode",{parentName:"p"},".github")," folder. It's called ",(0,i.kt)("inlineCode",{parentName:"p"},"run_form_tests.yml"),". GitHub's instructions about how to delete a file are at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/deleting-files-in-a-repository"},"https://docs.github.com/en/repositories/working-with-files/managing-files/deleting-files-in-a-repository"),"."),(0,i.kt)("p",null,"Another option is to disable or limit all tests, all actions, in your repository. GitHub's documentation for managing repository actions is at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#managing-github-actions-permissions-for-your-repository"},"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#managing-github-actions-permissions-for-your-repository"),"."),(0,i.kt)("h4",{id:"disabling-tests-for-the-whole-organization"},"Disabling tests for the whole organization"),(0,i.kt)("p",null,"You can disable these tests, or any actions, for a whole organization. GitHub's documentation for managing organization actions is at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#managing-github-actions-permissions-for-your-organization"},"https://docs.github.com/en/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#managing-github-actions-permissions-for-your-organization"),"."),(0,i.kt)("h3",{id:"use-a-separate-server-just-for-testing"},"Use a separate server just for testing"),(0,i.kt)("p",null,"Keep the test server completely separate from production server so that no sensitive information can be revealed to potential malicious actors."),(0,i.kt)("p",null,"In addition, some general good practices are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Never share API keys or passwords between servers."),(0,i.kt)("li",{parentName:"ul"},"Periodically clear out the test server and start a new docker container from scratch."),(0,i.kt)("li",{parentName:"ul"},"Occasionally check the test server to make sure it's not running resource stealing code (blockchain miners, etc.)")),(0,i.kt)("h3",{id:"see-githubs-security-docs"},"See GitHub's security docs"),(0,i.kt)("p",null,"GitHub has documentation on some best practices as well: ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions"},"https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions")),(0,i.kt)("h3",{id:"use-alkilns-commit-sha"},"Use ALKiln's commit sha"),(0,i.kt)("p",null,"This one requires prior technical knowledge. To summarize, you can freeze the version of the ALKiln code your repository's tests use by referencing a specific ALKiln commit sha in your workflow file."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Go to ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/ALKiln"},"ALKiln's repository"),". For example, for the v4 branch, you can go to ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/ALKiln/commits/releases/v4"},"https://github.com/SuffolkLITLab/ALKiln/commits/releases/v4"),"."),(0,i.kt)("li",{parentName:"ol"},"Find the sha of a commit you like."),(0,i.kt)("li",{parentName:"ol"},"In your repository's directory, go to .github/workflows and find the file running the tests. There's a line in there that look's something like this:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"uses: suffolkLITLab/ALKiln@releases/v4\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Change ",(0,i.kt)("inlineCode",{parentName:"li"},"releases/v4")," to the commit sha.")),(0,i.kt)("p",null,"When you want to update to a new version of the ALKiln, update that sha manually."),(0,i.kt)("h3",{id:"set-alkilns-npm-version"},"Set ALKiln's npm version"),(0,i.kt)("p",null,"This section requires prior technical knowledge about ",(0,i.kt)("a",{parentName:"p",href:"https://docs.npmjs.com/about-npm"},"npm")," and ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions"},"GitHub workflow files"),". Feel free to ",(0,i.kt)("a",{parentName:"p",href:"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/#get-involved"},"ask us")," any questions you might have."),(0,i.kt)("p",null,"You can use an exact npm version of ALKiln by using your workflow file's ",(0,i.kt)("inlineCode",{parentName:"p"},"ALKILN_VERSION")," input. The default uses a carat, for example ",(0,i.kt)("inlineCode",{parentName:"p"},"^4.0.0"),". That means it will use the latest minor or patch in version 4 of ALKiln. You can instead use an exact version, for example ",(0,i.kt)("inlineCode",{parentName:"p"},"4.3.0"),". See our section on ",(0,i.kt)("a",{parentName:"p",href:"#optional-inputs"},"setting optional inputs"),"."),(0,i.kt)("h3",{id:"github-secrets"},"GitHub secrets"),(0,i.kt)("p",null,"You can use GitHub secrets to set environment variable values with sensitive information. For example, a password. ALKiln will avoid taking error pictures of pages with sensitive information. The value of a secret variable will not appear anywhere in the report or in the console."),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Avoid taking pictures of pages with sensitive information. It is possible to trigger those pictures in Steps you write yourself, but we highly recommend against that for security reasons.")),(0,i.kt)("p",null,"GitHub secrets can be useful if an organization wants to create a variable that all of its repositories will be able to use, though right now Story Tables are unable to use GitHub secrets to set variables."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Follow the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets"},"GitHub instructions")," to set one or more GitHub secrets. You can add these to one repository's secrets or you can add these to your organization's secrets, whichever is right for you.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Go to the home page of your repository. Tap on the ",(0,i.kt)("inlineCode",{parentName:"p"},".github")," folder, then on ",(0,i.kt)("inlineCode",{parentName:"p"},"workflows")," folder, then on the YAML file in there that runs the ALKiln tests.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"It should include a line that looks like this:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"jobs:\n")),(0,i.kt)("p",null,"If this is the first environment variable you're adding, right above that line add a new line like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"env:\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Whenever you want to add a secret, add a new line under ",(0,i.kt)("inlineCode",{parentName:"li"},"env:")," indented once as shown below:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'  USER_PASSWORD: "${{ secrets.USER_PASSWORD }}"\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"USER_PASSWORD")," is just a placeholder in our example. You can name your secrets whatever you want to. Make sure you use the same words as the GitHub secret you made."),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Write your Step and use the names of these secrets as the values.")),(0,i.kt)("p",null,"If you're not worried about keeping the information secure, you don't have to use a GitHub secret - you can just put the value straight into your workflow file like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'  MAX_SECONDS_FOR_SERVER_RELOAD: "300"\n')),(0,i.kt)("p",null,"ALKiln will still avoid printing this value and avoid taking screenshots when it is used. There is no way ALKiln can tell which environment variables have sensitive information and which ones are safe."),(0,i.kt)("p",null,"All together, this section can look similar to this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'env:\n  USER_PASSWORD: "${{ secrets.USER_PASSWORD }}"\n  MAX_SECONDS_FOR_SERVER_RELOAD: "300"\n\njobs:\n')),(0,i.kt)("h2",{id:"your-workflow-file"},"Your workflow file"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Where is it?")),(0,i.kt)("p",null,"Your ALKiln workflow file is in your repository. To find it, go to your ",(0,i.kt)("inlineCode",{parentName:"p"},".github")," folder, then open the ",(0,i.kt)("inlineCode",{parentName:"p"},"workflows"),' folder there. It was probably created when you ran the setup interview and it might be called "run_form_tests.yml" or "alkiln_tests.yml" or something similar.'),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"What does it do?")),(0,i.kt)("p",null,"Among other things, the workflow file:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Triggers the ALKiln tests when desired, like when you push new code to your package."),(0,i.kt)("li",{parentName:"ul"},"Gives ALKiln inputs that are needed to run your tests."),(0,i.kt)("li",{parentName:"ul"},"Optionally gives ALKiln other inputs and environment variables it can use.")),(0,i.kt)("p",null,"You can also use the whole suite of GitHub's workflow and action functionality to do other things, like creating issues when tests fail."),(0,i.kt)("p",null,"These following sections probably require prior technical knowledge about ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions"},"GitHub workflow files"),". Feel free to ",(0,i.kt)("a",{parentName:"p",href:"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/#get-involved"},"ask us")," any questions you might have."),(0,i.kt)("h3",{id:"required-inputs"},"Required inputs"),(0,i.kt)("p",null,"The setup interview should have helped you create these required ",(0,i.kt)("inlineCode",{parentName:"p"},"inputs")," and their values. They are in the ",(0,i.kt)("inlineCode",{parentName:"p"},"jobs:")," section. They look something like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'        with:\n          SERVER_URL: "${{ secrets.SERVER_URL }}"\n          DOCASSEMBLE_DEVELOPER_API_KEY: "${{ secrets.DOCASSEMBLE_DEVELOPER_API_KEY }}"\n')),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"SERVER_URL")," is the url of the docassemble server the tests should run on."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"DOCASSEMBLE_DEVELOPER_API_KEY")," is the API key that you created for the account on your server that will store the Project in the Playground while the tests are being run. You probably created this in the setup interview. Alternatively, your organization admin may have created it."),(0,i.kt)("p",null,"We recommend keeping the API key a GitHub secret for security reasons, but the server url can be type in plainly. For example ",(0,i.kt)("inlineCode",{parentName:"p"},'SERVER_URL: "https://apps-test.example.com"'),"."),(0,i.kt)("h3",{id:"optional-inputs"},"Optional inputs"),(0,i.kt)("p",null,"There are also optional inputs that can go under ",(0,i.kt)("inlineCode",{parentName:"p"},"with:"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MAX_SECONDS_FOR_SETUP")," lets you to set how long to allow ALKiln to try to pull your interview package's code into the docassemble Playground. The default is currently 120 seconds (2 minutes)."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ALKILN_VERSION")," can be useful for security. It gives lets you control what npm version of ALKiln you're using. Read about that in ",(0,i.kt)("a",{parentName:"p",href:"#set-alkiln-s-npm-version"},'the "ALKiln\'s npm version" security section'),"."),(0,i.kt)("p",null,"If you're using a GitHub repository or organization secret, it will look very similar to the ",(0,i.kt)("a",{parentName:"p",href:"#required-inputs"},"required inputs described above"),". Here the values are in context:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'        with:\n          SERVER_URL: "${{ secrets.SERVER_URL }}"\n          DOCASSEMBLE_DEVELOPER_API_KEY: "${{ secrets.DOCASSEMBLE_DEVELOPER_API_KEY }}"\n          MAX_SECONDS_FOR_SETUP: "${{ secrets.MAX_SECONDS_FOR_SETUP }}"\n          ALKILN_VERSION: "${{ secrets.ALKILN_VERSION }}"\n')),(0,i.kt)("p",null,"Other than ",(0,i.kt)("inlineCode",{parentName:"p"},"DOCASSEMBLE_DEVELOPER_API_KEY"),", this information can usually be public. If your organization wants to share the values with multiple repositories you can still use an organization GitHub secret. If not, you can set them right there in the workflow file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'        with:\n          SERVER_URL: "${{ secrets.SERVER_URL }}"\n          DOCASSEMBLE_DEVELOPER_API_KEY: "${{ secrets.DOCASSEMBLE_DEVELOPER_API_KEY }}"\n          MAX_SECONDS_FOR_SETUP: "300"\n          ALKILN_VERSION: "4.3.0"\n')),(0,i.kt)("h3",{id:"alkiln-environment-variables"},"ALKiln environment variables"),(0,i.kt)("p",null,'There are some environment variables that ALKiln uses internally that don\'t need to be "inputs". They go under the ',(0,i.kt)("inlineCode",{parentName:"p"},"env:")," section instead of under ",(0,i.kt)("inlineCode",{parentName:"p"},"with:"),"."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"MAX_SECONDS_FOR_SERVER_RELOAD")," customizes how long to allow your tests to wait when the server is reloading. This helps avoid tests failing when they should otherwise be passing."),(0,i.kt)("p",null,"If you want to use this value in multiple repositories, you can use a GitHub organization secret. It can look something like the below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'env:\n  MAX_SECONDS_FOR_SERVER_RELOAD: "${{ secrets.MAX_SECONDS_FOR_SERVER_RELOAD }}"\n')),(0,i.kt)("p",null,"You can also set its value without a secret as this value is probably not sensitive information."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'env:\n  MAX_SECONDS_FOR_SERVER_RELOAD: "300"\n')),(0,i.kt)("p",null,"You can read ",(0,i.kt)("a",{parentName:"p",href:"#github-secrets"},"the GitHub secrets section")," on setting arbitrary environment variables for more background information."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Your server can reload whenever someone saves a python file or whenever a developer or another test pulls a package that contains a python file into the Playground. If a test is running while that happens, the page the test is trying to open might take too long to load and the test will fail. This is unhelpful to you because the test stops part way and you cannot tell if it would have failed or passed on its own."),(0,i.kt)("p",{parentName:"admonition"},"The next test might then fail during the same reload. That becomes a problem when a chain of tests fail because of one reload."),(0,i.kt)("p",{parentName:"admonition"},"ALKiln cannot stop the first test from failing, but ",(0,i.kt)("inlineCode",{parentName:"p"},"MAX_SECONDS_FOR_SERVER_RELOAD")," can help prevent the next tests from failing during the same reload.")),(0,i.kt)("h3",{id:"arbitrary-environment-variables"},"Arbitrary environment variables"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"#github-secrets"},"the GitHub secrets section")," on setting arbitrary environment variables. The section describes using GitHub secrets and using plain values."),(0,i.kt)("h3",{id:"make-a-github-issue-when-tests-fail"},"Make a GitHub issue when tests fail"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Go to your GitHub repository."),(0,i.kt)("li",{parentName:"ol"},"Tap on the ",(0,i.kt)("inlineCode",{parentName:"li"},".github")," folder, then on ",(0,i.kt)("inlineCode",{parentName:"li"},"workflows"),", then on the YAML file in there that runs the ALKiln tests."),(0,i.kt)("li",{parentName:"ol"},"Tap to ",(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/editing-files"},"edit the file"),"."),(0,i.kt)("li",{parentName:"ol"},"Add the below code under the last line of text in the file."),(0,i.kt)("li",{parentName:"ol"},"Avoid adding any new GitHub secrets to your repository for this.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"      - name: If tests failed create an issue\n        if: ${{ failure() }}\n        uses: actions-ecosystem/action-create-issue@v1\n        with:\n          github_token: ${{ secrets.github_token }}\n          title: ALKiln tests failed\n          body: |\n            An ALKiln test failed. See the action at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.\n          labels: |\n            bug\n")),(0,i.kt)("admonition",{type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"Avoid changing the value ",(0,i.kt)("inlineCode",{parentName:"p"},"github_token")," and avoid creating a new secret for it. The variable ",(0,i.kt)("inlineCode",{parentName:"p"},"secrets.github_token")," is a value that your repository has by default.")),(0,i.kt)("p",null,"If you use the code above, the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues"},"GitHub issue")," will contain a link to the workflow's action page itself."),(0,i.kt)("p",null,"You can edit the values of ",(0,i.kt)("inlineCode",{parentName:"p"},"title"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"body"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"bug")," to customize the issue."),(0,i.kt)("p",null,"If you've run the Setup interview more recently, you will already have this code in your file, though it will be inactive. You just have to remove the comment symbols (",(0,i.kt)("inlineCode",{parentName:"p"},"#"),") from the lines of code."),(0,i.kt)("h3",{id:"schedule-test-runs"},"Schedule test runs"),(0,i.kt)("p",null,"By default, the ALKiln setup interview makes sure that the tests are triggered when code gets pushed to the repository. It also makes sure the tests can be triggered manually."),(0,i.kt)("p",null,"You can also run these tests on a schedule - daily, weekly, monthly, or on any other interval. To run the tests on a schedule, you must add code to your workflow file."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Go to your GitHub repository."),(0,i.kt)("li",{parentName:"ol"},"Tap on the ",(0,i.kt)("inlineCode",{parentName:"li"},".github")," folder, then on ",(0,i.kt)("inlineCode",{parentName:"li"},"workflows"),", then on the YAML file in there that runs the ALKiln tests."),(0,i.kt)("li",{parentName:"ol"},"Tap to ",(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/editing-files"},"edit the file"),"."),(0,i.kt)("li",{parentName:"ol"},"Near the top of the code, you will see something like this:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"  on:\n    push:\n")),(0,i.kt)("ol",{start:5},(0,i.kt)("li",{parentName:"ol"},"Between those two lines, add code, like this:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"\n    schedule:\n      - cron: '0 1 * * TUE'\n")),(0,i.kt)("p",null,"The GitHub docs can tell you more about ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#scheduled-events"},"triggering workflows on a schedule"),". If you want to change the interval, ",(0,i.kt)("a",{parentName:"p",href:"https://crontab.guru/examples.html"},"these examples of cron syntax")," can help a lot."),(0,i.kt)("p",null,"If you've run the Setup interview more recently, you will already have this code in your file, though it will be inactive. You just have to remove the comment symbols (",(0,i.kt)("inlineCode",{parentName:"p"},"#"),") from the lines of code."),(0,i.kt)("h2",{id:"faq"},"FAQ"),(0,i.kt)("h3",{id:"i-have-a-private-github-repository-can-i-use-this-testing-framework"},"I have a private GitHub repository. Can I use this testing framework?"),(0,i.kt)("p",null,"Yes, you can use ALKiln with a private repository, though you have to do a bit of extra work."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Pick a GitHub account that has permission to change the private repository. "),(0,i.kt)("li",{parentName:"ol"},"Make sure the account on your docassemble server that you linked to the tests is integrated with the GitHub account. See ",(0,i.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/packages.html#github"},"docassemble's documentation on integrating a GitHub account"),".")),(0,i.kt)("p",null,"As that documentation explains, no two accounts on a docassemble server can be connected to the same GitHub account."),(0,i.kt)("p",null,"Also, there are some limits on the amount of time private repositories can run workflows: ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions"},"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions")),(0,i.kt)("h3",{id:"how-do-i-add-a-new-test-file"},"How do I add a new test file?"),(0,i.kt)("p",null,"Go to your Playground > the dropdown Folders menu > Sources."),(0,i.kt)("p",null,"Add a new file that ends in the extension ",(0,i.kt)("inlineCode",{parentName:"p"},".feature"),". Ex: ",(0,i.kt)("inlineCode",{parentName:"p"},"has_children.feature")),(0,i.kt)("p",null,"Add this to the blank file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Feature: A description of the category of the tests you\'ll write in this file\n\nScenario: The specific situation that this test is written for\n  Given I start the interview at "name_of_the_interview_file_to_test.yml"\n')),(0,i.kt)("p",null,"Make sure that"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Feature:")," and it's description is on the first line."),(0,i.kt)("li",{parentName:"ol"},"Each test starts with a ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario:")," and its description."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Given I start the interview...")," is the first line under ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario"),".")),(0,i.kt)("p",null,"After that, you can add the story table or other Steps that will test your code. Add the file to the files you commit to GitHub. From then on, GitHub will run that tests whenever you commit, or push, to GitHub."),(0,i.kt)("p",null,"An example for the start of two separate tests for a restraining order:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Feature: I have children\n\nScenario: I need visits to be supervised\n  Given I start the interview at "restraining_order.yml"\n\n\nScenario: I allow unsupervised visitation\n  Given I start the interview at "restraining_order.yml"\n')),(0,i.kt)("p",null,"The Steps under each scenario will be a bit different because they each test a different path for the user."),(0,i.kt)("h3",{id:"how-do-i-add-a-new-test-to-an-existing-test-file"},"How do I add a new test to an existing test file?"),(0,i.kt)("p",null,"To add a new test to the existing file you need:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The keyword ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario")," with the ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario")," description."),(0,i.kt)("li",{parentName:"ol"},"The step that loads the interview's page: ",(0,i.kt)("inlineCode",{parentName:"li"},"Given I start the interview at"),". You must use it before you fill out any fields: ")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Scenario: I allow unsupervised visitation\n  Given I start the interview at "restraining_order.yml"\n')),(0,i.kt)("p",null,"Make sure to leave the ",(0,i.kt)("inlineCode",{parentName:"p"},"Feature")," line at the very top of the file."),(0,i.kt)("p",null,"After the ",(0,i.kt)("inlineCode",{parentName:"p"},"Given")," step, you can add the story table or other Steps that will test your interview."),(0,i.kt)("p",null,"ALKiln uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," description to label test results. Try to use something you'll recognize later."),(0,i.kt)("h3",{id:"when-do-tests-run"},"When do tests run?"),(0,i.kt)("p",null,"GitHub tests run when you commit your files to GitHub. That might be when you hit the 'Commit' button on the Packages page. It can also happen when you edit, add, or delete files in GitHub itself."),(0,i.kt)("p",null,"If you know how to use GitHub ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#viewing-the-workflows-activity"},"actions"),", you can also run the tests manually from GitHub actions with some more options."),(0,i.kt)("h3",{id:"why-should-i-write-a-scenario-description"},"Why should I write a Scenario description?"),(0,i.kt)("p",null,"Scenario descriptions affect the names of error screenshot files and report headings, so try to write something unique that you will recognize later."),(0,i.kt)("h2",{id:"built-with"},"Built with"),(0,i.kt)("p",null,"Kiln uses cucumberjs, puppeteerjs, cheerio, and runs the assertions using mocha and chai libraries."),(0,i.kt)("p",null,"Even though this is built using ",(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/"},"cucumberjs"),", this framework has a different, less lofty, purpose. cucumber focuses on BDD (behavior driven development). This framework mostly deals with regression testing and other conveniences."),(0,i.kt)("h2",{id:"repositories"},"Repositories"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/docassemble-ALKilnInThePlayground"},"ALKilnInThePlayground")," is the package that will let you run tests directly on your server"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/ALKiln"},"ALKiln's own repository")),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/docassemble-ALKilnSetup"},"developer test setup interview's repo"))))}p.isMDXComponent=!0}}]);