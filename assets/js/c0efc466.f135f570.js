"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[3426],{6451:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"components/ALDashboard/docx_wrangling","title":"ALDashboard.docx_wrangling","description":"* ALDashboard.docx\\\\wrangling","source":"@site/docs/components/ALDashboard/docx_wrangling.md","sourceDirName":"components/ALDashboard","slug":"/components/ALDashboard/docx_wrangling","permalink":"/docs/components/ALDashboard/docx_wrangling","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/ALDashboard/docx_wrangling.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"ALDashboard.create_package","permalink":"/docs/components/ALDashboard/create_package"},"next":{"title":"ALDashboard.package_scanner","permalink":"/docs/components/ALDashboard/package_scanner"}}');var o=s(4848),t=s(8453);const r={},a="ALDashboard.docx_wrangling",i={},c=[{value:"update_docx",id:"update_docx",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"get_labeled_docx_runs",id:"get_labeled_docx_runs",level:3},{value:"Arguments",id:"arguments-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"modify_docx_with_openai_guesses",id:"modify_docx_with_openai_guesses",level:3},{value:"Arguments",id:"arguments-2",level:4},{value:"Returns",id:"returns-2",level:4}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"aldashboarddocx_wrangling",children:"ALDashboard.docx_wrangling"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"#ALDashboard.docx_wrangling",children:"ALDashboard.docx_wrangling"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#ALDashboard.docx_wrangling.update_docx",children:"update_docx"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#ALDashboard.docx_wrangling.get_labeled_docx_runs",children:"get_labeled_docx_runs"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"#ALDashboard.docx_wrangling.modify_docx_with_openai_guesses",children:"modify_docx_with_openai_guesses"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)("a",{id:"ALDashboard.docx_wrangling.update_docx"}),"\n",(0,o.jsx)(n.h3,{id:"update_docx",children:"update_docx"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def update_docx(\n        document: Union[docx.document.Document, str],\n        modified_runs: List[Tuple[int, int, str,\n                                  int]]) -> docx.document.Document\n"})}),"\n",(0,o.jsx)(n.p,{children:"Update the document with modified runs."}),"\n",(0,o.jsx)(n.h4,{id:"arguments",children:"Arguments"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"document"})," - the docx.Document object, or the path to the DOCX file"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"modified_runs"})," - a tuple of paragraph number, run number, the modified text, and\na number from -1 to 1 indicating whether a new paragraph should be inserted\nbefore or after the current paragraph."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,o.jsx)(n.p,{children:"The modified document."}),"\n",(0,o.jsx)("a",{id:"ALDashboard.docx_wrangling.get_labeled_docx_runs"}),"\n",(0,o.jsx)(n.h3,{id:"get_labeled_docx_runs",children:"get_labeled_docx_runs"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def get_labeled_docx_runs(\n        docx_path: str,\n        custom_people_names: Optional[Tuple[str, str]] = None,\n        openai_client: Optional[OpenAI] = None\n) -> List[Tuple[int, int, str, int]]\n"})}),"\n",(0,o.jsx)(n.p,{children:"Scan the DOCX and return a list of modified text with Jinja2 variable names inserted."}),"\n",(0,o.jsx)(n.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"docx_path"})," - path to the DOCX file"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"custom_people_names"}),' - a tuple of custom names and descriptions to use in addition to the default ones. Like: ("clients", "the person benefiting from the form")']}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,o.jsx)(n.p,{children:"A list of tuples, each containing a paragraph number, run number, and the modified text of the run."}),"\n",(0,o.jsx)("a",{id:"ALDashboard.docx_wrangling.modify_docx_with_openai_guesses"}),"\n",(0,o.jsx)(n.h3,{id:"modify_docx_with_openai_guesses",children:"modify_docx_with_openai_guesses"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"def modify_docx_with_openai_guesses(docx_path: str) -> docx.document.Document\n"})}),"\n",(0,o.jsx)(n.p,{children:"Uses OpenAI to guess the variable names for a document and then modifies the document with the guesses."}),"\n",(0,o.jsx)(n.h4,{id:"arguments-2",children:"Arguments"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"docx_path"})," ",(0,o.jsx)(n.em,{children:"str"})," - Path to the DOCX file to modify."]}),"\n"]}),"\n",(0,o.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"docx.Document"})," - The modified document, ready to be saved to the same or a new path"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var d=s(6540);const o={},t=d.createContext(o);function r(e){const n=d.useContext(t);return d.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),d.createElement(t.Provider,{value:n},e.children)}}}]);