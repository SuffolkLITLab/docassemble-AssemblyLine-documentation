"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[6416],{395:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>_,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(4848),r=t(8453);const s={sidebar_label:"efm_client",title:"EFSPIntegration.efm_client"},o=void 0,c={id:"reference/EFSPIntegration/efm_client",title:"EFSPIntegration.efm_client",description:"ProxyConnection Objects",source:"@site/docs/reference/EFSPIntegration/efm_client.md",sourceDirName:"reference/EFSPIntegration",slug:"/reference/EFSPIntegration/efm_client",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/EFSPIntegration/efm_client",draft:!1,unlisted:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/reference/EFSPIntegration/efm_client.md",tags:[],version:"current",frontMatter:{sidebar_label:"efm_client",title:"EFSPIntegration.efm_client"}},a={},l=[{value:"ProxyConnection Objects",id:"proxyconnection-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"authenticate_user",id:"authenticate_user",level:4},{value:"register_user",id:"register_user",level:4},{value:"get_service_types",id:"get_service_types",level:4},{value:"serialize_person",id:"serialize_person",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"proxyconnection-objects",children:"ProxyConnection Objects"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class ProxyConnection(EfspConnection)\n"})}),"\n",(0,i.jsx)(n.p,{children:"The main class you use to communicate with the E-file proxy server from docassemble."}),"\n",(0,i.jsxs)(n.p,{children:["Many methods are unchanged from the parent class, ",(0,i.jsx)(n.a,{href:"py_efsp_client#EfspConnection",children:"EfspConnection"}),",\nand are documented there."]}),"\n",(0,i.jsx)(n.h4,{id:"__init__",children:"__init__"}),"\n",(0,i.jsxs)(n.p,{children:["Creates the connection. Tries to get params from docassemble's config, but can\nbe overriden with parameters to ",(0,i.jsx)(n.strong,{children:"init"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"authenticate_user",children:"authenticate_user"}),"\n",(0,i.jsx)(n.p,{children:"Params:\ntyler_email (str)\ntyler_password (str)\njeffnet_key (str)"}),"\n",(0,i.jsx)(n.h4,{id:"register_user",children:"register_user"}),"\n",(0,i.jsx)(n.p,{children:"registration_type needs to be INDIVIDUAL, FIRM_ADMINISTRATOR, or FIRM_ADMIN_NEW_MEMBER.\nIf registration_type is INDIVIDUAL or FIRM_ADMINISTRATOR, you need a password.\nIf it's FIRM_ADMINISTRATOR or FIRM_ADMIN_NEW_MEMBER, you need a firm_name_or_id"}),"\n",(0,i.jsx)(n.h4,{id:"get_service_types",children:"get_service_types"}),"\n",(0,i.jsx)(n.p,{children:"Checks the court info: if it has conditional service types, call a special API with all filing info so far to get service types"}),"\n",(0,i.jsx)(n.h4,{id:"serialize_person",children:"serialize_person"}),"\n",(0,i.jsx)(n.p,{children:"Converts a Docassemble Person or Individual into a dictionary suitable for\njson.dumps and in format expected by Tyler-specific endpoints on the EFSPProxy"})]})}function _(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);