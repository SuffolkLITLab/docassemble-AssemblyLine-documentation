"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[2195],{8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(6540);const t={},a=s.createContext(t);function o(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(a.Provider,{value:n},e.children)}},8982:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"components/AssemblyLine/signatures","title":"Collecting signatures","description":"Triggering the gathering of a signature","source":"@site/docs/components/AssemblyLine/signatures.md","sourceDirName":"components/AssemblyLine","slug":"/components/AssemblyLine/signatures","permalink":"/docs/components/AssemblyLine/signatures","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/AssemblyLine/signatures.md","tags":[],"version":"current","frontMatter":{"id":"signatures","title":"Collecting signatures","sidebar_label":"Signatures","slug":"signatures"},"sidebar":"docs","previous":{"title":"Assembling documents in the background\\n","permalink":"/docs/components/AssemblyLine/background_assembly"},"next":{"title":"AssemblyLine.al_general","permalink":"/docs/components/AssemblyLine/al_general"}}');var t=i(4848),a=i(8453);const o={id:"signatures",title:"Collecting signatures",sidebar_label:"Signatures",slug:"signatures"},r=void 0,l={},d=[{value:"Triggering the gathering of a signature",id:"triggering-the-gathering-of-a-signature",level:2},{value:"Deciding which signatures to gather",id:"deciding-which-signatures-to-gather",level:2},{value:"Customizing the kind of signature to gather",id:"customizing-the-kind-of-signature-to-gather",level:2},{value:"Limitation of <code>/s/</code> signature variable name",id:"limitation-of-s-signature-variable-name",level:3},{value:"Customizing <code>/s/</code> font or changing <code>/s/</code> to a different prefix",id:"customizing-s-font-or-changing-s-to-a-different-prefix",level:3},{value:"Using the signature inside a template",id:"using-the-signature-inside-a-template",level:2},{value:"Docassemble&#39;s documentation",id:"docassembles-documentation",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"triggering-the-gathering-of-a-signature",children:"Triggering the gathering of a signature"}),"\n",(0,t.jsxs)(n.p,{children:["In the AssemblyLine, you can gather signatures by triggering the variable\n",(0,t.jsx)(n.code,{children:"basic_questions_signature_flow"}),". This sets off a gathering process which\nallows the user to decide how they want to sign and then to gather a list of\nsignatures, one at a time."]}),"\n",(0,t.jsxs)(n.p,{children:["Typically, this variable is mentioned in the ",(0,t.jsx)(n.code,{children:"interview order"})," or ",(0,t.jsx)(n.code,{children:"main order"}),"\nblock of your interview. Make sure to mention it somewhere in the interview's\nmandatory logic."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:"{12}",children:"---\n###################### Main order ######################\ncomment: |\n  This block includes the logic for standalone interviews.\n  Delete mandatory: True to include in another interview\nmandatory: True\ncode: |\n  al_intro_screen\n  satisfaction_of_judgment_intro\n  interview_order_satisfaction_of_judgment\n  signature_date\n  basic_questions_signature_flow\n  satisfaction_of_judgment_download\n"})}),"\n",(0,t.jsx)(n.h2,{id:"deciding-which-signatures-to-gather",children:"Deciding which signatures to gather"}),"\n",(0,t.jsxs)(n.p,{children:["The AssemblyLine looks for the definition of a ",(0,t.jsx)(n.code,{children:"list"})," of ",(0,t.jsx)(n.code,{children:"strings"})," named\n",(0,t.jsx)(n.code,{children:"signature_fields"})," to decide which variable names to gather during the signature flow."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'code: |\n  signature_fields = ["users[0].signature"]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["You do not need to know the definition in advance. You can make use of\nnormal Python logic to help build this list. The ",(0,t.jsx)(n.code,{children:"attr_name()"})," method might\nbe especially helpful. For example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'code: |\n  signature_fields = [p.attr_name("signature") for p in people]\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Creates a list of strings like ",(0,t.jsx)(n.code,{children:'["people[0].signature", "people[1].signature"]'})]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"The signature fields must be listed as strings, not as plain Python variables."})}),"\n",(0,t.jsx)(n.h2,{id:"customizing-the-kind-of-signature-to-gather",children:"Customizing the kind of signature to gather"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"basic_questions_signature_flow"})," can trigger 4 kinds of signatures:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Signature on a phone, with an option to text the user a link to sign or use a QR code."}),"\n",(0,t.jsx)(n.li,{children:"Signature on the same device by drawing it with a mouse."}),"\n",(0,t.jsx)(n.li,{children:"Signature by adding /s/, using a customizable font."}),"\n",(0,t.jsx)(n.li,{children:"No signature--that is, letting the user print and add a signature manually."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["By default, the AssemblyLine requires the user to add a digital\nsignature when the ",(0,t.jsx)(n.code,{children:"basic_questions_signature_flow"})," is triggered."]}),"\n",(0,t.jsxs)(n.p,{children:["If you do not want to require a digital signature, you can set ",(0,t.jsx)(n.code,{children:"al_form_requires_digital_signature"}),"\nto ",(0,t.jsx)(n.code,{children:"False"}),". This lets the user sign after printing."]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"/s/"})," option is currently always offered."]}),"\n",(0,t.jsxs)(n.p,{children:["You can make further customizations by making your own version of the\n",(0,t.jsx)(n.a,{href:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine/blob/f4d50140cf6e274a8c5ad12d3f484762d8989a2f/docassemble/AssemblyLine/data/questions/ql_baseline.yml#L1417",children:(0,t.jsx)(n.code,{children:"id: signature choice"})}),"\nscreen."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"The AssemblyLine's text to sign feature can be handy for remote signing, but it only allows\nyou to text one person a link to sign the document. It is also \"blocking.\"\nYou won't get notified when a signature is added, and if you click continue\nbefore the signature is added, you'll see the signature screen yourself."})}),"\n",(0,t.jsxs)(n.h3,{id:"limitation-of-s-signature-variable-name",children:["Limitation of ",(0,t.jsx)(n.code,{children:"/s/"})," signature variable name"]}),"\n",(0,t.jsxs)(n.p,{children:["Currently, the AssemblyLine only provides a way to define a ",(0,t.jsx)(n.code,{children:"/s/"})," signature when the variable name ends with\n",(0,t.jsx)(n.code,{children:"signature"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["You can directly call ",(0,t.jsx)(n.code,{children:"docassemble.AssemblyLine.sign.create_signature()"})," if you need a ",(0,t.jsx)(n.code,{children:"/s/"})," signature\nwith a different variable name."]}),"\n",(0,t.jsxs)(n.h3,{id:"customizing-s-font-or-changing-s-to-a-different-prefix",children:["Customizing ",(0,t.jsx)(n.code,{children:"/s/"})," font or changing ",(0,t.jsx)(n.code,{children:"/s/"})," to a different prefix"]}),"\n",(0,t.jsxs)(n.p,{children:["You can customize the simulated signature for jurisdiction-specific reasons, or\nchange the font by redefining ",(0,t.jsx)(n.code,{children:"al_typed_signature_prefix"})," and ",(0,t.jsx)(n.code,{children:"al_typed_signature_font"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"al_typed_signature_prefix"})," defaults to ",(0,t.jsx)(n.code,{children:"/s/"}),", and ",(0,t.jsx)(n.code,{children:"al_typed_signature_font"})," defaults to\n",(0,t.jsx)(n.code,{children:'"/usr/share/fonts/truetype/google-fonts/BadScript-Regular.ttf"'}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["A custom font can be given as the exact path to a font installed on the server. If it is not a path,\nthe font name will be searched for in ",(0,t.jsx)(n.code,{children:"/usr/share/fonts"})," and ",(0,t.jsx)(n.code,{children:"/var/www/.fonts"}),", with ",(0,t.jsx)(n.code,{children:".ttf"})," appended\nto the filename."]}),"\n",(0,t.jsx)(n.h2,{id:"using-the-signature-inside-a-template",children:"Using the signature inside a template"}),"\n",(0,t.jsxs)(n.p,{children:["Signatures are always ",(0,t.jsx)(n.code,{children:"DAFile"})," objects: even the ",(0,t.jsx)(n.code,{children:"/s/"})," signature variation. This makes it easy\nto have only one way to use them."]}),"\n",(0,t.jsxs)(n.p,{children:["In a DOCX file, simply enclose the variable in Jinja2 tags, like: ",(0,t.jsx)(n.code,{children:"{{ users[0].signature }}"}),". You may need to adjust spacing\nfor it to look right. A table can be helpful. For slightly\nbetter safety, and any time that you have ",(0,t.jsx)(n.code,{children:"skip undefined: False"}),", you can use ",(0,t.jsx)(n.code,{children:"{{ users[0].signature_if_final(i) }}"})," to skip\nrendering the signature on the preview page."]}),"\n",(0,t.jsxs)(n.p,{children:["In a PDF document: make sure that the field where you want to add the digital signature is a ",(0,t.jsx)(n.a,{href:"https://helpx.adobe.com/sign/authoring/fields/e-signature.html",children:"digital signature field"}),".\nThen, add the field normally, like:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'attachment:\n    ...\n    fields:\n        ...\n        - "users1_signature": ${ users[0].signature_if_final(i) }\n'})}),"\n",(0,t.jsx)(n.p,{children:"You can test whether you have the right kind of field by using the AssemblyLine Weaver tool. The preview it makes of your uploaded form will\nhave John Hancock in place of the correct kind of signature field."}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:['Adobe has changed the name of the "digital signature field" several times, but the functionality still exists when you\nclick around. It\'s in different places in different versions of Acrobat.\n',(0,t.jsx)(n.a,{href:"https://gavel.io/pdf",children:"Gavel.io/pdf"})," makes the right kind of field and has only the one option."]})}),"\n",(0,t.jsx)(n.h2,{id:"docassembles-documentation",children:"Docassemble's documentation"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://docassemble.org/docs/fields.html#signature",children:"Gathering the user\u2019s signature into a file variable"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);