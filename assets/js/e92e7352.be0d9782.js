"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[7137],{8436:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>_,frontMatter:()=>o,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"components/EFSPIntegration/efm_client","title":"EFSPIntegration.efm_client","description":"* EFSPIntegration.efm\\\\client","source":"@site/docs/components/EFSPIntegration/efm_client.md","sourceDirName":"components/EFSPIntegration","slug":"/components/EFSPIntegration/efm_client","permalink":"/docs/components/EFSPIntegration/efm_client","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/EFSPIntegration/efm_client.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"REST API","permalink":"/docs/components/EFSPIntegration/api"},"next":{"title":"EFSPIntegration.conversions","permalink":"/docs/components/EFSPIntegration/conversions"}}');var r=t(4848),s=t(8453);const o={},c="EFSPIntegration.efm_client",l={},a=[{value:"DALogger Objects",id:"dalogger-objects",level:2},{value:"log",id:"log",level:3},{value:"ProxyConnection Objects",id:"proxyconnection-objects",level:2},{value:"__init__",id:"__init__",level:3},{value:"authenticate_user",id:"authenticate_user",level:3},{value:"register_user",id:"register_user",level:3},{value:"get_service_types",id:"get_service_types",level:3},{value:"serialize_person",id:"serialize_person",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"efspintegrationefm_client",children:"EFSPIntegration.efm_client"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client",children:"EFSPIntegration.efm_client"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.DALogger",children:"DALogger"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.DALogger.log",children:"log"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.ProxyConnection",children:"ProxyConnection"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.ProxyConnection.__init__",children:"__init__"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.ProxyConnection.authenticate_user",children:"authenticate_user"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.ProxyConnection.register_user",children:"register_user"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.ProxyConnection.get_service_types",children:"get_service_types"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#EFSPIntegration.efm_client.serialize_person",children:"serialize_person"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.DALogger"}),"\n",(0,r.jsx)(n.h2,{id:"dalogger-objects",children:"DALogger Objects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class DALogger(LoggerAdapter)\n"})}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.DALogger.log"}),"\n",(0,r.jsx)(n.h3,{id:"log",children:"log"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def log(level, msg, *args, **kwargs)\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Delegate a log call to Docassemble's ",(0,r.jsx)(n.code,{children:"log"})," function, after adding\ncontextual information from this adapter instance."]}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.ProxyConnection"}),"\n",(0,r.jsx)(n.h2,{id:"proxyconnection-objects",children:"ProxyConnection Objects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class ProxyConnection(EfspConnection)\n"})}),"\n",(0,r.jsx)(n.p,{children:"The main class you use to communicate with the E-file proxy server from docassemble."}),"\n",(0,r.jsxs)(n.p,{children:["Many methods are unchanged from the parent class, ",(0,r.jsx)(n.a,{href:"py_efsp_client#EfspConnection",children:"EfspConnection"}),",\nand are documented there."]}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.ProxyConnection.__init__"}),"\n",(0,r.jsx)(n.h3,{id:"__init__",children:"__init__"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def __init__(*,\n             url: str = None,\n             api_key: str = None,\n             credentials_code_block: str = "tyler_login",\n             default_jurisdiction: str = None)\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Creates the connection. Tries to get params from docassemble's config, but can\nbe overriden with parameters to ",(0,r.jsx)(n.strong,{children:"init"}),"."]}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.ProxyConnection.authenticate_user"}),"\n",(0,r.jsx)(n.h3,{id:"authenticate_user",children:"authenticate_user"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def authenticate_user(tyler_email: str = None,\n                      tyler_password: str = None,\n                      jeffnet_key: str = None,\n                      *,\n                      jurisdiction: str = None) -> ApiResponse\n"})}),"\n",(0,r.jsx)(n.p,{children:"Params:\ntyler_email (str)\ntyler_password (str)\njeffnet_key (str)"}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.ProxyConnection.register_user"}),"\n",(0,r.jsx)(n.h3,{id:"register_user",children:"register_user"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def register_user(person: Union[Individual, dict],\n                  registration_type: str,\n                  *,\n                  password: str = None,\n                  firm_name_or_id: str = None) -> ApiResponse\n"})}),"\n",(0,r.jsx)(n.p,{children:"registration_type needs to be INDIVIDUAL, FIRM_ADMINISTRATOR, or FIRM_ADMIN_NEW_MEMBER.\nIf registration_type is INDIVIDUAL or FIRM_ADMINISTRATOR, you need a password.\nIf it's FIRM_ADMINISTRATOR or FIRM_ADMIN_NEW_MEMBER, you need a firm_name_or_id"}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.ProxyConnection.get_service_types"}),"\n",(0,r.jsx)(n.h3,{id:"get_service_types",children:"get_service_types"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_service_types(\n        court_id: str,\n        court_bundle: Union[ALDocumentBundle, dict] = None) -> ApiResponse\n"})}),"\n",(0,r.jsx)(n.p,{children:"Checks the court info: if it has conditional service types, call a special API with all filing info so far to get service types"}),"\n",(0,r.jsx)("a",{id:"EFSPIntegration.efm_client.serialize_person"}),"\n",(0,r.jsx)(n.h3,{id:"serialize_person",children:"serialize_person"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def serialize_person(person: Union[Person, Individual]) -> Dict\n"})}),"\n",(0,r.jsx)(n.p,{children:"Converts a Docassemble Person or Individual into a dictionary suitable for\njson.dumps and in format expected by Tyler-specific endpoints on the EFSPProxy"})]})}function _(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);