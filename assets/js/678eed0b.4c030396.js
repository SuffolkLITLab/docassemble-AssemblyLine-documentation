"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[1426],{863:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var s=o(4848),t=o(8453);const i={id:"jobs",title:"Jobs: ALJob and ALJobList\n",sidebar_label:"Jobs\n",slug:"/alincome/jobs"},l=void 0,r={id:"alincome/jobs",title:"Jobs: ALJob and ALJobList\n",description:"Asking people about their jobs is a common task when getting financial information. The ALJob class tries to be complete but simple for your users to answer, doing the math for them, and straight-forward for you to use.",source:"@site/docs/alincome/jobs.md",sourceDirName:"alincome",slug:"/alincome/jobs",permalink:"/docassemble-AssemblyLine-documentation/docs/alincome/jobs",draft:!1,unlisted:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/alincome/jobs.md",tags:[],version:"current",frontMatter:{id:"jobs",title:"Jobs: ALJob and ALJobList\n",sidebar_label:"Jobs\n",slug:"/alincome/jobs"},sidebar:"docs",previous:{title:"Expenses\n",permalink:"/docassemble-AssemblyLine-documentation/docs/alincome/expenses"},next:{title:"Itemized Jobs\n",permalink:"/docassemble-AssemblyLine-documentation/docs/alincome/itemizedjobs"}},a={},c=[{value:"ALJobList tutorial",id:"aljoblist-tutorial",level:2},{value:"Before",id:"before",level:3},{value:"Writing the interview",id:"writing-the-interview",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Asking people about their jobs is a common task when getting financial information. The ",(0,s.jsx)(n.code,{children:"ALJob"})," class tries to be complete but simple for your users to answer, doing the math for them, and straight-forward for you to use."]}),"\n",(0,s.jsxs)(n.p,{children:["If you want to jump right in, check out a ",(0,s.jsx)(n.a,{href:"https://apps-test.suffolklitlab.org/start/ALToolbox/al_income_demo?use_feature=ALJob",children:"live demo of the ALJob feature"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"aljoblist-tutorial",children:"ALJobList tutorial"}),"\n",(0,s.jsx)(n.p,{children:"Let's make a short interview that asks about someone's jobs, lets\nthem review their answers, and shows them summaries about their\nincome from those jobs."}),"\n",(0,s.jsx)(n.h3,{id:"before",children:"Before"}),"\n",(0,s.jsx)(n.p,{children:"Before you start, we'll assume that you:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["have access to a ",(0,s.jsx)(n.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/classes/assembly-line/2020-assembly-line-assignment-1#before-you-get-started",children:"developer account on a docassemble server"})]}),"\n",(0,s.jsxs)(n.li,{children:["have the ",(0,s.jsxs)(n.a,{href:"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/installation#run-the-installation-script",children:[(0,s.jsx)(n.code,{children:"ALToolbox"})," package installed on your server"]})]}),"\n",(0,s.jsxs)(n.li,{children:["know ",(0,s.jsx)(n.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/classes/docacon-2020/hello-world#introduction-to-the-docassemble-playground",children:"what the playground is"})," and ",(0,s.jsx)(n.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/classes/docacon-2020/hello-world#hello-world",children:"how to use it to develop a docassemble interview"})]}),"\n",(0,s.jsxs)(n.li,{children:["know ",(0,s.jsx)(n.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/yaml#documents",children:'what "blocks" are'})," in docassemble"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"writing-the-interview",children:"Writing the interview"}),"\n",(0,s.jsx)(n.p,{children:"This interview will be minimum functionality; it will gather all of the information about someone's jobs, ask them to review it, and finally, will display the information."}),"\n",(0,s.jsxs)(n.p,{children:["First, include the ",(0,s.jsx)(n.code,{children:"al_income.yml"})," YAML file in your interview. This will\nlet you use the al_income questions and python code."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"include:\n  - docassemble.ALToolbox:al_income.yml\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Then, create an ",(0,s.jsx)(n.code,{children:"ALJobList"})," using a ",(0,s.jsx)(n.code,{children:"objects"})," block."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"objects:\n  - jobs: ALJobList.using(complete_attribute='complete', ask_number=True)\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Other objects",type:"tip",children:[(0,s.jsxs)(n.p,{children:["By default, each ALJob will use ",(0,s.jsx)(n.code,{children:"Individual"})," object for the employer. You can change this to be the\n",(0,s.jsx)(n.code,{children:"ALIndividual"})," object by using the following ",(0,s.jsx)(n.code,{children:"objects"})," block:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"objects:\n  - jobs: ALJobList.using(\n        object_type=ALJob.using(employer_type=ALIndividual),\n        complete_attribute='complete', ask_number=True)\n"})})]}),"\n",(0,s.jsxs)(n.p,{children:["Next, add a ",(0,s.jsx)(n.a,{href:"https://suffolklitlab.org/legal-tech-class/docs/practical-guide-docassemble/controlling-interview-order#the-interview-order-block",children:"interview order code block"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"mandatory: True\ncode: |\n  jobs.gather()\n"})}),"\n",(0,s.jsx)(n.p,{children:"The interview will ask how many jobs the user has, and then for each job, will ask them:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"their job title. This is mostly for their benefit, and is the simplest way of asking for the information."}),"\n",(0,s.jsx)(n.li,{children:'information about their employer. They can mark if they are self-employed, and the module will mark the employers name as\n"self-employed".'}),"\n",(0,s.jsxs)(n.li,{children:["how much the user gets paid. This screen handles both hourly and salaried workers, and asks how often they receive their pay,\nand if they have any deductions from their paycheck.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["if you need more detailed information about someone's pay, such as their\ntips and taxes withheld, you should use ",(0,s.jsxs)(n.a,{href:"/docassemble-AssemblyLine-documentation/docs/alincome/itemizedjobs",children:["the ",(0,s.jsx)(n.code,{children:"ALItemizedJobList"})," class"]})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"You can let the user review their answers with the following screen:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"id: job review\nquestion: |\n  Review your jobs\nsubquestion: |\n  Here is what you've told us about your jobs. You can add more or continue\n  to the next question.\n\n  ${ jobs.table }\n\n  ${ jobs.add_action() }\nfield: review_jobs\n"})}),"\n",(0,s.jsxs)(n.admonition,{title:"Review screens",type:"tip",children:[(0,s.jsxs)(n.p,{children:["You can also add the job list to a ",(0,s.jsx)(n.a,{href:"https://docassemble.org/docs/fields.html#review",children:"review screen"})," with the below code:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"review:\n  - Edit: jobs.revisit\n    button: |\n      **Jobs**:\n\n      % for job in jobs:\n      * ${ job.source } at ${ job.employer.name }\n      % endfor\n"})})]}),"\n",(0,s.jsx)(n.p,{children:"Once you have this information, you can use it in a variety of ways.\nLet's add one last screen to display our information. We'll\ndescribe what each line of code is doing on the screen."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"event: final_screen\nquestion: Summary of your jobs\nsubquestion: |\n  Annual gross income from all jobs: ${ currency(jobs.total()) }\n\n  Annual net income (gross - deductions) from all jobs: ${ currency(jobs.net_total()) }\n\n  Monthly gross income from all jobs: ${ currency(jobs.total(times_per_year=12)) }\n\n  Annual gross income from the first job listed: ${ currency(jobs[0].total()) }\n\n  Employer information from the first job: ${ jobs[0].employer_name_address_phone() }\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add the screens we just made to the mandatory code block above, so it looks like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"mandatory: True\ncode: |\n  jobs.gather()\n  review_jobs\n  final_screen\n"})}),"\n",(0,s.jsx)(n.p,{children:"And you can now run through the interview!"}),"\n",(0,s.jsxs)(o,{children:[(0,s.jsx)("summary",{children:"Click this section to see the whole interview"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yml",children:"---\ninclude:\n  - al_income.yml\n---\nobjects:\n  - jobs: ALJobList.using(complete_attribute='complete', ask_number=True)\n---\nmandatory: True\ncode: |\n  jobs.gather()\n  review_jobs\n  final_screen\n---\nid: job review\nquestion: |\n  Review your jobs\nsubquestion: |\n  Here is what you've told us about your jobs. You can add more or continue\n  to the next question.\n\n  ${ jobs.table }\n\n  ${ jobs.add_action() }\nfield: review_jobs\n---\nevent: final_screen\nquestion: Summary of your jobs\nsubquestion: |\n  Annual gross income from all jobs: ${ currency(jobs.total()) }\n\n  Annual net income (gross - deductions) from all jobs: ${ currency(jobs.net_total()) }\n\n  Monthly gross income from all jobs: ${ currency(jobs.total(times_per_year=12)) }\n\n  Annual gross income from the first job listed: ${ currency(jobs[0].total()) }\n\n  Employer information from the first job: ${ jobs[0].employer_name_address_phone() }\n"})})]}),"\n",(0,s.jsxs)(n.p,{children:["You'll likely want to display this information in a PDF or word template as well. ",(0,s.jsx)(n.a,{href:"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/generated_yaml#attachment-block",children:"This section describing the Attachment block"})," will help with displaying information in the PDF, and ",(0,s.jsx)(n.a,{href:"https://suffolklitlab.org/docassemble-AssemblyLine-documentation/docs/docx",children:"this page about working with DOCX files"})," will help DOCX users."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var s=o(6540);const t={},i=s.createContext(t);function l(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);