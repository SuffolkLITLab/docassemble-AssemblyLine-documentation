"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[1127],{4137:(e,t,a)=>{a.d(t,{Zo:()=>h,kt:()=>c});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=o.createContext({}),u=function(e){var t=o.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},h=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),m=u(a),d=n,c=m["".concat(s,".").concat(d)]||m[d]||p[d]||i;return a?o.createElement(c,r(r({ref:t},h),{},{components:a})):o.createElement(c,r({ref:t},h))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,r=new Array(i);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:n,r[1]=l;for(var u=2;u<i;u++)r[u]=a[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2598:(e,t,a)=>{a.d(t,{IO:()=>r,oc:()=>l,tD:()=>i});var o=a(7294),n=a(3699);const i=e=>!0===e.plain?o.createElement("span",null,"GitHub+You\u2122"):o.createElement(n.Z,{to:"/docs/alkiln/setup#githubNyou-details"},"GitHub+You\u2122"),r=e=>!0===e.plain?o.createElement("span",null,"ALKilnInThePlayground\u2122"):o.createElement(n.Z,{to:"/docs/alkiln/setup#diy-details"},"ALKilnInThePlayground\u2122"),l=e=>!0===e.plain?o.createElement("span",null,"GitHub Sandbox\u2122"):o.createElement(n.Z,{to:"/docs/alkiln/setup#sandbox-details"},"GitHub Sandbox\u2122")},829:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>u,default:()=>c,frontMatter:()=>s,metadata:()=>h,toc:()=>p});var o=a(7462),n=(a(7294),a(4137)),i=a(2598);const r={toc:[]};function l(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},r,a,{components:t,mdxType:"MDXLayout"}))}l.isMDXComponent=!0;const s={id:"alkiln_troubleshooting",title:"ALKiln troubleshooting and errors",sidebar_label:"WIP Troubleshooting & errors",slug:"/alkiln/trouble"},u=void 0,h={unversionedId:"alkiln/alkiln_troubleshooting",id:"alkiln/alkiln_troubleshooting",title:"ALKiln troubleshooting and errors",description:"WIP (Work in progress)",source:"@site/docs/alkiln/troubleshooting.mdx",sourceDirName:"alkiln",slug:"/alkiln/trouble",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln/trouble",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/alkiln/troubleshooting.mdx",tags:[],version:"current",frontMatter:{id:"alkiln_troubleshooting",title:"ALKiln troubleshooting and errors",sidebar_label:"WIP Troubleshooting & errors",slug:"/alkiln/trouble"},sidebar:"docs",previous:{title:"WIP Writing tests",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing"},next:{title:"WIP Security",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln/security"}},m={},p=[{value:"Failing tests",id:"failure",level:2},{value:"Test file bugs",id:"gherkin",level:2},{value:"Inconsistent cell count error",id:"table-cells",level:3},{value:"Undefined step",id:"step-undefined",level:3},{value:"UnhandledPromiseRejection error",id:"unhandled-promise-rejection",level:2},{value:"Everything works fine when I run the test manually",id:"works-manually",level:2},{value:"Uncommitted files",id:"uncommitted",level:3},{value:"File not found",id:"file-not-found",level:3},{value:"Invalid playground path",id:"invalid-path",level:3},{value:"Docassemble: Variable could not be looked up",id:"variable-not-found",level:2},{value:"ALKiln could not find a field or value",id:"missing",level:2},{value:"Skipped rows or variables",id:"skipped",level:2},{value:"Wrong variable or value",id:"var-val",level:2},{value:"Phrase is missing",id:"missing-phrase",level:2},{value:"Timeout or &quot;it took too long to load the next page&quot;",id:"next-page-timeout",level:2},{value:"No artifacts",id:"no-artifacts",level:2},{value:" GitHub Sandbox  <KittyLitter/> Docker trouble (advanced)",id:"docker-container",level:2},{value:"Slow tests",id:"slow",level:2},{value:"Flaky tests",id:"flake",level:2},{value:"Missing trigger variable",id:"missing-trigger",level:2},{value:"Switch to 2-column Story Tables",id:"deprecated-story-tables",level:2}],d={toc:p};function c(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"WIP (Work in progress)")),(0,n.kt)("p",null,"This page will try to help you figure out what is going wrong when you have errors, warnings, or other problems with your ALKiln tests, whether they are from ALKiln itself or from the libraries ALKiln uses."),(0,n.kt)("p",null,"Maybe you made a mistake, maybe there is a bug in our code, in docassemble, or in a package our tools depend on. Coding is 99% errors and debugging and the pain you feel is real and shared by many. Whatever the source of the problem is, you have made it this far, you belong in this space, and we are excited to have you here."),(0,n.kt)("p",null,"This document is just starting out and would love contributions!"),(0,n.kt)("p",null,"This page helps with some:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ALKiln errors and warnings"),(0,n.kt)("li",{parentName:"ul"},"Docassemble errors and warnings"),(0,n.kt)("li",{parentName:"ul"},"Errors and warnings from the third-party libraries that ALKiln uses")),(0,n.kt)("h2",{id:"failure"},"Failing tests"),(0,n.kt)("p",null,"There are some general troubleshooting steps that you can take when tests fail. If any of these steps help you find more specific problems, look for those on this page too because they may help you get to your solution faster."),(0,n.kt)("p",null,"For ",(0,n.kt)(i.IO,{mdxType:"AutoDIY"})," tests, you can start by updating your version of ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/docassemble-ALKilnInThePlayground"},"ALKilnInThePlayground")," and ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-autodiy"},"updating your version of ALKiln"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Check the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#console"},"console logs")," of the test run. Remember that sometimes the errors will be near the top of the logs or near the bottom."),(0,n.kt)("li",{parentName:"ul"},"Check the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#report"},"test run report"),"."),(0,n.kt)("li",{parentName:"ul"},"Check ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#error-pics"},"error screenshots/pictures and HTML pages"),"."),(0,n.kt)("li",{parentName:"ul"},"Check for ",(0,n.kt)("a",{parentName:"li",href:"#gherkin"},"syntax errors in your test files"),".")),(0,n.kt)("p",null,"If you are unsure if the test is acting correctly, go to your docassemble server, create a new Project, pull the code of your package into the Project, and go through the interview manually. Use the failing test as a guide and follow its Steps exactly."),(0,n.kt)("h2",{id:"gherkin"},"Test file bugs"),(0,n.kt)("p",null,"There are some errors that come up because of various issues in your ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#test-files"},"test files"),"."),(0,n.kt)("p",null,"A syntax error in any of your test files will stop your tests from running at all. To troubleshoot syntax typos, you can use an editor like the ",(0,n.kt)("a",{parentName:"p",href:"https://www.assertthat.com/online-gherkin-editor"},"editor at AssertThat"),". It will let you paste in your test code and will show a red 'x' next to the lines that have syntax errors."),(0,n.kt)("p",null,"You also might have a ",(0,n.kt)("a",{parentName:"p",href:"#step-undefined"},"typo in a Step itself"),"."),(0,n.kt)("h3",{id:"table-cells"},"Inconsistent cell count error"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Symptom:")),(0,n.kt)("p",null,"No tests will run. The error message will include text similar to this:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Error: Parse error in 'docassemble/ChildSupport/data/sources/new_case.feature': (10:5): inconsistent cell count within the table\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Problem:")),(0,n.kt)("p",null,"This error prevents all of your tests being run. The message is telling you that something about the syntax of the table is wrong. One of your story tables could missing a pipe - a ",(0,n.kt)("inlineCode",{parentName:"p"},"|")," character - or could have an extra pipe, etc. This is an error from a library ALKiln uses."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Debugging:")),(0,n.kt)("p",null,"To fix this you can find the syntax typos by using an editor like the ",(0,n.kt)("a",{parentName:"p",href:"https://www.assertthat.com/online-gherkin-editor"},"editor at AssertThat"),". It will let you paste in your test code and will show a red 'x' next to the lines that have syntax errors."),(0,n.kt)("h3",{id:"step-undefined"},"Undefined step"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Symptom:")),(0,n.kt)("p",null,"At the very bottom of your ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#console"},"console output"),' you see the message "Undefined" and "You can implement missing steps with the snippets below".'),(0,n.kt)("p",null,"This will make just the current test fail. This is an error message from a library ALKiln uses called ",(0,n.kt)("a",{parentName:"p",href:"https://cucumber.io/"},"cucumber"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Problem:")),(0,n.kt)("p",null,"You have a typo in the Step that failed, so cucumber thinks that you are trying to create a new Step. The error message should contain the text of the Step that you wrote."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Solution:")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Check the documentation for the Step again."),(0,n.kt)("li",{parentName:"ol"},"Copy/paste the Step from the documentation into a new line in your test."),(0,n.kt)("li",{parentName:"ol"},"If you need to fill in blanks in the Step, copy/paste those values from your existing test code."),(0,n.kt)("li",{parentName:"ol"},"If you want to be helpful to us, you can check if there really was a typo. If the text of the two lines look the same visually, use a diff checker like ",(0,n.kt)("a",{parentName:"li",href:"https://www.diffchecker.com/text-compare/"},"https://www.diffchecker.com/text-compare/")," to compare your original Step text with the new Step text. If the diff checker shows that the text is the same, contact us. Maybe we have a typo in our documentation."),(0,n.kt)("li",{parentName:"ol"},"Delete your original Step text and try the test again."),(0,n.kt)("li",{parentName:"ol"},"If the test has the same problem, contact us. Maybe we have a typo in our documentation.")),(0,n.kt)("h2",{id:"unhandled-promise-rejection"},"UnhandledPromiseRejection error"),(0,n.kt)("p",null,"This is a misleading error from a library ALKiln uses. It is hiding the real error message inside it. You need to read the text of the whole paragraph to see what the actual error is. You might see more useful information in the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#report"},"report")," above those messages or in your ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#artifacts"},"artifacts"),"."),(0,n.kt)("h2",{id:"works-manually"},"Everything works fine when I run the test manually"),(0,n.kt)("p",null,"When your ALKlin tests fail, but your interviews work fine when you run them by hand, it is possible that something is wrong with your package, with the test, or possibly with your understanding of the test code or interview code."),(0,n.kt)("p",null,"For example, maybe when you run the interview manually, field by field, you ",(0,n.kt)("em",{parentName:"p"},"think")," you are following your test to the letter, but a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#values"},"misunderstanding of how to set a variable")," has led you in the wrong direction."),(0,n.kt)("p",null,"Some of the common reasons for specifically this problem are under this heading. That is especially true for tests that fail on GitHub, but pass manually ",(0,n.kt)("em",{parentName:"p"},"and")," with ",(0,n.kt)(i.IO,{mdxType:"AutoDIY"})," tests. Some problems are more complex and might be happening for other reasons, so they are elsewhere in these docs. For example, when your tests pass manually, you may have a ",(0,n.kt)("a",{parentName:"p",href:"#var-val"},"missing variable from a test typo"),"."),(0,n.kt)("h3",{id:"uncommitted"},"Uncommitted files"),(0,n.kt)("p",null,"Sometimes we forget to include/select a file on our ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/playground.html#packages"},"Project's Packages page")," before ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/development.html#versioncontrol"},"committing to GitHub"),". This might be an interview file, template file, static file, source file, or a module."),(0,n.kt)("p",null,"Leaving this out can lead to problems like a ",(0,n.kt)("a",{parentName:"p",href:"#file-not-found"},"file not being found")," or an ",(0,n.kt)("a",{parentName:"p",href:"#invalid-path"},"invalid playground path"),"."),(0,n.kt)("h3",{id:"file-not-found"},"File not found"),(0,n.kt)("p",null,"This might mean that you have a file in your Playground Project, but that you still have to save it on the Project's Packages page and commit that to GitHub. Your tests will pass for that Project in your Playground, but your interview will break when you or others install it from GitHub."),(0,n.kt)("h3",{id:"invalid-path"},"Invalid playground path"),(0,n.kt)("p",null,'If you see the text "invalid playground path" in the report, that means the ',(0,n.kt)("inlineCode",{parentName:"p"},"Given I start the interview at...")," Step for that scenario is naming an interview that doesn't exist. Check for a typo in your interview name and check that the file exists."),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{parentName:"p",href:"#uncommitted"},"uncommitted files"),"."),(0,n.kt)("h2",{id:"variable-not-found"},"Docassemble: Variable could not be looked up"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Symptom:")),(0,n.kt)("p",null,"On the picture of the page with the error, you see this error message:"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"There was a reference to a variable \u2018some_var\u2019 that could not be looked up in the question file (for language \u2018en\u2019) or in any of the files incorporated by reference into the question file.")),(0,n.kt)("p",null,'This is a "reference error".'),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Problem:")),(0,n.kt)("p",null,"This is a reference error. It means docassemble tried to get the value for a variable, but could not find where you defined the variable anywhere in your code or in the code you included or imported. Possible causes:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"It may be that you have not defined a variable in your interview or that you have not defined it in a way that docassemble can find it. That can be for many reasons. For example, maybe you are using an ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variable")," or a ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/fields.html#generic"},"generic object")," incorrectly or maybe you accidentally deleted the block where you were defining the variable."),(0,n.kt)("li",{parentName:"ul"},"It may be that you have a typo either where you use the variable or where you define the variable. The typo may be in the value instead."),(0,n.kt)("li",{parentName:"ul"},"It may be that you have a typo in a ",(0,n.kt)("a",{parentName:"li",href:"#var-val"},"variable name or value")," in your test."),(0,n.kt)("li",{parentName:"ul"},"It may be that you are ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#values"},"setting the value incorrectly")," in your test. ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#checkboxes"},"Checkboxes are especially complex fields to set"),".")),(0,n.kt)("p",null,"The mistake may have happened on a page much farther back than you expect with a field ALKiln ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#unused-rows"},"skipped"),"."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Debugging:")),(0,n.kt)("p",null,"Sometime the easiest way to see what is wrong is to run the interview manually. Fill in the same values as the test fills in. You can then see what goes wrong when you reach the page with the error."),(0,n.kt)("p",null,"If the mistake is in your interview code, you can fix that bug. If your interview code is fine, you might have to troubleshoot ",(0,n.kt)("a",{parentName:"p",href:"#var-val"},"a typo in your test code"),"."),(0,n.kt)(l,{mdxType:"TypoShameIsReal"}),(0,n.kt)("h2",{id:"missing"},"ALKiln could not find a field or value"),(0,n.kt)("p",null,"Some possible causes:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"You have changed your code to remove a variable or value and have not yet updated your tests."),(0,n.kt)("p",{parentName:"li"},"Look at the error message closely. Look at the ",(0,n.kt)("a",{parentName:"p",href:"#writing_tests.mdx#error-pics"},"picture and HTML of the error page"),". Try to find the variable or value in your interview code or in the code of included or imported files. See if that variable or value is also in your test file.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"The field is hidden behind a ",(0,n.kt)("inlineCode",{parentName:"p"},"show if")," of some kind."),(0,n.kt)("p",{parentName:"li"},"Follow the above steps first. Then check if the field is hidden. If it is hidden, try to see what can make that field visible. Whatever variable and value reveals that answer, check for those in your interview file and in your test code.")),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("p",{parentName:"li"},"There might be a typo in your test. Reading the ",(0,n.kt)("a",{parentName:"p",href:"#var-val"},"section about test typos")," might help."))),(0,n.kt)("h2",{id:"skipped"},"Skipped rows or variables"),(0,n.kt)("p",null,"If you look in a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#report"},"test suite report")," and see that ALKiln ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#unused-rows"},"skipped setting a variable"),", your test code might be ",(0,n.kt)("a",{parentName:"p",href:"#missing"},"missing a field or value")," that it needs in order to fill out that field."),(0,n.kt)("p",null,"If the test still passed, the variable probably belongs to a field that was optional."),(0,n.kt)("h2",{id:"var-val"},"Wrong variable or value"),(0,n.kt)("p",null,"Unfortunately, test code can be tricky to get right. You might have a simple typo or you might have a perfectly normal misunderstanding of ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#values"},"how to write variable names and values"),"."),(0,n.kt)(l,{mdxType:"TypoShameIsReal"}),(0,n.kt)("p",null,"You can check your test code for incorrect variable or value names in a few different ways."),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"If you give every question in your interview an id, the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#report"},"report")," can help show you where the test failed or where ALKiln skipped setting variables. For each test, the report often has a list of question ids. For each question id, the report has a list of variables that ALKiln set on the page that had the error. If the test failed, you can see what question id the test got to. You can also check previous questions to see what variables are missing from each of those pages - what ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#unused-rows"},"fields ALKiln skipped"),"."),(0,n.kt)("li",{parentName:"ol"},"It is more annoying, but in most cases",(0,n.kt)("sup",{parentName:"li",id:"fnref-except"},(0,n.kt)("a",{parentName:"sup",href:"#fn-except",className:"footnote-ref"},"except"))," you can copy the variable name from your test and search for it in your interview code. You can do the same for values of multiple choice questions."),(0,n.kt)("li",{parentName:"ol"},"Alternatively, in most cases",(0,n.kt)("sup",{parentName:"li",id:"fnref-except"},(0,n.kt)("a",{parentName:"sup",href:"#fn-except",className:"footnote-ref"},"except"))," you can go through the interview manually, but follow this procedure:",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"For every single page  (even if you think this page has nothing to do with the problem), click on the ",(0,n.kt)("inlineCode",{parentName:"li"},"</>")," in the nav bar to see the source of the page."),(0,n.kt)("li",{parentName:"ol"},"Copy the name of the variable from your test and search for it on the page of the running interview."),(0,n.kt)("li",{parentName:"ol"},"For multiple choice questions, do the same for the value."),(0,n.kt)("li",{parentName:"ol"},"Use those values to answer the questions ",(0,n.kt)("em",{parentName:"li"},"exactly")," as the test would answer them."),(0,n.kt)("li",{parentName:"ol"},"Continue doing this till you find the problem."))),(0,n.kt)("li",{parentName:"ol"},"If you are unable to find the name of the variable or value in any other way, our last suggestion is the hardest to do, but most reliable - run the interview manually and ",(0,n.kt)("a",{parentName:"li",href:"https://www.dreamhost.com/blog/how-to-inspect-a-website/"},"inspect each page's HTML")," to find exact names. This is complex and we are happy to show you how to do this. Here is a refresher:",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"Go to a new page."),(0,n.kt)("li",{parentName:"ol"},"Click on the ",(0,n.kt)("inlineCode",{parentName:"li"},"</>")," in the nav bar to see the source of the page."),(0,n.kt)("li",{parentName:"ol"},"For every field in the page:",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"If you cannot see the variable name or value, like for an ",(0,n.kt)("inlineCode",{parentName:"li"},"object_checkbox")," field or a field created with ",(0,n.kt)("inlineCode",{parentName:"li"},"code"),":",(0,n.kt)("ol",{parentName:"li"},(0,n.kt)("li",{parentName:"ol"},"Open the browser development tools."),(0,n.kt)("li",{parentName:"ol"},"Examine the DOM of a field to find the encoded name of the variable."),(0,n.kt)("li",{parentName:"ol"},"Use ",(0,n.kt)("inlineCode",{parentName:"li"},"atob('the encoded name or id')")," with the encoded name or id to fully decode every part of the variable name. You may have to decode multiple times."),(0,n.kt)("li",{parentName:"ol"},"From those decoded values, put together the variable name that you need to use. "))),(0,n.kt)("li",{parentName:"ol"},"Copy the variable name and use your editor to search for that exact variable name in your test file. The variable name is the fully decoded and reconstructed variable name."),(0,n.kt)("li",{parentName:"ol"},"In the final variable name, replace ",(0,n.kt)("inlineCode",{parentName:"li"},"x"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"i"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"j"),", etc. with their actual values on that page."),(0,n.kt)("li",{parentName:"ol"},"If the field is a multiple choice field like radio buttons, do the same for the value and use your editor to search for that exact value in your test file. Make sure it appears along with the correct variable name. For a checkbox field, the value is either ",(0,n.kt)("inlineCode",{parentName:"li"},"True")," or ",(0,n.kt)("inlineCode",{parentName:"li"},"False"),"."),(0,n.kt)("li",{parentName:"ol"},"Set the value exactly as the test would have set it."))),(0,n.kt)("li",{parentName:"ol"},"Go on to the next page till you reach the end of your interview or the error.")))),(0,n.kt)("h2",{id:"missing-phrase"},"Phrase is missing"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Symptom")),(0,n.kt)("p",null,"Example error:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-txt"},"The text \"a document called a 'Certified docket sheet'\" SHOULD be on this page, but it's NOT\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Debugging")),(0,n.kt)("p",null,"First, look over the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#error-pics"},"HTML of the page that had the error")," and see what your test is seeing."),(0,n.kt)("p",null,"If your phrase is missing there, try running the interview manually and see if it works. If it does, check the section on ",(0,n.kt)("a",{parentName:"p",href:"#works-manually"},"interviews that work when you run them manually"),"."),(0,n.kt)("p",null,"If it looks like the phrase is actually there, a diff checker can be your best friend. Use a diff checker like ",(0,n.kt)("a",{parentName:"p",href:"https://www.diffchecker.com/text-compare/"},"https://www.diffchecker.com/text-compare/")," to copy/paste both the page's text and your test's text to check for differences. If the tool shows you differences, you can copy/paste the page's text into your test."),(0,n.kt)("p",null,"Even though the text might look correct to you visually and might be the same ones you put in your code, you might not have used the exact same characters that the user is seeing. Docassemble sometimes gives the user slightly different characters than the ones you typed in your code. Ignore the text that you wrote in your code."),(0,n.kt)("p",null,"See a section in ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#special-chars"},"tips about quotes")," for more detailed information. To sum up, it is best to copy/paste the text ",(0,n.kt)("strong",{parentName:"p"},"straight from the screen the user sees"),"."),(0,n.kt)("admonition",{title:"Wrong",type:"danger"},(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"  I should see the phrase \"a document called a 'Certified docket sheet'\"\n"))),(0,n.kt)("admonition",{title:"Right",type:"tip"},(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},'  I should see the phrase "a document called a \u2018Certified docket sheet\u2019"\n'))),(0,n.kt)("h2",{id:"next-page-timeout"},'Timeout or "it took too long to load the next page"'),(0,n.kt)("p",null,'Different problems can cause the report to say that something "took too long" or caused a "timeout" error.'),(0,n.kt)("p",null,'A "timeout" error can happen when a page took too long to load at some point in setup, when running tests, or during test cleanup. This can be because:'),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The page was trying to load a big file"),(0,n.kt)("li",{parentName:"ol"},"ALKiln could not continue to the next page for some reason"),(0,n.kt)("li",{parentName:"ol"},"A Story Table was unable to reach the page with the specified ",(0,n.kt)("inlineCode",{parentName:"li"},"id")),(0,n.kt)("li",{parentName:"ol"},"There is a typo in the name of the interview YAML file that the test should go to")),(0,n.kt)("p",null,"If a page was taking too long to load a big file, use ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#custom-timeout"},'the "max seconds" Step')," to give the page more time to load."),(0,n.kt)("p",null,"You might be able to look at the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#error-pics"},"error page picture and HTML")," for more details. In GitHub, you can download the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#artifacts"},"test artifacts")," to look for it."),(0,n.kt)("p",null,"In GitHub, this error can also happen when:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"The server was busy for too long."),(0,n.kt)("li",{parentName:"ol"},"The server was down."),(0,n.kt)("li",{parentName:"ol"},"That url is stored in the ",(0,n.kt)("inlineCode",{parentName:"li"},"SERVER_URL")," ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#secrets"},"GitHub secret")," is wrong or out of date.")),(0,n.kt)("p",null,"If the server might have been busy or down, try ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/re-running-workflows-and-jobs#re-running-all-the-jobs-in-a-workflow"},"re-running the tests"),"."),(0,n.kt)("p",null,"The value of ",(0,n.kt)("inlineCode",{parentName:"p"},"SERVER_URL")," will be invisible - GitHub considers the value of the secret to be sensitive information, so it is impossible to see that value. You can still give it a new value, though, and that is worth trying. Find the address of the docassemble server where the docassemble ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"testing account")," is located. Edit the secret to give it that url."),(0,n.kt)("h2",{id:"no-artifacts"},"No artifacts"),(0,n.kt)("p",null,"If ALKiln is missing all ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#artifacts"},"artifacts")," by the end of the test run, it means none of the tests ran. There are several possible reasons for this. For this type of error, it can be especially useful to look at the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#console"},"console logs")," and error messages."),(0,n.kt)("p",null,"Possible reasons for missing artifacts for any test:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You might have a gherkin syntax error somewhere in your test files. If this was the case, the setup should have completed and the test run should have started, but immediately failed. ",(0,n.kt)("a",{parentName:"li",href:"#gherkin"},"Find and fix that syntax error"),".")),(0,n.kt)("p",null,"Possible reasons for missing artifacts for ",(0,n.kt)(i.tD,{mdxType:"GTOYS"})," tests:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Your test server was unavailable. If this was the case, your ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#console"},"GitHub job logs")," should show that the test setup failed. Check if the server is running now and run the tests again."),(0,n.kt)("li",{parentName:"ul"},"Your docassemble developer account credentials were invalid. That is, the API key you created for the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#test-accounts"},"docassemble testing account")," and put in the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#workflow-inputs"},(0,n.kt)("inlineCode",{parentName:"a"},"DOCASSEMBLE_DEVELOPER_API_KEY")," GitHub input")," may no longer exist. Maybe the API key got deleted in a docassemble server update. Maybe someone else changed it. You should create a new API key for that testing account and change the value of your ",(0,n.kt)("inlineCode",{parentName:"li"},"DOCASSEMBLE_DEVELOPER_API_KEY")," secret to the new value. You could also create a new testing account and create a new API key for the new account.")),(0,n.kt)("p",null,"Possible reasons for missing artifacts for ",(0,n.kt)(i.oc,{mdxType:"KittyLitter"})," tests:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The Docker container or the docassemble server installation is having trouble starting up. If this is the case, your ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#console"},"GitHub job logs")," should show that the docker build step failed. This is a complex problem and takes experience with creating docassemble servers and maybe Docker. You can set the ALKiln ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#sandbox-optional-inputs"},(0,n.kt)("inlineCode",{parentName:"a"},"SHOW_DOCKER_OUTPUT")," configuration input"),' to "true" to show you more information about what is going on during that setup process. If you have experience with actions and the command line, you might also be able to use the ',(0,n.kt)("a",{parentName:"li",href:"https://github.com/mxschmitt/action-tmate"},"tmate action")," to explore more about what is going on in your Docker container.")),(0,n.kt)("p",null,"Possible reasons for missing artifacts for ",(0,n.kt)(i.tD,{mdxType:"GTOYS"})," and ",(0,n.kt)(i.oc,{mdxType:"KittyLitter"})," tests:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The package manager that installs ALKiln had a problem. This does happen every now and then. If this was the case, your ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#console"},"GitHub job logs")," should show test setup failure. You can ",(0,n.kt)("a",{parentName:"li",href:"https://status.npmjs.org/"},"check its status"),", but the problem would have to be happening for a lot of people at once for it to show up."),(0,n.kt)("li",{parentName:"ul"},"GitHub itself had a problem. This is pretty rare. It can cause a failure at any point in the test. You can ",(0,n.kt)("a",{parentName:"li",href:"https://www.githubstatus.com/"},"check GitHub's status"),". Again, the problem would have to be happening to a lot of people at once for it to show up on that site.")),(0,n.kt)("h2",{id:"docker-container"}," ",(0,n.kt)(i.oc,{mdxType:"KittyLitter"})," Docker trouble (advanced)"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"This is for:")," ",(0,n.kt)(i.oc,{mdxType:"KittyLitter"})," tests"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"You should be familiar with:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The terminal, command line, or command prompt"),(0,n.kt)("li",{parentName:"ul"},"SSH"),(0,n.kt)("li",{parentName:"ul"},"GitHub actions and workflows"),(0,n.kt)("li",{parentName:"ul"},"Setting up and troubleshooting a docassemble docker container")),(0,n.kt)("p",null,(0,n.kt)("em",{parentName:"p"},"This is a very advanced topic. If you want a hand, we are happy to help.")),(0,n.kt)("p",null,"If your docker container is failing to start, failing to install docassemble, or failing to install your package, it is possible to do more docker troubleshooting using ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/marketplace/actions/debugging-with-tmate"},"the tmate GitHub action")," and using the regular ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/docker.html#troubleshooting"},"docassemble docker troubleshooting steps"),"."),(0,n.kt)("h2",{id:"slow"},"Slow tests"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"This is for:")," Everyone"),(0,n.kt)("p",null,"There are a various reasons your tests could be slow."),(0,n.kt)("p",null,"First, there are reasons even passing tests can be slow, including:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Your pages may just be taking a long time to load. This might happen if you are building a large document, uploading a large document, or for other reasons. That can even cause the tests to fail if it takes too long. You can use the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#custom-timeout"},'"max seconds" Step')," to give them more time. There are some things you can do to speed up some kinds of processes on your server, but that is out of scope for this document."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#download"},"Downloading a lot of documents")," can take a while. Right now, ALKiln is unable to tell when a document is done downloading, so it gives every document the maximum time possible. By default, that is a full 60 seconds. You can decrease that time with the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#custom-timeout"},'"max seconds" Step'),', but that time might be too short for the documents to download. You can experiment a bit. You can also be tricky with the "max seconds" Step, though, and increase and decrease the value at appropriate times to improve both speed and downloading. '),(0,n.kt)("li",{parentName:"ol"},"If your server reloads a lot during ",(0,n.kt)(i.tD,{mdxType:"GTOYS"})," tests, it will take longer for tests to finish because the tests try to wait for the server to be available to avoid ",(0,n.kt)("a",{parentName:"li",href:"#flake"},'"flaky"')," tests. Your server can reload for many reasons. For example, saving your config file, saving a python module, or pulling a package that uses a python module can all cause your server to reload. This might even cause your tests to fail.")),(0,n.kt)("p",null,"There are also some different reasons that tests get slower when they fail, including:",(0,n.kt)("span",{id:"server-reload"})),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Each failing test gets re-run once, so that can double the amount of time that tests take. Currently, there is no way to choose whether to re-run tests or not."),(0,n.kt)("li",{parentName:"ol"},"When a Story Table is trying to reach a target page and gets stuck somewhere, it will wait the maximum seconds allowed for a page load (which you can ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#custom-timeout"},"change"),") to let the interview continue to the next page. By default, that is 30 seconds. Since those tests re-run, that can make a test take more than 1 minute.")),(0,n.kt)("h2",{id:"flake"},"Flaky tests"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"This is for:")," Everyone"),(0,n.kt)("p",null,'"Flake" happens when your tests fail for reasons that have nothing to do with your interview or test code. There can be many causes for flaky tests. For example:'),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Your server reloading during ",(0,n.kt)(i.tD,{mdxType:"GTOYS"})," tests could make it impossible for your tests to reach your interview webpage. You just have to re-run those tests."),(0,n.kt)("li",{parentName:"ul"},"A slow-loading interview page might make ALKiln think your server is unavailable. That can happen for different reasons. For example, a large document might be taking a long time to load. You might be able to avoid this failure by increasing the maximum wait time with the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#custom-timeout"},'"max seconds" Step'),". That can make tests ",(0,n.kt)("a",{parentName:"li",href:"#slow"},"slower"),". You can be tricky about it, though. If you just increase that value for one Step and then reduce it again, that can avoid slowing down your tests too much."),(0,n.kt)("li",{parentName:"ul"},"Tapping on an element might show content and move other elements around. ALKiln might fail to click on the elements that are moving. You can use the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#wait"},'"wait" Step')," to give elements more time to finish moving."),(0,n.kt)("li",{parentName:"ul"},"Third-party services, like GitHub or package managers, that the tests rely on do have problems every now and then. You just have to re-run those tests."),(0,n.kt)("li",{parentName:"ul"},"An interview page rendering slowly can hide a field that ALKiln is trying to fill in. If we find that there is a particular type of field that is particularly slow to load, we can slow down ALKiln for that type of field, but that is the most ALKiln can do.")),(0,n.kt)("p",null,"The ",(0,n.kt)(i.oc,{mdxType:"KittyLitter"})," tests have the best chance of avoiding flakiness because they get their own dedicated server, but even they can flake out sometimes."),(0,n.kt)("h2",{id:"missing-trigger"},"Missing trigger variable"),(0,n.kt)("p",null,"This warning only matters for old 3-column Story Tables that use index variables or generic objects."),(0,n.kt)("p",null,"If you are using a story table with ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variables")," (",(0,n.kt)("inlineCode",{parentName:"p"},"i"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"j"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"k"),", etc) or ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#generic"},"generic objects")," (",(0,n.kt)("inlineCode",{parentName:"p"},"x"),"), you need to add some ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#special-html"},"special HTML")," to the interview file where you set your ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/initial.html#default%20screen%20parts"},(0,n.kt)("inlineCode",{parentName:"a"},"default screen parts")," block"),". Without that HTML, ALKiln can get confused about what variable you are try to set."),(0,n.kt)("p",null,"The 3-column Story Table is old and you should stop using it. You should ",(0,n.kt)("a",{parentName:"p",href:"#deprecated-story-tables"},"switch to the current 2-column Story Table")," when you get a chance."),(0,n.kt)("p",null,"This warning sometimes shows up when nothing is wrong. If you are not using a 3-column Story Table or your interview has no index variables or generic objects, you can ignore this warning."),(0,n.kt)("h2",{id:"deprecated-story-tables"},"Switch to 2-column Story Tables"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"This is for:")," anyone using a 3-column Story Table and also has ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variables")," or ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#generic"},"generic objects"),"."),(0,n.kt)("p",null,"How to switch from the 3-column Story Table to the 2-column Story Table:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Remove the ",(0,n.kt)("inlineCode",{parentName:"li"},"trigger")," column (the 3rd column) from the header row and every other row"),(0,n.kt)("li",{parentName:"ol"},"Replace all ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variables")," (",(0,n.kt)("inlineCode",{parentName:"li"},"i"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"j"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"k"),", etc) or ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/fields.html#generic"},"generic objects")," (",(0,n.kt)("inlineCode",{parentName:"li"},"x"),") in the ",(0,n.kt)("inlineCode",{parentName:"li"},"var")," column (the 1st column) with their actual values.")),(0,n.kt)("admonition",{title:"Before",type:"danger"},(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"    | var | value | trigger |\n    | x[i].hair.how_much | Enough | users[0].hair.how_much |\n    | x[i].hair.color | Sea green | users[0].hair.how_much |\n"))),(0,n.kt)("admonition",{title:"After",type:"tip"},(0,n.kt)("pre",{parentName:"admonition"},(0,n.kt)("code",{parentName:"pre",className:"language-gherkin"},"    | var | value |\n    | users[0].hair.how_much | Enough |\n    | users[0].hair.color | Sea green |\n"))),(0,n.kt)("p",null,"Add more ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#special-html"},"special HTML")," to your ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/initial.html#default%20screen%20parts"},(0,n.kt)("inlineCode",{parentName:"a"},"default screen parts")," block"),". To summarize:"),(0,n.kt)("p",null,"Keep the trigger HTML in your ",(0,n.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/initial.html#default%20screen%20parts"},(0,n.kt)("inlineCode",{parentName:"a"},"default screen parts")," block"),". It can be useful for other reasons. Add the proxy variable HTML to that ",(0,n.kt)("inlineCode",{parentName:"p"},"default screen parts")," block."),(0,n.kt)("div",{className:"footnotes"},(0,n.kt)("hr",{parentName:"div"}),(0,n.kt)("ol",{parentName:"div"},(0,n.kt)("li",{parentName:"ol",id:"fn-except"},"In some cases, you will be unable to find a variable or value name in your interview code. For example, ",(0,n.kt)("inlineCode",{parentName:"li"},"object"),"-type fields, like ",(0,n.kt)("inlineCode",{parentName:"li"},"object_multiselect")," or for fields that use ",(0,n.kt)("inlineCode",{parentName:"li"},"code")," might use values that are outside of your interview code. They might be in a module of your interview, in a module of an interview you ",(0,n.kt)("inlineCode",{parentName:"li"},"include"),", in a database like S3, or somewhere else.",(0,n.kt)("a",{parentName:"li",href:"#fnref-except",className:"footnote-backref"},"\u21a9")))))}c.isMDXComponent=!0}}]);