"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[3142],{994:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>t,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"components/FormFyxer/docassemble_support","title":"formfyxer.docassemble_support","description":"* formfyxer.docassemble\\\\support","source":"@site/docs/components/FormFyxer/docassemble_support.md","sourceDirName":"components/FormFyxer","slug":"/components/FormFyxer/docassemble_support","permalink":"/docs/components/FormFyxer/docassemble_support","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/FormFyxer/docassemble_support.md","tags":[],"version":"current","frontMatter":{}}');var r=n(4848),o=n(8453);const l={},t="formfyxer.docassemble_support",a={},c=[{value:"get_openai_api_key",id:"get_openai_api_key",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"get_openai_api_key_from_sources",id:"get_openai_api_key_from_sources",level:3},{value:"Arguments",id:"arguments-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"is_docassemble_available",id:"is_docassemble_available",level:3},{value:"Returns",id:"returns-2",level:4}];function d(e){const s={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"formfyxerdocassemble_support",children:"formfyxer.docassemble_support"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.a,{href:"#formfyxer.docassemble_support",children:"formfyxer.docassemble_support"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"#formfyxer.docassemble_support.get_openai_api_key",children:"get_openai_api_key"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"#formfyxer.docassemble_support.get_openai_api_key_from_sources",children:"get_openai_api_key_from_sources"})}),"\n",(0,r.jsx)(s.li,{children:(0,r.jsx)(s.a,{href:"#formfyxer.docassemble_support.is_docassemble_available",children:"is_docassemble_available"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"Support for docassemble configuration integration."}),"\n",(0,r.jsx)(s.p,{children:"This module provides centralized support for accessing docassemble configuration\nvalues, with graceful fallback when docassemble is not available."}),"\n",(0,r.jsx)("a",{id:"formfyxer.docassemble_support.get_openai_api_key"}),"\n",(0,r.jsx)(s.h3,{id:"get_openai_api_key",children:"get_openai_api_key"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def get_openai_api_key(explicit_key: Optional[str] = None) -> Optional[str]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Get OpenAI API key with fallback to docassemble config if available."}),"\n",(0,r.jsx)(s.p,{children:"This function implements the following priority order:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Explicit API key parameter (highest priority)"}),"\n",(0,r.jsx)(s.li,{children:'Docassemble get_config("openai api key")'}),"\n",(0,r.jsx)(s.li,{children:'Docassemble get_config("open ai", {}).get("key")'}),"\n",(0,r.jsx)(s.li,{children:"OPENAI_API_KEY environment variable (lowest priority)"}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"explicit_key"})," - Explicitly provided API key (takes highest precedence)"]}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:"The API key to use, or None if none found"}),"\n",(0,r.jsx)("a",{id:"formfyxer.docassemble_support.get_openai_api_key_from_sources"}),"\n",(0,r.jsx)(s.h3,{id:"get_openai_api_key_from_sources",children:"get_openai_api_key_from_sources"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def get_openai_api_key_from_sources(\n        explicit_key: Optional[str] = None,\n        creds: Optional[Dict[str, Any]] = None) -> Optional[str]\n"})}),"\n",(0,r.jsx)(s.p,{children:"Get OpenAI API key with fallback through multiple sources."}),"\n",(0,r.jsx)(s.p,{children:"This function implements the following priority order:"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Explicit API key parameter (highest priority)"}),"\n",(0,r.jsx)(s.li,{children:'Credentials dict "key" field'}),"\n",(0,r.jsx)(s.li,{children:'Docassemble get_config("openai api key")'}),"\n",(0,r.jsx)(s.li,{children:'Docassemble get_config("open ai", {}).get("key")'}),"\n",(0,r.jsx)(s.li,{children:"OPENAI_API_KEY environment variable (lowest priority)"}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"explicit_key"})," - Explicitly provided API key (takes highest precedence)"]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"creds"}),' - Credentials dict that may contain a "key" field']}),"\n"]}),"\n",(0,r.jsx)(s.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:"The API key to use, or None if none found"}),"\n",(0,r.jsx)("a",{id:"formfyxer.docassemble_support.is_docassemble_available"}),"\n",(0,r.jsx)(s.h3,{id:"is_docassemble_available",children:"is_docassemble_available"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"def is_docassemble_available() -> bool\n"})}),"\n",(0,r.jsx)(s.p,{children:"Check if docassemble is available in the current environment."}),"\n",(0,r.jsx)(s.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsx)(s.p,{children:"True if docassemble.base.util can be imported, False otherwise"})]})}function p(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>t});var i=n(6540);const r={},o=i.createContext(r);function l(e){const s=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function t(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);