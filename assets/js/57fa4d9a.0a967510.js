"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[2962],{4137:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},y=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),y=a,h=d["".concat(s,".").concat(y)]||d[y]||u[y]||r;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=y;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}y.displayName="MDXCreateElement"},8802:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var o=n(7462),a=(n(7294),n(4137));const r={id:"python",title:"Python",sidebar_label:"Python",slug:"/coding_style_guide/python"},i=void 0,l={unversionedId:"coding_style/python",id:"coding_style/python",title:"Python",description:"Use Python conventions for Python code",source:"@site/docs/coding_style/python.md",sourceDirName:"coding_style",slug:"/coding_style_guide/python",permalink:"/docassemble-AssemblyLine-documentation/docs/coding_style_guide/python",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/coding_style/python.md",tags:[],version:"current",frontMatter:{id:"python",title:"Python",sidebar_label:"Python",slug:"/coding_style_guide/python"},sidebar:"mainSidebar",previous:{title:"Coding Style",permalink:"/docassemble-AssemblyLine-documentation/docs/coding_style_guide"},next:{title:"Interview files",permalink:"/docassemble-AssemblyLine-documentation/docs/coding_style_guide/yaml"}},s={},p=[{value:"Use Python conventions for Python code",id:"use-python-conventions-for-python-code",level:2},{value:"Highlights of PEP 8",id:"highlights-of-pep-8",level:3},{value:"Use snake_case for variable names",id:"use-snake_case-for-variable-names",level:3},{value:"Do not annotate variable names with type (Hungarian notation)",id:"do-not-annotate-variable-names-with-type-hungarian-notation",level:3},{value:"Exceptions to PEP 8",id:"exceptions-to-pep-8",level:3},{value:"Tab width",id:"tab-width",level:4}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"use-python-conventions-for-python-code"},"Use Python conventions for Python code"),(0,a.kt)("p",null,"In general, we refer to Python's ",(0,a.kt)("a",{parentName:"p",href:"https://www.python.org/dev/peps/pep-0008/"},"PEP 8")," for all Python code."),(0,a.kt)("h3",{id:"highlights-of-pep-8"},"Highlights of PEP 8"),(0,a.kt)("p",null,"Docassemble does not force you to write very much Python code. Where you do, however, please\nfollow Python conventions, listed below."),(0,a.kt)("h3",{id:"use-snake_case-for-variable-names"},"Use snake_case for variable names"),(0,a.kt)("p",null,"Variable names should always start with a letter or ",(0,a.kt)("inlineCode",{parentName:"p"},"_"),". Names should be lowercase\nand words should separated by an underscore."),(0,a.kt)("p",null,"Example: ",(0,a.kt)("inlineCode",{parentName:"p"},"number_of_people"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"issue_12_address")),(0,a.kt)("h3",{id:"do-not-annotate-variable-names-with-type-hungarian-notation"},"Do not annotate variable names with type (Hungarian notation)"),(0,a.kt)("p",null,"Use descriptive variable names, but do not include the type as part of the name."),(0,a.kt)("p",null,"E.g., ",(0,a.kt)("inlineCode",{parentName:"p"},"user_name_TE"),' for a "text" or ',(0,a.kt)("inlineCode",{parentName:"p"},"str")," type. This limits your ability to change\nthe datatype later and usually does not add helpful information."),(0,a.kt)("p",null,"However: you may want to specify types that also have a ",(0,a.kt)("strong",{parentName:"p"},"semantic")," meaning, such\nas ",(0,a.kt)("inlineCode",{parentName:"p"},"_date")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"_list"),". These usually aid in clarity and do not limit the specific\ndatatype of the variable."),(0,a.kt)("h3",{id:"exceptions-to-pep-8"},"Exceptions to PEP 8"),(0,a.kt)("h4",{id:"tab-width"},"Tab width"),(0,a.kt)("p",null,"We use 2 spaces, not 4, for all indentation levels. The Docassemble playground makes it hard to\nedit files that scroll too far horizontally."))}d.isMDXComponent=!0}}]);