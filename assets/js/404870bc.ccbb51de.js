"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[8898],{4137:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>c});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var g=a.createContext({}),u=function(e){var t=a.useContext(g),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(g.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,g=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=l,c=p["".concat(g,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(c,i(i({ref:t},s),{},{components:n})):a.createElement(c,i({ref:t},s))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=m;var o={};for(var g in t)hasOwnProperty.call(t,g)&&(o[g]=t[g]);o.originalType=e,o[p]="string"==typeof e?e:l,i[1]=o;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7020:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=n(7462),l=(n(7294),n(4137));const r={sidebar_label:"language",title:"AssemblyLine.language"},i=void 0,o={unversionedId:"reference/AssemblyLine/language",id:"reference/AssemblyLine/language",title:"AssemblyLine.language",description:"get\\_tuples",source:"@site/docs/reference/AssemblyLine/language.md",sourceDirName:"reference/AssemblyLine",slug:"/reference/AssemblyLine/language",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/AssemblyLine/language",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/reference/AssemblyLine/language.md",tags:[],version:"current",frontMatter:{sidebar_label:"language",title:"AssemblyLine.language"},sidebar:"api",previous:{title:"al_general",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/AssemblyLine/al_general"},next:{title:"sessions",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/AssemblyLine/sessions"}},g={},u=[{value:"get_tuples",id:"get_tuples",level:4},{value:"get_language_list_dropdown",id:"get_language_list_dropdown",level:4},{value:"get_language_list_dropdown_item",id:"get_language_list_dropdown_item",level:4},{value:"get_language_list",id:"get_language_list",level:4},{value:"get_language_list_item",id:"get_language_list_item",level:4}],s={toc:u};function p(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"get_tuples"},"get","_","tuples"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def get_tuples(lang_codes: List[str],\n               languages_path: Optional[str] = None) -> List[Tuple[str, str]]\n")),(0,l.kt)("p",null,"Returns a list of tuples representing the language name, followed by language ISO 639-1 code."),(0,l.kt)("p",null,"It will use the native_name value from the languages.yml file if available, otherwise it will use the\nEnglish name from pycountry. If neither is present, it will use the language code itself."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"lang_codes")," - a list of ISO 639-1 language codes (e.g. ","['","en","'",", ","'","es","']",")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"languages_path")," - the path to the languages.yml file (defaults to data/sources/languages.yml)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  A list of tuples representing the language name, followed by language ISO 639-1 code."),(0,l.kt)("h4",{id:"get_language_list_dropdown"},"get","_","language","_","list","_","dropdown"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def get_language_list_dropdown(lang_codes: List[str],\n                               current: str = "",\n                               languages_path: Optional[str] = None,\n                               event_name="al_change_language",\n                               icon="fa-solid fa-language") -> str\n')),(0,l.kt)("p",null,"Get a Bootstrap 5 dropdown menu for language selection that can be added to navigation bar."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"lang_codes")," - a list of ISO 639-1 language codes (e.g. ","['","en","'",", ","'","es","']",")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"current")," - the current language code"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"languages_path")," - the path to the languages.yml file (defaults to data/sources/languages.yml)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event_name")," - the name of the event to trigger when the language is changed"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"icon")," - the name of the icon to use for the dropdown menu (defaults to fa-solid fa-language)")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  A string containing the HTML for a dropdown menu for language selection."),(0,l.kt)("h4",{id:"get_language_list_dropdown_item"},"get","_","language","_","list","_","dropdown","_","item"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def get_language_list_dropdown_item(language: Tuple[str, str],\n                                    link: bool = True,\n                                    event_name="al_change_language") -> str\n')),(0,l.kt)("p",null,"Given an ordered tuple, returns a link to the current interview with lang=language code and the link title\ngiven in the first part of the tuple."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"language")," - a tuple containing the language name and language code"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"link")," - whether to return a link or just the text"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"languages_path")," - the path to the languages.yml file (defaults to data/sources/languages.yml)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event_name")," - the name of the event to trigger when the language is changed")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  A string containing the HTML for a dropdown menu item for language selection."),(0,l.kt)("h4",{id:"get_language_list"},"get","_","language","_","list"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def get_language_list(languages: Optional[List[Tuple[str, str]]] = None,\n                      current="",\n                      lang_codes: Optional[List[str]] = None,\n                      languages_path: Optional[str] = None,\n                      event_name="al_change_language") -> str\n')),(0,l.kt)("p",null,"Given a list of language codes, returns\na Bootstrap-formatted unordered inline list. The current language will not be a link."),(0,l.kt)("p",null,"Deprecated behavior: instead of a list of language codes, you can provide list of\ntuples containing the language name and language code. This is deprecated and may be removed in a future version."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"languages")," - a list of tuples containing the language name and language code (deprecated)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"lang_codes")," - a list of ISO 639-1 language codes (e.g. ","['","en","'",", ","'","es","']",")"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"current")," - the current language code"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"languages_path")," - the path to the languages.yml file (defaults to data/sources/languages.yml)"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event_name")," - the name of the event to trigger when the language is changed")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  A string containing the HTML for an unordered inline list of language selection."),(0,l.kt)("h4",{id:"get_language_list_item"},"get","_","language","_","list","_","item"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def get_language_list_item(language,\n                           link=True,\n                           event_name="al_change_language")\n')),(0,l.kt)("p",null,"Given an ordered tuple, returns a link to the current interview with lang=language code and the link title\ngiven in the first part of the tuple."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"language")," - a tuple containing the language name and language code"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"link")," - whether to return a link or just the text"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"event_name")," - the name of the event to trigger when the language is changed")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  A string containing the HTML for an unordered inline list item for language selection."))}p.isMDXComponent=!0}}]);