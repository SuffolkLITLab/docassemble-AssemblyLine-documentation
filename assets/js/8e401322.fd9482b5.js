"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[8918],{1026:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"style_guide/question_style_validation","title":"Use input validation carefully","description":"When to use input validation","source":"@site/docs/style_guide/question_style_validation.md","sourceDirName":"style_guide","slug":"/style_guide/question_style_validation","permalink":"/docs/style_guide/question_style_validation","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/style_guide/question_style_validation.md","tags":[],"version":"current","frontMatter":{"id":"question_style_validation","title":"Use input validation carefully","sidebar_label":"Use input validation carefully","slug":"question_style_validation"},"sidebar":"docs","previous":{"title":"Format text for legibility","permalink":"/docs/style_guide/formatting"},"next":{"title":"Names","permalink":"/docs/style_guide/question_library/names"}}');var o=i(4848),s=i(8453);const a={id:"question_style_validation",title:"Use input validation carefully",sidebar_label:"Use input validation carefully",slug:"question_style_validation"},r=void 0,l={},d=[{value:"When to use input validation",id:"when-to-use-input-validation",level:2},{value:"When to avoid input validation",id:"when-to-avoid-input-validation",level:2},{value:"How to write good validation messages",id:"how-to-write-good-validation-messages",level:2},{value:"Further reading",id:"further-reading",level:2},{value:"&quot;Soft&quot; validation: how to use warnings",id:"soft-validation-how-to-use-warnings",level:2}];function u(e){const t={a:"a",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h2,{id:"when-to-use-input-validation",children:"When to use input validation"}),"\n",(0,o.jsx)(t.p,{children:"Use input validation to help ensure your user places information in the correct\nlocation on the form. Validation can be helpful to provide instant feedback\nto your user and avoid having a form rejected by a clerk."}),"\n",(0,o.jsx)(t.p,{children:"Consider whether it would be helpful or too much clutter for your user to see\nany validation rules, such as maximum length, before they start typing on the\nform."}),"\n",(0,o.jsx)(t.p,{children:"Examples of places validation can be helpful:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"to limit a Social Security Number input to 4 digits (and prevent\na user from typing additional digits, revealing a private number)"}),"\n",(0,o.jsx)(t.li,{children:"to ensure an ID number or account number is correctly entered"}),"\n",(0,o.jsx)(t.li,{children:"to limit the length of fields that will be placed on a PDF form\nwith limited space"}),"\n",(0,o.jsx)(t.li,{children:"to validate a strictly defined format, such as an email address"}),"\n",(0,o.jsx)(t.li,{children:"to provide password complexity rules (always display complexity\nrules before the user starts typing a password)"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"when-to-avoid-input-validation",children:"When to avoid input validation"}),"\n",(0,o.jsx)(t.p,{children:"Avoid validation when:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"the rules for the correct format are inconsistent in the real world. For example:\ncase numbers or docket numbers"}),"\n",(0,o.jsx)(t.li,{children:"rules are strict but may be unpredictable, such as for a phone number that\nmight be provided in an international format you do not have the ability to\ncode for specifically"}),"\n",(0,o.jsx)(t.li,{children:"users may have a valid reason for using the input to communicate with the clerk,\nsuch as providing a short note in addition to the value, like (my cousin's number)"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"how-to-write-good-validation-messages",children:"How to write good validation messages"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Use error messages to tell users how to fix problems, not describe what is wrong."}),"\n",(0,o.jsx)(t.li,{children:"Don't blame the user for the problem."}),"\n",(0,o.jsx)(t.li,{children:"Try reading the error message aloud. Make sure it is specific to the actual error."}),"\n",(0,o.jsx)(t.li,{children:"You may need to write multiple error messages to handle different error states."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://design-system.service.gov.uk/components/error-message/#be-clear-and-concise",children:"UK.gov guidance on writing error messages"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://service-manual.nhs.uk/design-system/components/error-message",children:"UK's NHS guidance on writing error messages"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://uxplanet.org/how-to-write-good-error-messages-858e4551cd4",children:"https://uxplanet.org/how-to-write-good-error-messages-858e4551cd4"})}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"soft-validation-how-to-use-warnings",children:'"Soft" validation: how to use warnings'}),"\n",(0,o.jsx)(t.p,{children:"Sometimes you don\u2019t want to stop the user, you just want to let the user know to double check their answer. Unfortunately, we still don\u2019t have a good model for this and are looking for evidence-based research on it. Here are some unverified possibilities."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"For important choices, you can use a follow up screen to warn someone about their choice. If it\u2019s not that important, you might consider skipping the validation completely."}),"\n",(0,o.jsx)(t.li,{children:"For radio buttons, you might only show the warning if they choose something you want to draw their attention to."}),"\n",(0,o.jsx)(t.li,{children:"A modal pop-up is one way to tell the user something might be wrong. Some people find those confusing and annoying."}),"\n",(0,o.jsx)(t.li,{children:"Another option is to show warning text under the field as soon as the user starts answering. You would hide it as soon as the answer looked good. You would allow the user to continue either way. With this method, some people may feel they\u2019re being scolded before they\u2019ve been given a chance to put in their answer."}),"\n",(0,o.jsx)(t.li,{children:"A possible way around the issue is to offer an \u201cI know what I\u2019m doing\u201d checkbox that reveals a different field - one that won\u2019t stop the user."}),"\n",(0,o.jsx)(t.li,{children:"Alternatively, you could have a review screen for the user before they submit their final answer and show the warning there. It\u2019s not immediate, but they could choose to edit the answer at that point."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>r});var n=i(6540);const o={},s=n.createContext(o);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);