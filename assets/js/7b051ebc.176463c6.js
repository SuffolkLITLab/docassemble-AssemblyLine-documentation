"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[5938],{2257:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var o=s(4848),t=s(8453);const i={id:"background_assembly",title:"Assembling documents in the background\n",sidebar_label:"Assembling documents in the background\n",slug:"background_assembly"},d=void 0,r={id:"components/AssemblyLine/background_assembly",title:"Assembling documents in the background\n",description:"Assembly Line 3.2.0 and later introduce a background processing option to the ALDocumentBundle",source:"@site/docs/components/AssemblyLine/background_assembly.md",sourceDirName:"components/AssemblyLine",slug:"/components/AssemblyLine/background_assembly",permalink:"/docs/components/AssemblyLine/background_assembly",draft:!1,unlisted:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/AssemblyLine/background_assembly.md",tags:[],version:"current",frontMatter:{id:"background_assembly",title:"Assembling documents in the background\n",sidebar_label:"Assembling documents in the background\n",slug:"background_assembly"},sidebar:"docs",previous:{title:"Error pages",permalink:"/docs/components/AssemblyLine/error_actions"},next:{title:"al_general",permalink:"/docs/components/AssemblyLine/al_general"}},a={},l=[{value:"Adding background processing to your interview",id:"adding-background-processing-to-your-interview",level:2},{value:"Editing your interview order block",id:"editing-your-interview-order-block",level:3},{value:"Editing the download screen",id:"editing-the-download-screen",level:3},{value:"And don&#39;t forget",id:"and-dont-forget",level:3},{value:"Customizing the user experience",id:"customizing-the-user-experience",level:3},{value:"What happens in the background task",id:"what-happens-in-the-background-task",level:4},{value:"The waiting screen",id:"the-waiting-screen",level:4},{value:"Key methods and built-in task names",id:"key-methods-and-built-in-task-names",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Assembly Line ",(0,o.jsx)(n.code,{children:"3.2.0"})," and later introduce a background processing option to the ",(0,o.jsx)(n.a,{href:"/docs/components/AssemblyLine/al_document",children:"ALDocumentBundle"}),"\nclass."]}),"\n",(0,o.jsx)(n.p,{children:"Background processing:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Is safer when your user may generate large documents that take more than 60 seconds to assemble or convert to PDF"}),"\n",(0,o.jsx)(n.li,{children:"Prevents frustrating 504 gateway timeout errors"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Negatives include:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Requires more care from the developer"}),"\n",(0,o.jsx)(n.li,{children:'Usually prevents you from using an "edit" button on the final screen'}),"\n",(0,o.jsx)(n.li,{children:"Means assembling documents will always take at least 10 seconds"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"If your users currently have to wait a long time to get their finished documents, or if your users\never see an error screen because the downloads took too long to make, you should use background processing."}),"\n",(0,o.jsx)(n.p,{children:"If you have only a few small documents and there is no user-provided content (like photos or\nother uploaded exhibits), you should try without using background processing first."}),"\n",(0,o.jsx)(n.h2,{id:"adding-background-processing-to-your-interview",children:"Adding background processing to your interview"}),"\n",(0,o.jsx)(n.p,{children:"Background processing is a built-in feature of the ALDocumentBundle class. Using it involves:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Starting the built-in background assembly ",(0,o.jsx)(n.code,{children:"task"})," in your interview order block"]}),"\n",(0,o.jsx)(n.li,{children:"Setting conditions on when to display a waiting screen"}),"\n",(0,o.jsx)(n.li,{children:"Editing the download screen so it makes use of the background assembled documents"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"In most cases, when you use background processing, you should also:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Disable the preview screen"}),"\n",(0,o.jsx)(n.li,{children:"Show a review screen in-line before the download screen."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"editing-your-interview-order-block",children:"Editing your interview order block"}),"\n",(0,o.jsx)(n.p,{children:"Find the line in your interview order block where you would like to start the background\nassembly. In most cases, this should be just before the download screen."}),"\n",(0,o.jsx)(n.p,{children:"Add a line like this:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"  if not al_user_bundle.generate_downloads_with_docx_task.ready():\n    al_download_waiting_screen\n"})}),"\n",(0,o.jsxs)(n.admonition,{title:"Make sure all required variables are defined",type:"warning",children:[(0,o.jsxs)(n.p,{children:["Background assembly requires that all of the logic required to assemble your documents\nwas triggered ",(0,o.jsx)(n.strong,{children:"before"})," the background processing starts. You cannot have any\nundefined variables that are needed for the document to generate."]}),(0,o.jsxs)(n.p,{children:["Note that if you use ",(0,o.jsx)(n.code,{children:"skip undefined"})," this isn't usually a problem."]})]}),"\n",(0,o.jsx)(n.p,{children:"In some cases, you may want to start the background assembly earlier than just before the download screen.\nFor example, you may want to show the user instructions, or get information for a task\nthat will not change the documents, such as eFiling."}),"\n",(0,o.jsx)(n.h3,{id:"editing-the-download-screen",children:"Editing the download screen"}),"\n",(0,o.jsxs)(n.p,{children:["On the download screen, edit the reference to ",(0,o.jsx)(n.code,{children:"download_list_html()"})," to let it use\nthe background assembled documents. Using cached files is disabled by default."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'---\nid: download\nevent: download_screen\nquestion: |\n  Download the documents\nsubquestion: |\n  Your documents are ready for download.\n\n  If you need to make any changes, click the "Undo" button and click the button to edit\n  the answer you want to change.\n\n  ${ al_user_bundle.download_list_html(use_previously_cached_files=True, include_full_pdf=True) }\n'})}),"\n",(0,o.jsx)(n.h3,{id:"and-dont-forget",children:"And don't forget"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Remove the preview screen. A waiting screen before the preview isn't a good user experience for most interviews."}),"\n",(0,o.jsx)(n.li,{children:'Add the review screen to your interview order block. The user will not be able to click the "edit answers" button\non the download screen.'}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"customizing-the-user-experience",children:"Customizing the user experience"}),"\n",(0,o.jsx)(n.h4,{id:"what-happens-in-the-background-task",children:"What happens in the background task"}),"\n",(0,o.jsx)(n.p,{children:"You may want to provide a non-default set of options to the file generation step."}),"\n",(0,o.jsxs)(n.p,{children:["Override ",(0,o.jsx)(n.code,{children:"al_user_bundle.generate_downloads_with_docx_task"})," or define a task with your\nown name. The default contents of this task are:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"---\ngeneric object: ALDocumentBundle\nevent: x.create_downloads_with_docx\ncode: |\n  download_response = x.get_cacheable_documents(key=\"final\", pdf=True, docx=True, include_full_pdf=True)\n  background_response_action(x.attr_name('save_downloads'), download_response=download_response)\n"})}),"\n",(0,o.jsx)(n.h4,{id:"the-waiting-screen",children:"The waiting screen"}),"\n",(0,o.jsxs)(n.p,{children:["Override ",(0,o.jsx)(n.code,{children:"al_download_waiting_screen"}),", or define a screen with your own name. The default contents\nof this question block are:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'---\nid: waiting screen\nquestion: |\n  Please wait while we make your documents\nsubquestion: |\n  This can take a few minutes.\n  <div class="spinner-border text-primary d-flex justify-content-center" role="status">\n      <span class="sr-only">Making documents...</span>\n  </div>\nevent: al_download_waiting_screen\nreload: True\n'})}),"\n",(0,o.jsxs)(n.p,{children:["The default screen uses ",(0,o.jsx)(n.a,{href:"https://getbootstrap.com/docs/5.2/components/spinners/",children:"standard Bootstrap components"}),"\nto create the spinning circle. You can put anything you like here, although an animation is recommended."]}),"\n",(0,o.jsxs)(n.p,{children:["If you would like the screen to reload more often than every 10 seconds, ",(0,o.jsx)(n.a,{href:"https://docassemble.org/docs/modifiers.html#reload",children:"you can set it as low as 4 seconds"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"key-methods-and-built-in-task-names",children:"Key methods and built-in task names"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"al_download_waiting_screen"})," is a Assembly Line provided example of a generic waiting screen."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"generate_downloads_task"})," is the name of a ",(0,o.jsx)(n.a,{href:"https://docassemble.org/docs/background.html#background_action",children:"background task object"})," defined\nin the standard includes as an attribute of each ALDocumentBundle. It triggers a task to produce a full PDF of the bundle using the ",(0,o.jsx)(n.code,{children:"final"}),"\nkey, a full ZIP, and it will not generate DOCX versions of the items, only downloadable (PDF) versions."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"create_downloads"})," is an event defined in the Assembly Line standard includes as an attribute for each ALDocumentBundle.\nThis event is triggered by ",(0,o.jsx)(n.code,{children:"generate_downloads_task"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"generate_downloads_with_docx_task"})," is an alternative to ",(0,o.jsx)(n.code,{children:"generate_downloads_task"})," that does produce the DOCX\nas well as PDF version of each document. You can safely use this even if you do not always want to display\nthe DOCX on the download screen."]}),"\n",(0,o.jsxs)(n.p,{children:["In turn, ",(0,o.jsx)(n.code,{children:"generate_downloads_with_docx_task"})," triggers the event ",(0,o.jsx)(n.code,{children:"create_downloads_with_docx"})]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine/blob/76ead20669674d1a458c15af99aeba44899866cd/docassemble/AssemblyLine/al_document.py#L1826",children:"get_cacheable_documents()"})," is a new method that generates\nall ",(0,o.jsx)(n.strong,{children:"enabled"})," documents in the bundle and returns a list, where each item is a tuple of the DOCX and\nPDF versions of the document."]}),"\n",(0,o.jsx)(n.p,{children:"Optionally, it will also produce a .ZIP and a .PDF version of the full bundle."}),"\n",(0,o.jsxs)(n.p,{children:["This is called from a YAML block in the Assembly Line standard include files to define the ",(0,o.jsx)(n.code,{children:"_downloadable_files"}),"\nattribute of a bundle."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"/docs/components/AssemblyLine/al_document#download_list_html",children:"download_list_html()"})," has an optional parameter,\n",(0,o.jsx)(n.code,{children:"use_previously_cached_files"})," which must be set to ",(0,o.jsx)(n.code,{children:"True"})," to make use of the ",(0,o.jsx)(n.code,{children:"_downloadable_files"}),"\nattribute of the bundle."]}),"\n",(0,o.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,o.jsxs)(n.p,{children:["If your background process has an error, the details of the error (typically a missing or undefined variable)\nwill be found in the ",(0,o.jsxs)(n.a,{href:"https://docassemble.org/docs/admin.html#logs",children:[(0,o.jsx)(n.code,{children:"worker.log"})," file"]})]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>r});var o=s(6540);const t={},i=o.createContext(t);function d(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);