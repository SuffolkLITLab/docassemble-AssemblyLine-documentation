"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[89],{1592:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"components/AssemblyLine/sign","title":"AssemblyLine.sign","description":"find\\\\font\\\\file\\\\by\\\\name","source":"@site/docs/components/AssemblyLine/sign.md","sourceDirName":"components/AssemblyLine","slug":"/components/AssemblyLine/sign","permalink":"/docs/components/AssemblyLine/sign","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/AssemblyLine/sign.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"sign","title":"AssemblyLine.sign"}}');var i=s(4848),o=s(8453);const r={sidebar_label:"sign",title:"AssemblyLine.sign"},l=void 0,a={},c=[{value:"find_font_file_by_name",id:"find_font_file_by_name",level:4},{value:"get_font",id:"get_font",level:4},{value:"create_signature",id:"create_signature",level:4}];function d(e){const n={code:"code",em:"em",h4:"h4",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"find_font_file_by_name",children:"find_font_file_by_name"}),"\n",(0,i.jsx)(n.p,{children:"Recursively search for a font file by name in the specified directories."}),"\n",(0,i.jsxs)(n.p,{children:["This function appends '.ttf' to the font name if it is not already present and\nsearches through each directory in ",(0,i.jsx)(n.code,{children:"search_dirs"})," recursively for a file that\nmatches the font name (case-insensitive)."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"font_name"})," ",(0,i.jsx)(n.em,{children:"str"})," - The name of the font to search for (without path)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"search_dirs"})," ",(0,i.jsx)(n.em,{children:"List[str]"})," - A list of directories to search."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Optional[str]"})," - The full path to the font file if found; otherwise, None."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"get_font",children:"get_font"}),"\n",(0,i.jsx)(n.p,{children:"Loads a font by name from candidate directories and returns an ImageFont instance."}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"font_name"})," is provided, it may be either a full path to a font file or a font\nname (without a path). In the latter case, the function will search for the font in\n",(0,i.jsx)(n.code,{children:"/var/www/.fonts"})," and ",(0,i.jsx)(n.code,{children:"/usr/share/fonts/truetype/"}),", automatically appending '.ttf'\nif necessary. If no font is found, the function falls back to the default Pillow font."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"font_name"})," ",(0,i.jsx)(n.em,{children:"Optional[str]"})," - The desired font's full path or name. Defaults to None."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"font_size"})," ",(0,i.jsx)(n.em,{children:"int"})," - The size of the font to be used. Defaults to 48."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"ImageFont.ImageFont"})," - The loaded font instance."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"create_signature",children:"create_signature"}),"\n",(0,i.jsx)(n.p,{children:"Creates an image file that simulates a signature."}),"\n",(0,i.jsxs)(n.p,{children:["The signature image is generated by combining the provided ",(0,i.jsx)(n.code,{children:"signature_prefix"}),'\n(for example, "/s/" or "s/") with the person\'s name. The text size is measured to\ncreate an image with appropriate dimensions, and then the text is drawn onto a\nwhite background. The final image is saved to the specified output file path.']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"name"})," ",(0,i.jsx)(n.em,{children:"str"})," - The person's name to be signed."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"output_file"})," ",(0,i.jsx)(n.em,{children:"str"})," - The full file path where the image will be written."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"signature_prefix"})," ",(0,i.jsx)(n.em,{children:"str"}),' - The signature prefix to use (e.g., "/s/" or "s/"). Defaults to "/s/".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"font_name"})," ",(0,i.jsx)(n.em,{children:"Optional[str]"})," - The font's full path or name (without path). Defaults to None."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"font_size"})," ",(0,i.jsx)(n.em,{children:"int"})," - The size of the font to be used. Defaults to 48."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},o=t.createContext(i);function r(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);