"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[7103],{9104:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(4848),i=n(8453);const l={id:"name_formats",title:"Name formats",sidebar_label:"Name formats",slug:"naming"},r=void 0,o={id:"authoring/name_formats",title:"Name formats",description:"In programming languages (and sometimes in computer files and names in general),",source:"@site/docs/authoring/name_formats.md",sourceDirName:"authoring",slug:"/authoring/naming",permalink:"/docs/authoring/naming",draft:!1,unlisted:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/authoring/name_formats.md",tags:[],version:"current",frontMatter:{id:"name_formats",title:"Name formats",sidebar_label:"Name formats",slug:"naming"},sidebar:"docs",previous:{title:"Field labels to use in template files",permalink:"/docs/authoring/label_variables"},next:{title:'"Weaving" your form into a draft interview\n',permalink:"/docs/authoring/generating_code"}},c={},d=[{value:"Types of Naming Conventions",id:"types-of-naming-conventions",level:2},{value:"snake_case",id:"snake_case",level:3},{value:"kebab-case",id:"kebab-case",level:3},{value:"PascalCase",id:"pascalcase",level:3},{value:"Uses of Naming Conventions",id:"uses-of-naming-conventions",level:2},{value:"Form Files stored in docassemble: snake_case",id:"form-files-stored-in-docassemble-snake_case",level:3},{value:"Downloadable documents: kebab-case",id:"downloadable-documents-kebab-case",level:3},{value:"Other files stored in docassemble: snake_case",id:"other-files-stored-in-docassemble-snake_case",level:3},{value:"PDF variables:  snake_case",id:"pdf-variables--snake_case",level:3},{value:"Code variables: snake_case mostly",id:"code-variables-snake_case-mostly",level:3},{value:"<code>snake_case</code>",id:"snake_case-1",level:4},{value:"<code>PascalCase</code>",id:"pascalcase-1",level:4},{value:"Docassemble Projects and Packages",id:"docassemble-projects-and-packages",level:3},{value:"Definitions",id:"definitions",level:2},{value:"Alphanumeric",id:"alphanumeric",level:3},{value:"Other resources",id:"other-resources",level:2}];function t(e){const s={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.p,{children:"In programming languages (and sometimes in computer files and names in general),\nthere are a lot of different rules that could be used to name different things like files\nand variables. When working in a large team, choosing consistent conventions for naming these\nthings makes reading and writing code easier. At the AssemblyLine project, we've settled on\nseveral conventions:"}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#snake_case",children:(0,a.jsx)(s.code,{children:"snake_case"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#kebab-case",children:(0,a.jsx)(s.code,{children:"kebab-case"})})}),"\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"#pascalcase",children:(0,a.jsx)(s.code,{children:"PascalCase"})})}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"types-of-naming-conventions",children:"Types of Naming Conventions"}),"\n",(0,a.jsx)(s.h3,{id:"snake_case",children:"snake_case"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Start with a letter, not a digit"}),"\n",(0,a.jsxs)(s.li,{children:["Separate words with underscores (",(0,a.jsx)(s.code,{children:"_"}),") instead of spaces"]}),"\n",(0,a.jsxs)(s.li,{children:["All other characters are either 0 to 9 or lowercase a to z (",(0,a.jsx)(s.a,{href:"#alphanumeric",children:"alphanumeric"}),")"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Some examples: ",(0,a.jsx)(s.code,{children:"number_of_people"}),", ",(0,a.jsx)(s.code,{children:"issue_12_address"}),", ",(0,a.jsx)(s.code,{children:"protective_order.pdf"})]}),"\n",(0,a.jsx)(s.h3,{id:"kebab-case",children:"kebab-case"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Start with a letter, not a digit"}),"\n",(0,a.jsxs)(s.li,{children:["Separate words with dashes (",(0,a.jsx)(s.code,{children:"-"}),") instead of spaces"]}),"\n",(0,a.jsxs)(s.li,{children:["All other characters are either 0 to 9 or lowercase a to z (",(0,a.jsx)(s.a,{href:"#alphanumeric",children:"alphanumeric"}),")"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Some examples: ",(0,a.jsx)(s.code,{children:"protective-order.yml"})]}),"\n",(0,a.jsx)(s.h3,{id:"pascalcase",children:"PascalCase"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Start with a letter, not a digit"}),"\n",(0,a.jsx)(s.li,{children:"Each word starts with an uppercase letter"}),"\n",(0,a.jsx)(s.li,{children:"All the words are squished together"}),"\n",(0,a.jsxs)(s.li,{children:["All characters are either 0 to 9 or a to z (",(0,a.jsx)(s.a,{href:"#alphanumeric",children:"alphanumeric"}),")"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Some examples: ",(0,a.jsx)(s.code,{children:"ProtectiveOrder"}),", ",(0,a.jsx)(s.code,{children:"ProtectiveOrderRemoveAddress"})]}),"\n",(0,a.jsx)(s.h2,{id:"uses-of-naming-conventions",children:"Uses of Naming Conventions"}),"\n",(0,a.jsxs)(s.h3,{id:"form-files-stored-in-docassemble-snake_case",children:["Form Files stored in docassemble: ",(0,a.jsx)(s.a,{href:"#snake_case",children:"snake_case"})]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Makes it clear to lawyers, and we can use the file name as a variable name as well."}),"\n",(0,a.jsx)(s.li,{children:"Avoid using the section numbers of the law unless they are the common name of the form."}),"\n",(0,a.jsxs)(s.li,{children:["Include at least one descriptive term.","\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Example: use ",(0,a.jsx)(s.code,{children:"protective_order_209A.pdf"}),', even if attorneys call it "209A".']}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(s.li,{children:["Avoid adding suffixes or information about the progress of the form at the end of the file. For example, use ",(0,a.jsx)(s.code,{children:"protective_order.pdf"})," over ",(0,a.jsx)(s.code,{children:"protective_order_processed.pdf"})," or ",(0,a.jsx)(s.code,{children:"protective_order_reviewed.pdf"}),"."]}),"\n",(0,a.jsx)(s.li,{children:"In all other ways, use the common name of the form - the name attorneys know it by."}),"\n"]}),"\n",(0,a.jsxs)(s.h3,{id:"downloadable-documents-kebab-case",children:["Downloadable documents: ",(0,a.jsx)(s.a,{href:"#kebab-case",children:"kebab-case"})]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["We use dashes (",(0,a.jsx)(s.code,{children:"-"}),") because underscores (",(0,a.jsx)(s.code,{children:"_"}),") can be hard to see in file names, especially if the text is underlined."]}),"\n",(0,a.jsxs)(s.li,{children:["Exactly the same as ",(0,a.jsx)(s.a,{href:"#form-files-stored-in-docassemble-snake_case",children:"the docassemble form name"})," in all other ways."]}),"\n"]}),"\n",(0,a.jsxs)(s.h3,{id:"other-files-stored-in-docassemble-snake_case",children:["Other files stored in docassemble: ",(0,a.jsx)(s.a,{href:"#snake_case",children:"snake_case"})]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"snake_case"})," is a common convention and is clear to developers"]}),"\n"]}),"\n",(0,a.jsxs)(s.h3,{id:"pdf-variables--snake_case",children:["PDF variables:  ",(0,a.jsx)(s.a,{href:"#snake_case",children:"snake_case"})]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Each label name must be unique. See how to ",(0,a.jsx)(s.a,{href:"label_variables#some-suggestions-for-coming-up-with-custom-labels",children:"ensure uniqueness while still creating fields that display the same value"}),"."]}),"\n",(0,a.jsx)(s.li,{children:"Meets PDF or DOCX requirements"}),"\n",(0,a.jsxs)(s.li,{children:["Is consistent with AssemblyLine conventions (which will help you!). See more details about ",(0,a.jsx)(s.a,{href:"/docs/authoring/label_variables",children:"labels' variable names in documents"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(s.h3,{id:"code-variables-snake_case-mostly",children:["Code variables: ",(0,a.jsx)(s.a,{href:"#snake_case",children:"snake_case"})," mostly"]}),"\n",(0,a.jsx)(s.p,{children:"Naming variables is hard, but good code variables are clear and short, in that order."}),"\n",(0,a.jsx)(s.h4,{id:"snake_case-1",children:(0,a.jsx)(s.a,{href:"#snake_case",children:(0,a.jsx)(s.code,{children:"snake_case"})})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Regular variable names (",(0,a.jsx)(s.code,{children:"reason_for_appeal"}),")"]}),"\n",(0,a.jsxs)(s.li,{children:["Objects (",(0,a.jsx)(s.code,{children:"judges"}),", ",(0,a.jsx)(s.code,{children:"other_parties"}),")"]}),"\n",(0,a.jsxs)(s.li,{children:["Methods of classes (",(0,a.jsx)(s.code,{children:"template.get_pdf_fields()"}),")"]}),"\n"]}),"\n",(0,a.jsx)(s.h4,{id:"pascalcase-1",children:(0,a.jsx)(s.a,{href:"#pascalcase",children:(0,a.jsx)(s.code,{children:"PascalCase"})})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:["Classes (",(0,a.jsx)(s.code,{children:"PlaygroundSection"}),")"]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["Variable names should read close to natural English out loud. Avoid putting the type of the variable in its name, sometimes called hungarian notation:\nfor example, using ",(0,a.jsx)(s.code,{children:"is_parent_bool"})," to indicate a boolean, or ",(0,a.jsx)(s.code,{children:"children_list"})," indicating a list."]}),"\n",(0,a.jsxs)(s.p,{children:["Adding extra information into the variable name does help make things more clear, for example, ",(0,a.jsx)(s.code,{children:"got_notice_date"}),", or ",(0,a.jsx)(s.code,{children:"plaintiff_email"}),". But this is helpful because we're describing the purpose of the variable, not it's type. Our ",(0,a.jsx)(s.a,{href:"/docs/authoring/label_variables",children:"conventions for our PDF and DOCX variables"})," has some good examples."]}),"\n",(0,a.jsxs)(s.p,{children:["For a boolean value, use a word or phrase that you can answer with yes or no. They are often verb-noun pairs. ",(0,a.jsx)(s.code,{children:"has_"})," and ",(0,a.jsx)(s.code,{children:"is_"})," can be useful. ",(0,a.jsx)(s.strong,{children:"Examples:"})," ",(0,a.jsx)(s.code,{children:"is_minor"}),", ",(0,a.jsx)(s.code,{children:"was_convicted"}),", ",(0,a.jsx)(s.code,{children:"has_court_date"}),"."]}),"\n",(0,a.jsxs)(s.p,{children:["Use a plural word for a list of things, and a singular word for one thing. ",(0,a.jsx)(s.strong,{children:"Examples:"})," ",(0,a.jsx)(s.code,{children:"children"}),", ",(0,a.jsx)(s.code,{children:"child"})]}),"\n",(0,a.jsx)(s.h3,{id:"docassemble-projects-and-packages",children:"Docassemble Projects and Packages"}),"\n",(0,a.jsx)(s.p,{children:"In the Docassemble playground:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"Each project must have a unique name."}),"\n",(0,a.jsx)(s.li,{children:"Your package name doesn't have to be the same as your project name."}),"\n",(0,a.jsxs)(s.li,{children:["Use ",(0,a.jsx)(s.a,{href:"#pascalcase",children:"PascalCase"})," when naming projects and packages."]}),"\n"]}),"\n",(0,a.jsxs)(s.p,{children:["If you are naming a package for the first time (for example, before ",(0,a.jsx)(s.a,{href:"github#set-up-the-github-integration",children:"publishing an interview to GitHub"}),"), take a moment to check the package name, which will be difficult to change later on. Follow these guidelines:"]}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"The package name should be name of the form for which you are making the interview."}),"\n",(0,a.jsxs)(s.li,{children:["Use ",(0,a.jsx)(s.a,{href:"#pascalcase",children:"PascalCase"})," (",(0,a.jsx)(s.strong,{children:"SmallClaims"}),", not ",(0,a.jsx)(s.strong,{children:"Smallclaims"}),")."]}),"\n",(0,a.jsxs)(s.li,{children:["Package and GitHub repository names should include an abbreviation for the jurisdiction. (For example, ",(0,a.jsx)(s.strong,{children:"MASmallClaims"})," for a Massachusetts small claims form interview. Or perhaps ",(0,a.jsx)(s.strong,{children:"MATCSmallClaims"})," if you want to specify that it is for the Massachusetts Trial Court.)"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"definitions",children:"Definitions"}),"\n",(0,a.jsx)(s.h3,{id:"alphanumeric",children:"Alphanumeric"}),"\n",(0,a.jsx)(s.p,{children:"A string that is alphanumeric has only digits 0 to 9 and the letters A to Z in it. The letters can be lowercase or uppercase."}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Yes:"})," ",(0,a.jsx)(s.code,{children:"A"})," ",(0,a.jsx)(s.code,{children:"b"})," ",(0,a.jsx)(s.code,{children:"12"})," ",(0,a.jsx)(s.code,{children:"ab12"})," ",(0,a.jsx)(s.code,{children:"CZ"})," ",(0,a.jsx)(s.code,{children:"5"})]}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"No:"})," ",(0,a.jsx)(s.code,{children:"A!"})," ",(0,a.jsx)(s.code,{children:"(b)"})," ",(0,a.jsx)(s.code,{children:"ab 12"})," ",(0,a.jsx)(s.code,{children:"$12"})," ",(0,a.jsx)(s.code,{children:'"CZ"'})," ",(0,a.jsx)(s.code,{children:"0.5"})]}),"\n",(0,a.jsx)(s.h2,{id:"other-resources",children:"Other resources"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:(0,a.jsx)(s.a,{href:"https://en.wikipedia.org/wiki/Naming_convention_%28programming%29#Examples_of_multiple-word_identifier_formats",children:"Different ways to name variables"})}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var a=n(6540);const i={},l=a.createContext(i);function r(e){const s=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(l.Provider,{value:s},e.children)}}}]);