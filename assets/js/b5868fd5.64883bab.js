"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[6033],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},o=Object.keys(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)n=o[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=s.createContext({}),l=function(e){var t=s.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return s.createElement(i.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},f=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(n),f=r,m=u["".concat(i,".").concat(f)]||u[f]||d[f]||o;return n?s.createElement(m,a(a({ref:t},p),{},{components:n})):s.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=f;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:r,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return s.createElement.apply(null,a)}return s.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6752:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=n(7462),r=(n(7294),n(4137));const o={sidebar_label:"test_conversions",title:"EFSPIntegration.test.test_conversions"},a=void 0,c={unversionedId:"reference/EFSPIntegration/test/test_conversions",id:"reference/EFSPIntegration/test/test_conversions",title:"EFSPIntegration.test.test_conversions",description:"TestConversions Objects",source:"@site/docs/reference/EFSPIntegration/test/test_conversions.md",sourceDirName:"reference/EFSPIntegration/test",slug:"/reference/EFSPIntegration/test/test_conversions",permalink:"/docassemble-AssemblyLine-documentation/docs/reference/EFSPIntegration/test/test_conversions",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/reference/EFSPIntegration/test/test_conversions.md",tags:[],version:"current",frontMatter:{sidebar_label:"test_conversions",title:"EFSPIntegration.test.test_conversions"}},i={},l=[{value:"TestConversions Objects",id:"testconversions-objects",level:2},{value:"test_parse_case_info",id:"test_parse_case_info",level:4},{value:"TestNoneResp Objects",id:"testnoneresp-objects",level:2},{value:"test_none",id:"test_none",level:4},{value:"TestCourtSwitching Objects",id:"testcourtswitching-objects",level:2},{value:"test_switched_court",id:"test_switched_court",level:4},{value:"TestConversionIgnoreAttorneys Objects",id:"testconversionignoreattorneys-objects",level:2},{value:"test_ignore_attorneys",id:"test_ignore_attorneys",level:4}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,s.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"testconversions-objects"},"TestConversions Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TestConversions(unittest.TestCase)\n")),(0,r.kt)("p",null,"Tests conversions.py on the ",'"',"vars.json",'"'," file"),(0,r.kt)("h4",{id:"test_parse_case_info"},"test","_","parse","_","case","_","info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_parse_case_info()\n")),(0,r.kt)("p",null,"Makes sure that participants of the case are parsed fully, needed"),(0,r.kt)("h2",{id:"testnoneresp-objects"},"TestNoneResp Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TestNoneResp(unittest.TestCase)\n")),(0,r.kt)("p",null,"Tests with none responses conversions.py on the ",'"',"vars.json",'"'," file"),(0,r.kt)("h4",{id:"test_none"},"test","_","none"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_none()\n")),(0,r.kt)("p",null,"Makes sure that participants of the case are parsed fully, needed"),(0,r.kt)("h2",{id:"testcourtswitching-objects"},"TestCourtSwitching Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TestCourtSwitching(unittest.TestCase)\n")),(0,r.kt)("p",null,"Tests that if we search a case in a grouped court (say peoria) and\nget back a court from a sub court (peariacr), that the\ncourt_id from the found case reflects the sub court."),(0,r.kt)("p",null,"This is necessary, as filings can","'","t be accepted to the grouped court."),(0,r.kt)("h4",{id:"test_switched_court"},"test","_","switched","_","court"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_switched_court()\n")),(0,r.kt)("p",null,"Makes sure that participants of the case are parsed fully, needed"),(0,r.kt)("h2",{id:"testconversionignoreattorneys-objects"},"TestConversionIgnoreAttorneys Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class TestConversionIgnoreAttorneys(unittest.TestCase)\n")),(0,r.kt)("h4",{id:"test_ignore_attorneys"},"test","_","ignore","_","attorneys"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def test_ignore_attorneys()\n")),(0,r.kt)("p",null,"Attorneys are just stuck in the middle with normal case participants. You can","'","t attach service contacts to them, so"))}u.isMDXComponent=!0}}]);