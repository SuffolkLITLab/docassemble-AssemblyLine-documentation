"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[9887],{4137:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>c});var o=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,o)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,o,n=function(e,t){if(null==e)return{};var a,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)a=s[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)a=s[o],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=o.createContext({}),u=function(e){var t=o.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},h=o.forwardRef((function(e,t){var a=e.components,n=e.mdxType,s=e.originalType,l=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),d=u(a),h=n,c=d["".concat(l,".").concat(h)]||d[h]||m[h]||s;return a?o.createElement(c,i(i({ref:t},p),{},{components:a})):o.createElement(c,i({ref:t},p))}));function c(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var s=a.length,i=new Array(s);i[0]=h;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r[d]="string"==typeof e?e:n,i[1]=r;for(var u=2;u<s;u++)i[u]=a[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,a)}h.displayName="MDXCreateElement"},2598:(e,t,a)=>{a.d(t,{IO:()=>i,oc:()=>r,tD:()=>s});var o=a(7294),n=a(3699);const s=e=>!0===e.plain?o.createElement("span",null,"GitHub+You\u2122"):o.createElement(n.Z,{to:"/docs/alkiln/setup#githubNyou-details"},"GitHub+You\u2122"),i=e=>!0===e.plain?o.createElement("span",null,"ALKilnInThePlayground\u2122"):o.createElement(n.Z,{to:"/docs/alkiln/setup#diy-details"},"ALKilnInThePlayground\u2122"),r=e=>!0===e.plain?o.createElement("span",null,"GitHub Sandbox\u2122"):o.createElement(n.Z,{to:"/docs/alkiln/setup#sandbox-details"},"GitHub Sandbox\u2122")},1711:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=a(7462),n=(a(7294),a(4137)),s=a(2598);const i={id:"alkiln_setup",title:"Set up ALKiln tests",sidebar_label:"WIP Setup/Installation",slug:"/alkiln/setup"},r=void 0,l={unversionedId:"alkiln/alkiln_setup",id:"alkiln/alkiln_setup",title:"Set up ALKiln tests",description:"WIP (Work in progress)",source:"@site/docs/alkiln/setup.mdx",sourceDirName:"alkiln",slug:"/alkiln/setup",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln/setup",draft:!1,editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/alkiln/setup.mdx",tags:[],version:"current",frontMatter:{id:"alkiln_setup",title:"Set up ALKiln tests",sidebar_label:"WIP Setup/Installation",slug:"/alkiln/setup"},sidebar:"docs",previous:{title:"Advanced",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln/advanced"},next:{title:"WIP Writing tests",permalink:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing"}},u={},p=[{value:"Should <em>I</em> read this?",id:"who",level:2},{value:"Types of tests",id:"types",level:2},{value:"Recommended setup:  GitHub+You  <GTOYS/>",id:"recommended",level:2},{value:"First test",id:"first-test",level:2},{value:" ALKilnInThePlayground  <AutoDIY/> tests",id:"diy-how-to",level:2},{value:" GitHub Sandbox  <KittyLitter/> tests (advanced)",id:"sandbox-how-to",level:2},{value:" GitHub+You  <GTOYS/> test details",id:"githubNyou-details",level:2},{value:"What is ALKiln doing?",id:"githubNyou-how",level:3},{value:"Pros",id:"githubNyou-pros",level:3},{value:"Cons",id:"githubNyou-cons",level:3},{value:" ALKilnInThePlayground  <AutoDIY/> test details",id:"diy-details",level:2},{value:"What is ALKiln doing?",id:"diy-how",level:3},{value:"Pros",id:"diy-pros",level:3},{value:"Cons",id:"diy-cons",level:3},{value:" GitHub Sandbox  <KittyLitter/> test details",id:"sandbox-details",level:2},{value:"What is ALKiln doing?",id:"sandbox-how",level:3},{value:"Pros",id:"sandbox-pros",level:3},{value:"Cons",id:"sandbox-cons",level:3},{value:"Disabling",id:"disable",level:2},{value:"Disable a test or test file",id:"disable-test",level:3},{value:"Disable repository tests",id:"disable-repo",level:3},{value:"Disabling tests for the whole organization",id:"disable-org",level:3}],d={toc:p};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,o.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"warning"},(0,n.kt)("p",{parentName:"admonition"},"WIP (Work in progress)")),(0,n.kt)("p",null,"Welcome to our guide on different ways to set up your ALKiln tests. You can use as many of these methods as you want. You can also ",(0,n.kt)("a",{parentName:"p",href:"#disable"},"disable tests")," if you need to."),(0,n.kt)("h2",{id:"who"},"Should ",(0,n.kt)("em",{parentName:"h2"},"I")," read this?"),(0,n.kt)("p",null,'Maybe not. For example, if you have a GitHub repository and it already has a ".github" folder with a ',(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#workflows"},"workflow file"),", you can probably skip this page."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"People who only write tests:")," Skip this and see the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing"},"documentation on writing tests"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"GitHub repository or organization managers or admins:")," This guide might be useful to you."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Docassemble server managers or admins:")," This guide might be useful to you.")),(0,n.kt)("h2",{id:"types"},"Types of tests"),(0,n.kt)("p",null,"There are three kinds of tests:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)(s.tD,{mdxType:"GTOYS"}))," - GitHub-triggered tests that create and test a Project on your docassemble server. This type of tests runs into the fewest setup barriers, so we recommend this method if you are doing this without help."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)(s.IO,{mdxType:"AutoDIY"}))," - Tests that you trigger manually from an ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/docassemble-ALKilnInThePlayground"},"interview")," you install on your docassemble server."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},(0,n.kt)(s.oc,{mdxType:"KittyLitter"}))," - GitHub-triggered tests that create their own docassemble server on GitHub and run tests there.",(0,n.kt)("sup",{parentName:"li",id:"fnref-sand"},(0,n.kt)("a",{parentName:"sup",href:"#fn-sand",className:"footnote-ref"},"sand")))),(0,n.kt)("p",null,"Each type of test has its advantages and disadvantages. This documentation explains some of those. First, here are the different ways to set up for the different types of tests."),(0,n.kt)("h2",{id:"recommended"},"Recommended setup: "," ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})),(0,n.kt)("p",null,"This is the way we recommend setting up ALKiln tests for a repository for the first time. It is the method that tends to work most smoothly. Every repository that needs to use this kind of test must go through this setup process."),(0,n.kt)("p",null,"Remember to use a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"separate server for these types of tests"),"."),(0,n.kt)("p",null,"The tests ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-tests"},"run")," whenever you commit any code to any branch on GitHub. You can read more details and the pros and cons of ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})," tests below."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"You need:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A developer or admin account on your docassemble server."),(0,n.kt)("li",{parentName:"ul"},"A package with a repository on GitHub."),(0,n.kt)("li",{parentName:"ul"},"A collaborator or admin account on your package's GitHub repository",(0,n.kt)("sup",{parentName:"li",id:"fnref-auth"},(0,n.kt)("a",{parentName:"sup",href:"#fn-auth",className:"footnote-ref"},"auth")),".")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"It could help to know about:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/api.html#manage_api"},"Docassemble API keys")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-personal-access-token-classic"},"GitHub personal access tokens")," (PATs)"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"},"GitHub pull requests")," (PRs)")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Related topics:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#secrets"},"GitHub secrets")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#workflows"},"GitHub workflows"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"What to do:")),(0,n.kt)("p",null,"Use ",(0,n.kt)("a",{parentName:"p",href:"https://apps-dev.suffolklitlab.org/start/test-setup"},"ALKiln's test setup interview")," to add ALKiln to your repository. You must run this setup interview for every package you want to test on GitHub. This setup interview can take over 30 minutes, especially if you are unfamiliar with GitHub or with docassemble API keys."),(0,n.kt)("p",null,"When you set up, you can choose to create your ",(0,n.kt)("a",{parentName:"p",href:"#first-test"},"first test"),". We recommend that you do this. Either way, you can ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#new-file"},"add more tests")," later."),(0,n.kt)("p",null,"To summarize, the ALKiln tests setup interview interview can help you do one or more of the following:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Add GitHub secrets to your repository (or organization",(0,n.kt)("sup",{parentName:"li",id:"fnref-org"},(0,n.kt)("a",{parentName:"sup",href:"#fn-org",className:"footnote-ref"},"org")),")"),(0,n.kt)("li",{parentName:"ol"},"Make a new branch in your repository"),(0,n.kt)("li",{parentName:"ol"},"Add new code to that branch, including a new ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#workflows"},"workflow file")),(0,n.kt)("li",{parentName:"ol"},"Add a new test file, like our ",(0,n.kt)("a",{parentName:"li",href:"#first-test"},"example test"),', in your Project\'s "sources" folder'),(0,n.kt)("li",{parentName:"ol"},"Make a pull request with that branch")),(0,n.kt)("p",null,"Once you accept the pull request and merge the code into your repository's main branch, make sure to update your docassemble Projects to use that new code."),(0,n.kt)("p",null,"If you are ready to start running tests, you can read about how to ",(0,n.kt)("a",{parentName:"p",href:"#first-test"},"add our example test"),", ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing"},"write tests"),", or ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-tests"},"trigger and run ",(0,n.kt)(s.tD,{plain:!0,mdxType:"GTOYS"})," tests in GitHub"),"."),(0,n.kt)("h2",{id:"first-test"},"First test"),(0,n.kt)("p",null,"You can add a short test right away that just makes sure your YAML file runs. If you run the setup interview you can choose to create this test at that time and we recommend you do that. If you set up your tests manually instead:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},'In the Playground of your Project, go to the "Sources" folder.'),(0,n.kt)("li",{parentName:"ol"},"Add an file that ends in ",(0,n.kt)("inlineCode",{parentName:"li"},".feature"),". For example, ",(0,n.kt)("inlineCode",{parentName:"li"},"interviews_load.feature"),"."),(0,n.kt)("li",{parentName:"ol"},"In that file, write ",(0,n.kt)("inlineCode",{parentName:"li"},"Feature:")," at the top, with a description of the general category of tests that will be in that file."),(0,n.kt)("li",{parentName:"ol"},"Add a ",(0,n.kt)("inlineCode",{parentName:"li"},"Scenario:")," for each interview you want to test. The file should look similar to this:")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'Feature: Interviews load\n\n  Scenario: The 209A loads\n    Given I start the interview at "ma_209a_package.yml"\n\n  Scenario: The Plaintiff\'s Motion to Modify loads\n    Given I start the interview at "plaintiffs_motion_to_modify_209a.yml"\n')),(0,n.kt)("p",null,'You can wait to write more complex tests till your code is more stable. "Stable" means that your question block variable names and values should be staying pretty much the same.'),(0,n.kt)("p",null,"To learn how to do more with tests, you can read more about ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing"},"writing tests")," and more about ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#test-files"},"test files"),"."),(0,n.kt)("h2",{id:"diy-how-to"}," ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"})," tests"),(0,n.kt)("p",null,"If you set up ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"})," tests, any developer that logs in can run tests on any of their Projects. You only have to do this once. You can read more details and the pros and cons of ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"})," tests below."),(0,n.kt)("p",null,"Remember to use a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"separate server for these types of tests"),"."),(0,n.kt)("p",null,"The ALKilnInThePlayground package installs the ALKiln testing framework directly on your server. For ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"security reasons"),", avoid installing these tests on your production server."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"You need:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A developer or admin account on your docassemble server.")),(0,n.kt)("p",null,"It also helps to have a Project with at least one ALKiln test in it, but you can add that later instead."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"It helps to know about:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/packages.html#github_install"},"Installing GitHub packages on your docassemble server")),(0,n.kt)("li",{parentName:"ul"},"Adding interviews to your docassemble server's ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/config.html#dispatch"},"configuration's dispatch list"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"What to do:")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Sign in to your docassemble server on your own developer account."),(0,n.kt)("li",{parentName:"ol"},"Go to your server's ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/packages.html#installing"},'"Package Management" page'),"."),(0,n.kt)("li",{parentName:"ol"},"Using the ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/packages.html#github_install"},"GitHub install method"),", install the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/docassemble-ALKilnInThePlayground"},"ALKilnInThePlayground package")," from its ",(0,n.kt)("inlineCode",{parentName:"li"},"main")," branch."),(0,n.kt)("li",{parentName:"ol"},"Follow ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/config.html#dispatch"},"docassemble's instructions")," to add it to the dispatch list. This will add it to the server's list of interviews. It may look something like this:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-yml"},"dispatch:\n  alkiln: docassemble.ALKilnInThePlayground:data/questions/run_alkiln_tests.yml\n  # Your other server interviews\n"))),(0,n.kt)("li",{parentName:"ol"},"Go to your server's list of ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/admin.html#available%20interviews"},'"Available interviews"'),". The list should have ALKiln's Playground package in it."),(0,n.kt)("li",{parentName:"ol"},"Run that interview."),(0,n.kt)("li",{parentName:"ol"},"On the first page of that interview, choose to install the latest version of ALKiln by picking the top item in the list. You can choose to do this whenever we make a new version of ALKiln.")),(0,n.kt)("p",null,"If you are ready to start running tests, you can read about how to ",(0,n.kt)("a",{parentName:"p",href:"#first-test"},"add our example test"),", ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing"},"write tests"),", or continue the above interview to ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-autodiy"},"run your tests"),"."),(0,n.kt)("h2",{id:"sandbox-how-to"}," ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests (advanced)"),(0,n.kt)("p",null,"The ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests are the most secure because they never interact with your server. ALKiln makes a server on GitHub itself and runs the tests there."),(0,n.kt)("p",null,"Every repository that needs to use this kind of test must go through this setup process."),(0,n.kt)("p",null,"This is an advanced method and may not work for everyone. We are happy to help you with it."),(0,n.kt)("p",null,"The tests ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-tests"},"run")," whenever you commit any code to any branch on GitHub. Below, see details and the pros and cons of ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"You need:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"A package with a repository on GitHub."),(0,n.kt)("li",{parentName:"ul"},"A collaborator or admin account on your package's GitHub repository",(0,n.kt)("sup",{parentName:"li",id:"fnref-auth"},(0,n.kt)("a",{parentName:"sup",href:"#fn-auth",className:"footnote-ref"},"auth")),".")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"It helps to know about:")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/creating-new-files"},"Creating new files on GitHub")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#workflows"},"GitHub workflows")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests"},"GitHub pull requests")," (PRs)")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"What to do:")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Sign in to GitHub."),(0,n.kt)("li",{parentName:"ol"},"Go to the package's GitHub repository."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-and-deleting-branches-within-your-repository"},"Make a new branch")," in the repository. The name is unimportant. We often call it ",(0,n.kt)("inlineCode",{parentName:"li"},"alkiln_tests"),"."),(0,n.kt)("li",{parentName:"ol"},'Navigate to your package\'s "sources" folder. These are the folders to get there: ',(0,n.kt)("inlineCode",{parentName:"li"},"docassemble/<YourPackageName>/data/sources"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/creating-new-files"},"Add a new file on GitHub"),". This will be your first test."),(0,n.kt)("li",{parentName:"ol"},"Fill in the field for the name of the file. You might call it ",(0,n.kt)("inlineCode",{parentName:"li"},"interviews_load.feature"),", but it can be anything that ends in ",(0,n.kt)("inlineCode",{parentName:"li"},".feature"),"."),(0,n.kt)("li",{parentName:"ol"},"Copy our example of a ",(0,n.kt)("a",{parentName:"li",href:"#first-test"},"first test")," into that file."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/creating-new-files"},"Commit this file to GitHub"),"."),(0,n.kt)("li",{parentName:"ol"},"Go back to the main page of the repository. Make sure you are on ",(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-branches-in-your-repository/viewing-branches-in-your-repository"},"the correct branch"),"."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/creating-new-files"},"Add a new file")," here too."),(0,n.kt)("li",{parentName:"ol"},"In the field for the file's name, enter this text: ",(0,n.kt)("inlineCode",{parentName:"li"},".github/workflows/a_filename.yml"),'. You can replace "a_filename" with whatever name you want as long as it ends with ',(0,n.kt)("inlineCode",{parentName:"li"},".yml"),"."),(0,n.kt)("li",{parentName:"ol"},"This is your workflow file. Copy ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/ALKiln/blob/-/.github/workflows/github_server.yml"},"ALKiln's own workflow file"),". Read the notes in that file to see what you need to change. You should pay attention to the notes that start with ",(0,n.kt)("inlineCode",{parentName:"li"},"#### Developer note")," and follow those instructions."),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/creating-new-files"},"Commit this file to GitHub"),"."),(0,n.kt)("li",{parentName:"ol"},"Go to the repository's ",(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#viewing-the-workflows-activity"},'"Actions" page to see the test running'),"."),(0,n.kt)("li",{parentName:"ol"},"If the tests pass, make a pull request with that branch. If not, ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/trouble"},"troubleshoot the tests"),".")),(0,n.kt)("p",null,"If you are ready to start running tests, you can read about how to ",(0,n.kt)("a",{parentName:"p",href:"#first-test"},"add our example test"),", ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing"},"write tests"),", or ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-tests"},"trigger and run ",(0,n.kt)(s.oc,{plain:!0,mdxType:"KittyLitter"})," tests in GitHub"),"."),(0,n.kt)("h2",{id:"githubNyou-details"}," ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})," test details"),(0,n.kt)("p",null,"Any developer will ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-tests"},"trigger ",(0,n.kt)(s.tD,{plain:!0,mdxType:"GTOYS"})," tests when they commit code to GitHub"),". They then create and test a Project on your docassemble ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"testing server"),". They are our recommended test method because they are the easiest to set up."),(0,n.kt)("p",null,"Remember to use a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"testing server")," for these types of tests."),(0,n.kt)("h3",{id:"githubNyou-how"},"What is ALKiln doing?"),(0,n.kt)("p",null,"When ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})," tests get triggered, ALKiln does the following:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"ALKiln creates a new Project for the ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#test-accounts"},"testing account")," you set up on your server. If you logged into that account at the right time, you would be able to see the new Project in the list of projects."),(0,n.kt)("li",{parentName:"ol"},"It uploads the relevant GitHub branch of your package into the Project."),(0,n.kt)("li",{parentName:"ol"},"For each "," test, ALKiln pretends to be a human and goes to the url of that Project's interview (whatever interview you named in the test)."),(0,n.kt)("li",{parentName:"ol"},"It tries to fill out the fields and take the actions the tests describe."),(0,n.kt)("li",{parentName:"ol"},"When all the tests are done, ALKiln deletes the Project it created.")),(0,n.kt)("p",null,"The ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})," tests need to create a Project on your ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"testing server")," and pull code into it. Because of that, you need to create a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#test-accounts"},"developer account")," for these types of tests."),(0,n.kt)("p",null,"GitHub can show you ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#running-data"},"information about your running tests"),". When the tests are done, you can see the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#artifacts"},'"artifacts" of the tests'),"."),(0,n.kt)("h3",{id:"githubNyou-pros"},"Pros"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ALKiln on GitHub will test any changes any team member commits. In ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"})," tests, you only test your changes."),(0,n.kt)("li",{parentName:"ul"},"On GitHub, there are ways to schedule tests to run regularly - every week, every day, or whatever schedule you prefer. If packages you depend on change and break your code, those tests will let you know."),(0,n.kt)("li",{parentName:"ul"},"If you've forgotten to add a file to the package that an interview depends on (like a missing template file), GitHub will catch that. It installs the file fresh in a new Project, so it only has the files that have been committed properly."),(0,n.kt)("li",{parentName:"ul"},"You can continue editing files in your Playground other than python files while the GitHub tests run because GitHub creates a whole new Project of its own."),(0,n.kt)("li",{parentName:"ul"},'You can configure your GitHub "action" to do other things, like create GitHub issues whenever tests fail.')),(0,n.kt)("h3",{id:"githubNyou-cons"},"Cons"),(0,n.kt)("p",null,"For everyone:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The setup for ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})," tests is more reliable, but also more complex than the other methods. Setting them up on your own requires admin access to the repository and the docassemble server and an understanding of the correct files and of GitHub secrets. The ",(0,n.kt)("a",{parentName:"li",href:"https://apps-dev.suffolklitlab.org/start/test-setup"},"ALKiln test setup interview")," tries to help with that and even people with developer access can do it, but it is complex in its own ways."),(0,n.kt)("li",{parentName:"ul"},"When ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})," tests start up, they pull your package code into your docassemble server, just like any other developer. This means that if you test a package with a python module your docassemble server will reload, slowing down access for other people who are using the server."),(0,n.kt)("li",{parentName:"ul"},"Your tests might be more flaky. That means they may fail for reasons that don't have to do with the interviews. For example, if your tests are running while your server is reloading, ALKiln will keep running, so other tests will still have an opportunity to continue, but individual tests may fail even if your code is correct. Your server can reload for many reasons - updating your config, installing a new package, another ",(0,n.kt)(s.tD,{mdxType:"GTOYS"})," test pulling in a module when it is setting up, etc. When tests fail meaninglessly, it slows down your development cycle and sometimes people end up turning off the tests instead of dealing with the complexity.")),(0,n.kt)("p",null,"For some people:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If you have ",(0,n.kt)("inlineCode",{parentName:"li"},"restrict input variables")," set to ",(0,n.kt)("inlineCode",{parentName:"li"},"True")," in your server's config and have signature screens in the interview you are testing, you ",(0,n.kt)("em",{parentName:"li"},"must")," have the ",(0,n.kt)("a",{parentName:"li",href:"#special-html"},"trigger variable HTML")," in your interview for signatures.")),(0,n.kt)("h2",{id:"diy-details"}," ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"})," test details"),(0,n.kt)("p",null,"The ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"})," tests are automated tests that you trigger manually from an interview you install on your docassemble ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"testing server"),". The tests then run right on that server."),(0,n.kt)("p",null,"Remember to use a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"separate server")," for these types of tests. You can read more about ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-autodiy"},"running ",(0,n.kt)(s.IO,{plain:!0,mdxType:"AutoDIY"})," tests")," in other documentation."),(0,n.kt)("p",null,"The ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/docassemble-ALKilnInThePlayground"},"ALKilnInThePlayground package")," installs the ALKiln testing framework directly on your server. For ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"security reasons"),", avoid using these tests on your production server."),(0,n.kt)("h3",{id:"diy-how"},"What is ALKiln doing?"),(0,n.kt)("p",null,"When you ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-autodiy"},"run")," the ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"})," tests while on your docassemble ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#testing-server"},"testing server"),", ALKiln does the following:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"For each "," test, ALKiln pretends to be a human and goes to the url of the Project and interview you specified."),(0,n.kt)("li",{parentName:"ol"},"It tries to fill out the fields and take the actions the tests describe.")),(0,n.kt)("p",null,"When the tests are done, you the interview will go to the next page where you can see the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#artifacts"},'"artifacts" of the tests'),"."),(0,n.kt)("h3",{id:"diy-pros"},"Pros"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You can skip putting your package on GitHub."),(0,n.kt)("li",{parentName:"ul"},"Running ALKiln on your server lets you loop through your development cycle faster - edit, test, edit, test. You don't have to go through committing your code to GitHub every time."),(0,n.kt)("li",{parentName:"ul"},"You can more easily limit your tests to a specific set of tests using ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#tags"},"tag expressions"),". You can use tags on GitHub too, it just takes more steps."),(0,n.kt)("li",{parentName:"ul"},"The full report output is easier to get right away."),(0,n.kt)("li",{parentName:"ul"},"If you also have GitHub tests, running ",(0,n.kt)(s.IO,{mdxType:"AutoDIY"}),' tests before you commit can often help you avoid the red "x" that appears next to failing tests on GitHub. The red "x" is a useful piece of information, but it can be uncomfortable.')),(0,n.kt)("h3",{id:"diy-cons"},"Cons"),(0,n.kt)("p",null,"For everyone:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"You cannot edit the Project that the test is testing."),(0,n.kt)("li",{parentName:"ul"},"You will miss catching some kinds of mistakes. ",(0,n.kt)("a",{parentName:"li",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/trouble#file-not-found"},'"File not found" errors')," can come up because of this."),(0,n.kt)("li",{parentName:"ul"},"Your tests can be more flaky. For example, if your server reloads while the tests are running, the tests may get unexpected results. You may have to start the tests all over again.")),(0,n.kt)("p",null,"For some people:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If you are using a docassemble Docker image created before April 9th, 2023, you will have to do a ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/docker.html#upgrading"},'"system upgrade"')," to update your server to a newer docassemble Docker image. Any version of ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/jhpyle/docassemble-os"},"https://github.com/jhpyle/docassemble-os")," that is older than 1.0.8 uses versions of ",(0,n.kt)("inlineCode",{parentName:"li"},"node")," that are too old for ALKiln. As of February 11th, 2024, ALKiln is using node version 18. A lot of people have upgraded already and it is a very good idea to do that, for security at the very least. If you do need to upgrade, though, you need to back up all your data, delete your old image and container, get the new image, create a new container, and restore your data. It may sound simple, but it is a tricky process."),(0,n.kt)("li",{parentName:"ul"},"If you have ",(0,n.kt)("inlineCode",{parentName:"li"},"restrict input variables")," set to ",(0,n.kt)("inlineCode",{parentName:"li"},"True")," in your server's config and have signature screens in the interview you are testing, you ",(0,n.kt)("em",{parentName:"li"},"must")," have the ",(0,n.kt)("a",{parentName:"li",href:"#special-html"},"trigger variable HTML")," in your interview for signatures.")),(0,n.kt)("h2",{id:"sandbox-details"}," ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," test details"),(0,n.kt)("p",null,"Any developer will ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#trigger-tests"},"trigger ",(0,n.kt)(s.oc,{plain:!0,mdxType:"KittyLitter"})," tests when they commit code to GitHub"),". They create their own docassemble server on GitHub and run tests there."),(0,n.kt)("p",null,"The ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests are the most secure because they never interact with your server and the isolated server they each create is temporary. Unfortunately, these tests also sometimes have more setup complications."),(0,n.kt)("h3",{id:"sandbox-how"},"What is ALKiln doing?"),(0,n.kt)("p",null,"When you run ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests, ALKiln does the following:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"ALKiln creates a server on GitHub itself"),(0,n.kt)("li",{parentName:"ol"},"It installs the relevant branch of your package on that server"),(0,n.kt)("li",{parentName:"ol"},"For each "," test, ALKiln pretends to be a human and goes to the url of the interview named in the test"),(0,n.kt)("li",{parentName:"ol"},"It tries to fill out the fields and take the actions the tests describe"),(0,n.kt)("li",{parentName:"ol"},"When all the tests are done, GitHub deletes the server")),(0,n.kt)("p",null,"GitHub can show you ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#running-data"},"information about your running tests"),". When the tests are done, you can see the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#artifacts"},'"artifacts" of the tests'),"."),(0,n.kt)("h3",{id:"sandbox-pros"},"Pros"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"All the ",(0,n.kt)("a",{parentName:"li",href:"#githubNyou-pros"},"same advantages as regular GitHub tests")," as well as some more."),(0,n.kt)("li",{parentName:"ul"},"This is the most secure of all the methods. The tests don't interact with your server at all."),(0,n.kt)("li",{parentName:"ul"},"You can edit whatever files you want on your own server."),(0,n.kt)("li",{parentName:"ul"},"In some cases, no GitHub secrets are necessary."),(0,n.kt)("li",{parentName:"ul"},"Your tests will generally be less flaky. When a test fails it's more likely to be a problem with your code instead of a problem with the server, giving you better information. That's because the server is isolated, or \"sandboxed\"",(0,n.kt)("sup",{parentName:"li",id:"fnref-sand"},(0,n.kt)("a",{parentName:"sup",href:"#fn-sand",className:"footnote-ref"},"sand")),", on GitHub and no one is going to make that sandboxed server reload in the middle of the tests."),(0,n.kt)("li",{parentName:"ul"},"You do not have to set up or update any docassemble API keys or GitHub tokens."),(0,n.kt)("li",{parentName:"ul"},"It might be useful to test ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/fields.html#custom%20datatype"},"Custom data types")," on a sandboxed server. A docassemble CustomDatatype affects a whole server. Testing it on a sandboxed server means it cannot affect the CustomDatatypes that are already on your server.")),(0,n.kt)("h3",{id:"sandbox-cons"},"Cons"),(0,n.kt)("p",null,"For everyone:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Tests take about 5-10 minutes longer since they have to do things like create a docker container and start a server."),(0,n.kt)("li",{parentName:"ul"},"The GitHub server installs the latest version of docassemble, which might be a different version than the one you use on your production server. Any server other than your production server will be different in some ways, though. Since you should never run these tests on your production server, there is no way to avoid that."),(0,n.kt)("li",{parentName:"ul"},"In most cases, you should avoid hard-coded urls that go to your server. That is, avoid using ",(0,n.kt)("inlineCode",{parentName:"li"},"https://my-server.com")," and interviews or other pages there. That will send the tests to your server, which makes them less secure again.")),(0,n.kt)("p",null,"For some people:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Right now, ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests are unable to handle data stored externally. For example, data stored in an S3 bucket.",(0,n.kt)("sup",{parentName:"li",id:"fnref-ways"},(0,n.kt)("a",{parentName:"sup",href:"#fn-ways",className:"footnote-ref"},"ways"))," "),(0,n.kt)("li",{parentName:"ul"},"You ",(0,n.kt)("strong",{parentName:"li"},"must"),' make sure you have properly required all your "Dependencies" on your Packages page. That is the only way the isolated/sandboxed',(0,n.kt)("sup",{parentName:"li",id:"fnref-sand"},(0,n.kt)("a",{parentName:"sup",href:"#fn-sand",className:"footnote-ref"},"sand"))," server can know to download them."),(0,n.kt)("li",{parentName:"ul"},"All your package's dependencies ",(0,n.kt)("strong",{parentName:"li"},"must")," be published on pypi. That is the only place that the sandboxed server can get them."),(0,n.kt)("li",{parentName:"ul"},"If your package is too big, you will be unable to use this type of test. ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests install your package on the server itself. That makes sure your package's dependencies get automatically installed too. The method ALKiln needs to use to install your package on the server will reject big packages. We are unsure about the exact limits, but we know it must be less than 30 MB.")),(0,n.kt)("h2",{id:"disable"},"Disabling"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#alkilns-precautions"},"ALKiln works hard to protect you from security vulnerabilities")," and there are lots of ways for you to ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security"},"improve your own security"),". Even so, if you ever become uncomfortable or concerned about your ALKiln tests showing ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/security#privilege"},"personal or security-critical data"),", there are multiple ways you can disable the tests."),(0,n.kt)("p",null,"If you are worried you have already shown sensitive information in your GitHub tests, you can delete your ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#github-output"},"logs and artifacts"),"."),(0,n.kt)("h3",{id:"disable-test"},"Disable a test or test file"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"This is for:")," Everyone"),(0,n.kt)("p",null,"You can disable one or more tests in a ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#test-files"},"test file"),"."),(0,n.kt)("p",null,"You can fully disable any test by commenting out its code. Put a ",(0,n.kt)("inlineCode",{parentName:"p"},"#")," at the start of every line of the test. You can do this to every line in a file if you want. You can do this by editing the file in your Playground or ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/editing-files"},"editing it in GitHub"),"."),(0,n.kt)("p",null,"If you comment out a test, commenting out all its lines is better than just commenting out some. That will avoid messing up other tests."),(0,n.kt)("p",null,"If you are more comfortable completely deleting a test, that also works. You can also delete the whole file. If your package has a GitHub repository, you must ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/deleting-files-in-a-repository"},"delete the file in GitHub itself"),"."),(0,n.kt)("p",null,"The old tests will still be in the version history of your repository if you ever want to get them back, but the tests will no longer run or affect your package."),(0,n.kt)("h3",{id:"disable-repo"},"Disable repository tests"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"This is for:")," any packages that run tests in GitHub"),(0,n.kt)("p",null,"GitHub lets you disable or limit all tests, or all actions, in your repository. You can read ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#managing-github-actions-permissions-for-your-repository"},"GitHub's documentation for managing repository actions")," for more information."),(0,n.kt)("p",null,"Another option is to ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow"},"disable an individual workflow (action)"),". Your package's GitHub ",(0,n.kt)("a",{parentName:"p",href:"#workflows"},"workflow file")," is what triggers ALKiln tests on GitHub."),(0,n.kt)("p",null,"You can also ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/deleting-files-in-a-repository"},"delete")," the ",(0,n.kt)("a",{parentName:"p",href:"/docassemble-AssemblyLine-documentation/docs/alkiln/writing#workflows-where"},"workflow file that is in your repository")," completely."),(0,n.kt)("h3",{id:"disable-org"},"Disabling tests for the whole organization"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"This is for:")," any packages that run tests in GitHub"),(0,n.kt)("p",null,"In GitHub, ",(0,n.kt)("a",{parentName:"p",href:"https://docs.github.com/en/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#managing-github-actions-permissions-for-your-organization"},"you can disable any workflows (actions) for a whole organization"),". That includes ALKiln tests."),(0,n.kt)("div",{className:"footnotes"},(0,n.kt)("hr",{parentName:"div"}),(0,n.kt)("ol",{parentName:"div"},(0,n.kt)("li",{parentName:"ol",id:"fn-sand"},'"The isolation metaphor is taken from the idea of children who do not play well together, so each is given ',"[their]",' own sandbox to play in alone." - ',(0,n.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Sandbox_(computer_security)"},"Wikipedia, Sandbox_(computer_security)"),(0,n.kt)("a",{parentName:"li",href:"#fnref-sand",className:"footnote-backref"},"\u21a9")),(0,n.kt)("li",{parentName:"ol",id:"fn-auth"},"That is, you need to have the ability to edit the code in your package's GitHub repository. If you own the repository or organization you are an admin and have the correct access level. If someone else is the owner and you are unsure of your access level, ask an admin what permission level you have for the repository. They can check ",(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/managing-teams-and-people-with-access-to-your-repository#filtering-the-list-of-teams-and-people"},"the repository's collaborators settings"),".",(0,n.kt)("a",{parentName:"li",href:"#fnref-auth",className:"footnote-backref"},"\u21a9")),(0,n.kt)("li",{parentName:"ol",id:"fn-org"},"Do you have more than one repository? Do they all belong to a GitHub organization? If so, you can get one of the organization's admins to run the ALKiln test setup interview and create organization secrets. They can also ",(0,n.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions#creating-secrets-for-an-organization"},"create them manually"),". Each repository the organization has will use those secrets. You will not have to bother adding them to every repository. Otherwise, you have to create the same secrets for each repository. If one of the values changes, you will have to update it in every repository.",(0,n.kt)("a",{parentName:"li",href:"#fnref-org",className:"footnote-backref"},"\u21a9")),(0,n.kt)("li",{parentName:"ol",id:"fn-ways"},"If you need to use external data and still want ",(0,n.kt)(s.oc,{mdxType:"KittyLitter"})," tests, it is probably possible. You can write your own GitHub action to create a server on GitHub with the ",(0,n.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/docker.html#data%20storage"},"right Docker build environment variables, credentials, and config details"),". You are welcome to use ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/SuffolkLITLab/ALKiln/blob/-/action_for_github_server/action.yml"},"our GitHub action code")," as a starting point, of course. It is a feature we are hoping to add, but it is currently low on the list. If you do try to do this, we would love to help and to learn from what you do.",(0,n.kt)("a",{parentName:"li",href:"#fnref-ways",className:"footnote-backref"},"\u21a9")))))}m.isMDXComponent=!0}}]);