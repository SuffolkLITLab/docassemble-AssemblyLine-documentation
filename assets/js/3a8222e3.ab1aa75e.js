"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[9881],{7380:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"components/AssemblyLine/custom_jinja_filters","title":"AssemblyLine.custom_jinja_filters","description":"catchall\\\\_options","source":"@site/docs/components/AssemblyLine/custom_jinja_filters.md","sourceDirName":"components/AssemblyLine","slug":"/components/AssemblyLine/custom_jinja_filters","permalink":"/docs/components/AssemblyLine/custom_jinja_filters","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/AssemblyLine/custom_jinja_filters.md","tags":[],"version":"current","frontMatter":{"sidebar_label":"custom_jinja_filters","title":"AssemblyLine.custom_jinja_filters"}}');var s=l(4848),i=l(8453);const c={sidebar_label:"custom_jinja_filters",title:"AssemblyLine.custom_jinja_filters"},a=void 0,o={},r=[{value:"catchall_options",id:"catchall_options",level:4},{value:"catchall_label",id:"catchall_label",level:4}];function d(e){const n={code:"code",em:"em",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h4,{id:"catchall_options",children:"catchall_options"}),"\n",(0,s.jsx)(n.p,{children:"Jinja2 filter to support defining options for DACatchAll fields inside a DOCX template."}),"\n",(0,s.jsx)(n.p,{children:"This filter takes a list of items, which can be strings, dictionaries, or tuples,\nand converts them into a list of tuples containing the code and label for each option."}),"\n",(0,s.jsx)(n.p,{children:"The items can be in various formats:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["String: ",(0,s.jsx)(n.code,{children:'"code: label"'})]}),"\n",(0,s.jsxs)(n.li,{children:["Dictionary: ",(0,s.jsx)(n.code,{children:'\\{"code": "label"\\}'})]}),"\n",(0,s.jsxs)(n.li,{children:["Tuple: ",(0,s.jsx)(n.code,{children:'("code", "label")'})]}),"\n",(0,s.jsx)(n.li,{children:"List of any of the above types"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The resulting list of tuples is assigned to the ",(0,s.jsx)(n.code,{children:"_catchall_options"})," attribute of the\nDACatchAll object, which can then be used to populate the options in the catchall field."]}),"\n",(0,s.jsx)(n.p,{children:"Example usage in a DOCX template:"}),"\n",(0,s.jsxs)(n.p,{children:["Example in an interview with ",(0,s.jsx)(n.code,{children:"features: use catchall: True"})," turned on:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'\\{\\{ my_catchall_field | catchall_options("code1: label1", "code2: label2") \\}\\}\n\n\\{\\{ my_catchall_field_2 | catchall_options(\\{"code1": "label1"\\}, \\{"code2": "label2"\\}) \\}\\}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'---\nif: |\n    hasattr(x, "_catchall_options")\ngeneric object: DACatchAll\nquestion: |\n    $\\{ x.object_name() \\}?\nfields:\n    - $\\{ x.object_name() \\}: x.value\n      code: x._catchall_options\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"})," ",(0,s.jsx)(n.em,{children:"DACatchAll"})," - The DACatchAll object to which the options will be assigned."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"*raw_items"})," - A variable number of arguments representing the options to be added."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DACatchAll"})," - The modified DACatchAll object with the assigned options."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"catchall_label",children:"catchall_label"}),"\n",(0,s.jsx)(n.p,{children:"Jinja2 filter to allow you to define a label for a DACatchAll field inside a DOCX template."}),"\n",(0,s.jsxs)(n.p,{children:["This filter takes a label string and assigns it to the ",(0,s.jsx)(n.code,{children:"label"})," attribute of the\nDACatchAll object. This label can be used to provide a more descriptive name for the\ncatchall field in the user interface."]}),"\n",(0,s.jsxs)(n.p,{children:["Example usage in a DOCX template:\nExample in an interview with ",(0,s.jsx)(n.code,{children:"features: use catchall: True"})," turned on:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'\\{\\{ my_catchall_field | catchall_label("My Custom Label") \\}\\}\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'---\ngeneric object: DACatchAll\nquestion: |\n    $\\{ x.label if hasattr(x, "label") else x.object_name() \\}?\nfields:\n    - $\\{ x.label if hasattr(x, "label") else x.object_name() \\}: x.value\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"})," ",(0,s.jsx)(n.em,{children:"DACatchAll"})," - The DACatchAll object to which the label will be assigned."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"label"})," ",(0,s.jsx)(n.em,{children:"str"})," - The label string to assign to the DACatchAll object."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DACatchAll"})," - The modified DACatchAll object with the assigned label."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>c,x:()=>a});var t=l(6540);const s={},i=t.createContext(s);function c(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);