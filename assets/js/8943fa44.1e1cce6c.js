"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[7094],{7261:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"components/ALDashboard/project_maintenance","title":"ALDashboard.project_maintenance","description":"* ALDashboard.project\\\\maintenance","source":"@site/docs/components/ALDashboard/project_maintenance.md","sourceDirName":"components/ALDashboard","slug":"/components/ALDashboard/project_maintenance","permalink":"/docs/components/ALDashboard/project_maintenance","draft":false,"unlisted":false,"editUrl":"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/components/ALDashboard/project_maintenance.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"ALDashboard.package_scanner","permalink":"/docs/components/ALDashboard/package_scanner"},"next":{"title":"ALDashboard.translation","permalink":"/docs/components/ALDashboard/translation"}}');var r=s(4848),t=s(8453);const a={},o="ALDashboard.project_maintenance",c={},d=[{value:"Basic Usage:",id:"basic-usage",level:2},{value:"Workflow 1: Batch Issue Creation for Maintenance",id:"workflow-1-batch-issue-creation-for-maintenance",level:2},{value:"Workflow 2: Repository Organization",id:"workflow-2-repository-organization",level:2},{value:"Workflow 3: Project Management",id:"workflow-3-project-management",level:2},{value:"get_package_names",id:"get_package_names",level:3},{value:"Arguments",id:"arguments",level:4},{value:"Returns",id:"returns",level:4},{value:"add_tag_to_repos",id:"add_tag_to_repos",level:3},{value:"Arguments",id:"arguments-1",level:4},{value:"process_packages_and_add_tag",id:"process_packages_and_add_tag",level:3},{value:"Arguments",id:"arguments-2",level:4},{value:"get_project_by_name",id:"get_project_by_name",level:3},{value:"Arguments",id:"arguments-3",level:4},{value:"Returns",id:"returns-1",level:4},{value:"get_repos_by_topic",id:"get_repos_by_topic",level:3},{value:"Arguments",id:"arguments-4",level:4},{value:"Returns",id:"returns-2",level:4},{value:"add_issues_and_create_cards",id:"add_issues_and_create_cards",level:3},{value:"Arguments",id:"arguments-5",level:4},{value:"find_issues_by_title",id:"find_issues_by_title",level:3},{value:"Arguments",id:"arguments-6",level:4},{value:"Returns",id:"returns-3",level:4},{value:"add_issue_to_project",id:"add_issue_to_project",level:3},{value:"Arguments",id:"arguments-7",level:4},{value:"link_issue_title_to_project",id:"link_issue_title_to_project",level:3},{value:"Arguments",id:"arguments-8",level:4},{value:"main",id:"main",level:3}];function l(e){const n={a:"a",br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"aldashboardproject_maintenance",children:"ALDashboard.project_maintenance"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance",children:"ALDashboard.project_maintenance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.get_package_names",children:"get_package_names"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.add_tag_to_repos",children:"add_tag_to_repos"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.process_packages_and_add_tag",children:"process_packages_and_add_tag"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.get_project_by_name",children:"get_project_by_name"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.get_repos_by_topic",children:"get_repos_by_topic"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.add_issues_and_create_cards",children:"add_issues_and_create_cards"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.find_issues_by_title",children:"find_issues_by_title"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.add_issue_to_project",children:"add_issue_to_project"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.link_issue_title_to_project",children:"link_issue_title_to_project"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#ALDashboard.project_maintenance.main",children:"main"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"GitHub Project Maintenance Tool for Docassemble"}),"\n",(0,r.jsx)(n.p,{children:"This module provides command-line tools for automating GitHub repository maintenance tasks\nacross multiple repositories, particularly for Docassemble packages. It enables bulk operations\nlike adding issues, managing tags, and linking issues to GitHub projects."}),"\n",(0,r.jsx)(n.h1,{id:"prerequisites",children:"PREREQUISITES:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install required dependencies:\npip install PyGithub"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"GitHub Personal Access Token (PAT):\nYou need a GitHub Personal Access Token with the following permissions:"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"repo (full control of private repositories)"}),"\n",(0,r.jsxs)(n.li,{children:["admin",":org"," (for organization operations)"]}),"\n",(0,r.jsx)(n.li,{children:"project (for GitHub Projects v2 access)"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Create one at: ",(0,r.jsx)(n.a,{href:"https://github.com/settings/tokens",children:"https://github.com/settings/tokens"})]}),"\n",(0,r.jsx)(n.h1,{id:"available-commands",children:"AVAILABLE COMMANDS:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"get_package_names\nGets package names from a Docassemble server."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"add_tag_to_repos\nAdds a topic/tag to specific repositories."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"process_packages_and_add_tag\nGets packages from a Docassemble server and adds tags to corresponding repositories."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"add_issues_and_create_cards\nCreates issues across repositories with a specific topic and adds them to a GitHub project."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"link_issues\nLinks existing issues with specific titles to a GitHub project."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"usage-examples",children:"USAGE EXAMPLES:"}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage:"}),"\n",(0,r.jsx)(n.p,{children:"python project_maintenance.py <command> [arguments]"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Get package names from a Docassemble server:\npython project_maintenance.py get_package_names courtformsonline.org"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add a tag to specific repositories:\npython project_maintenance.py add_tag_to_repos ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n","docassemble-ALAffidavitOfIndigency docassemble-ALDocument ",(0,r.jsx)(n.br,{}),"\n","legal-tech"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Process packages from server and add tags:\npython project_maintenance.py process_packages_and_add_tag ",(0,r.jsx)(n.br,{}),"\n","courtformsonline.org ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n","assembly-line"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Add issues across repositories and create project cards:\npython project_maintenance.py add_issues_and_create_cards ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n",'"Assembly Line Maintenance" ',(0,r.jsx)(n.br,{}),"\n","assembly-line ",(0,r.jsx)(n.br,{}),"\n",'"Update documentation" ',(0,r.jsx)(n.br,{}),"\n",'"Please update the README.md file with current installation instructions."']}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Link existing issues to a project:\npython project_maintenance.py link_issues ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n",'"Assembly Line Maintenance" ',(0,r.jsx)(n.br,{}),"\n","assembly-line ",(0,r.jsx)(n.br,{}),"\n",'"Update documentation"']}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"common-workflows",children:"COMMON WORKFLOWS:"}),"\n",(0,r.jsx)(n.h2,{id:"workflow-1-batch-issue-creation-for-maintenance",children:"Workflow 1: Batch Issue Creation for Maintenance"}),"\n",(0,r.jsx)(n.h1,{id:"step-1-create-issues-across-all-assembly-line-packages",children:"Step 1: Create issues across all Assembly Line packages"}),"\n",(0,r.jsxs)(n.p,{children:["python project_maintenance.py add_issues_and_create_cards ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n",'"Q1 2024 Maintenance" ',(0,r.jsx)(n.br,{}),"\n","assembly-line ",(0,r.jsx)(n.br,{}),"\n",'"Security audit required" ',(0,r.jsx)(n.br,{}),"\n",'"Please review and update dependencies for security vulnerabilities. See issue template for checklist."']}),"\n",(0,r.jsx)(n.h2,{id:"workflow-2-repository-organization",children:"Workflow 2: Repository Organization"}),"\n",(0,r.jsx)(n.h1,{id:"step-1-get-packages-from-production-server",children:"Step 1: Get packages from production server"}),"\n",(0,r.jsx)(n.p,{children:"python project_maintenance.py get_package_names courtformsonline.org"}),"\n",(0,r.jsx)(n.h1,{id:"step-2-add-organization-tags-based-on-server-packages",children:"Step 2: Add organization tags based on server packages"}),"\n",(0,r.jsxs)(n.p,{children:["python project_maintenance.py process_packages_and_add_tag ",(0,r.jsx)(n.br,{}),"\n","courtformsonline.org ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n","production-ready"]}),"\n",(0,r.jsx)(n.h2,{id:"workflow-3-project-management",children:"Workflow 3: Project Management"}),"\n",(0,r.jsx)(n.h1,{id:"step-1-create-issues-for-a-new-initiative",children:"Step 1: Create issues for a new initiative"}),"\n",(0,r.jsxs)(n.p,{children:["python project_maintenance.py add_issues_and_create_cards ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n",'"Accessibility Improvements" ',(0,r.jsx)(n.br,{}),"\n","assembly-line ",(0,r.jsx)(n.br,{}),"\n",'"WCAG 2.1 Compliance Review" ',(0,r.jsx)(n.br,{}),"\n",'"Review forms for WCAG 2.1 AA compliance. Focus on: keyboard navigation, screen reader compatibility, color contrast, and form labels."']}),"\n",(0,r.jsx)(n.h1,{id:"step-2-later-link-related-existing-issues",children:"Step 2: Later, link related existing issues"}),"\n",(0,r.jsxs)(n.p,{children:["python project_maintenance.py link_issues ",(0,r.jsx)(n.br,{}),"\n","YOUR_GITHUB_TOKEN ",(0,r.jsx)(n.br,{}),"\n","SuffolkLITLab ",(0,r.jsx)(n.br,{}),"\n",'"Accessibility Improvements" ',(0,r.jsx)(n.br,{}),"\n","assembly-line ",(0,r.jsx)(n.br,{}),"\n",'"Screen reader compatibility"']}),"\n",(0,r.jsx)(n.h1,{id:"authentication-security",children:"AUTHENTICATION SECURITY:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Never commit your GitHub token to version control"}),"\n",(0,r.jsx)(n.li,{children:"Use environment variables: export GITHUB_TOKEN=your_token_here"}),"\n",(0,r.jsx)(n.li,{children:"Then use: $GITHUB_TOKEN in place of YOUR_GITHUB_TOKEN in examples"}),"\n",(0,r.jsx)(n.li,{children:"Consider using GitHub CLI authentication: gh auth token"}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"tips",children:"TIPS:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Use quotes around multi-word arguments (project names, issue titles, etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Repository names are automatically converted from package names (dots become hyphens)"}),"\n",(0,r.jsx)(n.li,{children:"The script filters repositories by GitHub topics/tags for targeted operations"}),"\n",(0,r.jsx)(n.li,{children:"GitHub Projects v2 (Next-Generation) are required for project operations"}),"\n",(0,r.jsx)(n.li,{children:"Large batch operations may hit GitHub API rate limits - the script includes error handling"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["For more information, see: ",(0,r.jsx)(n.a,{href:"https://github.com/SuffolkLITLab/docassemble-ALDashboard",children:"https://github.com/SuffolkLITLab/docassemble-ALDashboard"})]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.get_package_names"}),"\n",(0,r.jsx)(n.h3,{id:"get_package_names",children:"get_package_names"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_package_names(server_name: str) -> List[str]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Fetches the JSON file from the given Docassemble server and extracts package names."}),"\n",(0,r.jsx)(n.h4,{id:"arguments",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name or IP address of the Docassemble server."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"List[str]"})," - List of package names."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.add_tag_to_repos"}),"\n",(0,r.jsx)(n.h3,{id:"add_tag_to_repos",children:"add_tag_to_repos"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def add_tag_to_repos(token: str, org_name: str, repo_names: List[str],\n                     tag: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Adds a specific tag to each repository in the given list."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-1",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token (PAT) with appropriate permissions."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"org_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub organization."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"repo_names"})," ",(0,r.jsx)(n.em,{children:"List[str]"})," - List of repository names to which the tag will be added."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"tag"})," ",(0,r.jsx)(n.em,{children:"str"})," - The tag to be added to the repositories."]}),"\n",(0,r.jsx)(n.p,{children:"This function iterates through each repository in the provided list, fetching the\ncurrent topics (tags) of the repository. If the specified tag is not already present,\nit adds the tag to the repository. The function includes error handling to catch and\nprint any errors that occur while processing each repository."}),"\n",(0,r.jsx)(n.p,{children:'Example usage:\npersonal_access_token = "YOUR_PERSONAL_ACCESS_TOKEN"\norganization_name = "YourOrgName"\nrepositories = ["repo1", "repo2", "repo3"]\ntag_to_add = "your-tag"'}),"\n",(0,r.jsx)(n.p,{children:"add_tag_to_repos(personal_access_token, organization_name, repositories, tag_to_add)"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.process_packages_and_add_tag"}),"\n",(0,r.jsx)(n.h3,{id:"process_packages_and_add_tag",children:"process_packages_and_add_tag"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def process_packages_and_add_tag(server_name: str, token: str, org_name: str,\n                                 tag: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Fetches package names from a Docassemble server, transforms them into repository names,\nand adds a specified tag to each repository."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-2",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"server_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name or IP address of the Docassemble server."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"org_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub organization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tag"})," ",(0,r.jsx)(n.em,{children:"str"})," - Tag to be added to each repository."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.get_project_by_name"}),"\n",(0,r.jsx)(n.h3,{id:"get_project_by_name",children:"get_project_by_name"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_project_by_name(token: str, org_name: str,\n                        project_name: str) -> Optional[dict]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Finds a GitHub Next-Generation project by its name within an organization using GraphQL API."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-3",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"org_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub organization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"project_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub project."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"dict"})," - The GitHub project object, or None if not found."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.get_repos_by_topic"}),"\n",(0,r.jsx)(n.h3,{id:"get_repos_by_topic",children:"get_repos_by_topic"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_repos_by_topic(token: str, org_name: str,\n                       topic: str) -> List[Repository]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Fetches repositories in an organization that have a specific topic."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-4",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"org_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub organization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic"})," ",(0,r.jsx)(n.em,{children:"str"})," - The GitHub topic to filter repositories by."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"List[Repository]"})," - A list of repository objects that have the specified topic."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.add_issues_and_create_cards"}),"\n",(0,r.jsx)(n.h3,{id:"add_issues_and_create_cards",children:"add_issues_and_create_cards"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def add_issues_and_create_cards(token: str, org_name: str, project_name: str,\n                                topic: str, issue_title: str,\n                                issue_body: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Adds an issue to each repository with a specific topic and creates a card for each issue in a Next-Generation GitHub project."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-5",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"org_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub organization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"project_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub project."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic"})," ",(0,r.jsx)(n.em,{children:"str"})," - The GitHub topic to filter repositories by."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"issue_title"})," ",(0,r.jsx)(n.em,{children:"str"})," - Title of the issue."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"issue_body"})," ",(0,r.jsx)(n.em,{children:"str"})," - Body of the issue."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.find_issues_by_title"}),"\n",(0,r.jsx)(n.h3,{id:"find_issues_by_title",children:"find_issues_by_title"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def find_issues_by_title(token: str, org_name: str, repo_names: List[str],\n                         issue_title: str) -> List[str]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Finds issues in a list of repositories with a specific title."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-6",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"org_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub organization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"repo_names"})," ",(0,r.jsx)(n.em,{children:"list"})," - List of repository names."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"issue_title"})," ",(0,r.jsx)(n.em,{children:"str"})," - Title of the issue to be found."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"list"})," - A list of issue node IDs."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.add_issue_to_project"}),"\n",(0,r.jsx)(n.h3,{id:"add_issue_to_project",children:"add_issue_to_project"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def add_issue_to_project(token: str, project_id: str,\n                         issue_node_id: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Adds an issue to a Next-Generation GitHub project."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-7",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"project_id"})," ",(0,r.jsx)(n.em,{children:"str"})," - Node ID of the GitHub project."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"issue_node_id"})," ",(0,r.jsx)(n.em,{children:"str"})," - Node ID of the GitHub issue."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.link_issue_title_to_project"}),"\n",(0,r.jsx)(n.h3,{id:"link_issue_title_to_project",children:"link_issue_title_to_project"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def link_issue_title_to_project(token: str, org_name: str, project_name: str,\n                                topic: str, issue_title: str) -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Links issues with a specific title in repositories with a certain topic to a Next-Generation project."}),"\n",(0,r.jsx)(n.h4,{id:"arguments-8",children:"Arguments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"token"})," ",(0,r.jsx)(n.em,{children:"str"})," - GitHub Personal Access Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"org_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub organization."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"project_name"})," ",(0,r.jsx)(n.em,{children:"str"})," - Name of the GitHub project."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"topic"})," ",(0,r.jsx)(n.em,{children:"str"})," - The GitHub topic to filter repositories by."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"issue_title"})," ",(0,r.jsx)(n.em,{children:"str"})," - Title of the issue to link."]}),"\n"]}),"\n",(0,r.jsx)("a",{id:"ALDashboard.project_maintenance.main"}),"\n",(0,r.jsx)(n.h3,{id:"main",children:"main"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def main() -> None\n"})}),"\n",(0,r.jsx)(n.p,{children:"Main function to run the specified project maintenance command."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);