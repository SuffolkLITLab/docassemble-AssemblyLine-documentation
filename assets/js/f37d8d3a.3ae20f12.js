"use strict";(self.webpackChunkdocassemble_assembly_line_documentation=self.webpackChunkdocassemble_assembly_line_documentation||[]).push([[2329],{4137:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return c}});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),h=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},u=function(e){var t=h(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=h(a),c=o,m=d["".concat(l,".").concat(c)]||d[c]||p[c]||i;return a?n.createElement(m,r(r({ref:t},u),{},{components:a})):n.createElement(m,r({ref:t},u))}));function c(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=a.length,r=new Array(i);r[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var h=2;h<i;h++)r[h]=a[h];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5139:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return h},toc:function(){return u},default:function(){return d}});var n=a(7462),o=a(3366),i=(a(7294),a(4137)),r=["components"],s={id:"automated_testing",title:"Automated testing",sidebar_label:"Automated testing",slug:"/automated_integrated_testing"},l=void 0,h={unversionedId:"automated_testing",id:"automated_testing",title:"Automated testing",description:"\ud83d\udea7 Reference for writing automated integrated tests with the Assembly Line testing framework.",source:"@site/docs/automated_testing.md",sourceDirName:".",slug:"/automated_integrated_testing",permalink:"/docassemble-AssemblyLine-documentation/docs/automated_integrated_testing",editUrl:"https://github.com/SuffolkLITLab/docassemble-AssemblyLine-documentation/edit/main/docs/automated_testing.md",tags:[],version:"current",frontMatter:{id:"automated_testing",title:"Automated testing",sidebar_label:"Automated testing",slug:"/automated_integrated_testing"},sidebar:"someSidebar",previous:{title:"ALToolbox functions and components",permalink:"/docassemble-AssemblyLine-documentation/docs/framework/altoolbox"},next:{title:"E-filing",permalink:"/docassemble-AssemblyLine-documentation/docs/framework/efiling"}},u=[{value:"Intro",id:"intro",children:[],level:2},{value:"Start",id:"start",children:[],level:2},{value:"How does it work?",id:"how-does-it-work",children:[],level:2},{value:"Quick reminders",id:"quick-reminders",children:[{value:"Example",id:"example",children:[],level:3}],level:2},{value:"First test",id:"first-test",children:[],level:2},{value:"Story tables",id:"story-tables",children:[{value:"Generate a story table",id:"generate-a-story-table",children:[],level:3},{value:"Step description",id:"step-description",children:[],level:3},{value:"Rows",id:"rows",children:[],level:3},{value:"var",id:"var",children:[],level:3},{value:"value",id:"value",children:[],level:3},{value:"trigger",id:"trigger",children:[],level:3},{value:"Story table examples",id:"story-table-examples",children:[],level:3},{value:"<code>.there_is_another</code> loop",id:"there_is_another-loop",children:[],level:3},{value:"Story table signature",id:"story-table-signature",children:[],level:3},{value:"Other story table notes",id:"other-story-table-notes",children:[],level:3}],level:2},{value:"Steps",id:"steps",children:[{value:"Starting Steps",id:"starting-steps",children:[],level:3},{value:"Observe things about the page",id:"observe-things-about-the-page",children:[],level:3},{value:"Set fields",id:"set-fields",children:[],level:3},{value:"Other actions",id:"other-actions",children:[],level:3}],level:2},{value:"Tips",id:"tips",children:[],level:2},{value:"Test results",id:"test-results",children:[{value:"Summary page",id:"summary-page",children:[],level:3},{value:"Error screenshots&#39; artifacts",id:"error-screenshots-artifacts",children:[],level:3},{value:"Reports",id:"reports",children:[],level:3},{value:"Your screenshots&#39; artifacts",id:"your-screenshots-artifacts",children:[],level:3},{value:"Your downloaded files&#39; artifacts",id:"your-downloaded-files-artifacts",children:[],level:3}],level:2},{value:"Errors and warnings",id:"errors-and-warnings",children:[{value:"A missing trigger variable",id:"a-missing-trigger-variable",children:[],level:3},{value:"Timeout or &quot;took too long&quot; error",id:"timeout-or-took-too-long-error",children:[],level:3},{value:"Invalid playground path error",id:"invalid-playground-path-error",children:[],level:3},{value:"UnhandledPromiseRejection error",id:"unhandledpromiserejection-error",children:[],level:3}],level:2},{value:"Security",id:"security",children:[{value:"Disable the tests",id:"disable-the-tests",children:[{value:"Disabling tests in one repository",id:"disabling-tests-in-one-repository",children:[],level:4},{value:"Disabling tests for the whole organization",id:"disabling-tests-for-the-whole-organization",children:[],level:4}],level:3}],level:2},{value:"Customizations",id:"customizations",children:[{value:"Automate making a GitHub issue when tests fail",id:"automate-making-a-github-issue-when-tests-fail",children:[],level:3}],level:2},{value:"FAQ",id:"faq",children:[{value:"I have a private GitHub repository. Can I use this testing framework?",id:"i-have-a-private-github-repository-can-i-use-this-testing-framework",children:[],level:3},{value:"How do I add a new test file?",id:"how-do-i-add-a-new-test-file",children:[],level:3},{value:"How do I add a new test to an existing test file?",id:"how-do-i-add-a-new-test-to-an-existing-test-file",children:[],level:3},{value:"When do tests run?",id:"when-do-tests-run",children:[],level:3},{value:"Why should I write a Scenario description?",id:"why-should-i-write-a-scenario-description",children:[],level:3}],level:2},{value:"Built with",id:"built-with",children:[],level:2},{value:"Repositories",id:"repositories",children:[],level:2}],p={toc:u};function d(e){var t=e.components,a=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\ud83d\udea7 Reference for writing automated integrated tests with the Assembly Line testing framework."),(0,i.kt)("h2",{id:"intro"},"Intro"),(0,i.kt)("p",null,"The Kiln (Assembly Line Kiln) framework runs tests on your docassemble interview through GitHub, making sure your interviews are running the way you want."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kiln works with any docassemble interview"),", though it was developed through the Document Assembly Line project."),(0,i.kt)("p",null,"Docacon 2021, 10 minute intro presentation:"),(0,i.kt)("iframe",{width:"560",height:"315",src:"https://www.youtube-nocookie.com/embed/YB-e-MGtLgI?start=3482&end=4115",title:"10 minute intro of Assembly Line Kiln testing framework at Docacon 2021",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),(0,i.kt)("h2",{id:"start"},"Start"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Prepare your repository or organization for testing using ",(0,i.kt)("a",{parentName:"li",href:"https://apps-dev.suffolklitlab.org/start/test-setup"},"https://apps-dev.suffolklitlab.org/start/test-setup"),". Follow the instructions there to add new code to your repository."),(0,i.kt)("li",{parentName:"ol"},"In Docassemble, make a new Project and pull in the updated code."),(0,i.kt)("li",{parentName:"ol"},"Write tests in your Sources folder. You should already have an example test there to start with, created by the test setup interview.")),(0,i.kt)("h2",{id:"how-does-it-work"},"How does it work?"),(0,i.kt)("p",null,"Whenever you push to GitHub, GitHub will run the tests automatically with a bot that goes to whatever interviews you named in the tests and fills in the fields. You can see the tests running on your repository's ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#viewing-the-workflows-activity"},"GitHub Actions page"),"."),(0,i.kt)("p",null,"At the end, you can see a report and logs right in the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/using-workflow-run-logs"},'workflow\'s "job" page')," or ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts"},"download the report artifact to your computer"),"."),(0,i.kt)("h2",{id:"quick-reminders"},"Quick reminders"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"You write and edit ",(0,i.kt)("inlineCode",{parentName:"li"},".feature")," test files in your Sources folder."),(0,i.kt)("li",{parentName:"ol"},'By default, each Step or field may only take 30 seconds. You can change that with the "the maximum seconds" Step listed in the Steps.'),(0,i.kt)("li",{parentName:"ol"},"Tests are run in GitHub when you commit."),(0,i.kt)("li",{parentName:"ol"},"Tests can download files, but humans have to review them to see if they've come out right."),(0,i.kt)("li",{parentName:"ol"},"You will be able to download screenshots of pages that errored. They're in ",(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts"},"the Action's artifact section"),"."),(0,i.kt)("li",{parentName:"ol"},"ALKiln also creates test reports that you can download in the same place.")),(0,i.kt)("p",null,"Give us feedback and ideas by making issues at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/plocket/docassemble-cucumber/issues"},"https://github.com/plocket/docassemble-cucumber/issues"),"."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"The tests use the ",(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/"},"gherkin language and syntax"),". Here's a complex example for a quick refresher on some of our features:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'@children\nFeature: I have children\n\n  @fast @child_benefits\n  Scenario: child has benefits\n    Given I start the interview at "some_file_name.yml"\n    And I get to the question id "benefits" with this data:\n      | var | value | trigger |\n      | x[i].name.first | Cashmere | children[0].name.first |\n      | x[i].name.last | Davis | children[0].name.first |\n      | x[i].name.first | Casey | children[1].name.first |\n      | x[i].name.last | Davis | children[1].name.first |\n      | x.there_are_any | True | children.there_are_any |\n      | x.target_number | 2 | children.there_is_another |\n    When I set the var "benefits[\'SSI\']" to "True"\n    And I tap to continue\n    Then the question id should be "download"\n    And I download "some_motion.pdf"\n\n')),(0,i.kt)("h2",{id:"first-test"},"First test"),(0,i.kt)("p",null,"You can write a really simple test right away that just makes sure your YAML file runs. Write a ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," for each file you want to test."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Feature: Interviews load\n\n  Scenario: The 209A loads\n    Given I start the interview at "ma_209a_package.yml"\n\n  Scenario: The Plaintiff\'s Motion to Modify loads\n    Given I start the interview at "plaintiffs_motion_to_modify_209a.yml"\n')),(0,i.kt)("p",null,"You can wait to write more complex tests till your code is more stable."),(0,i.kt)("h2",{id:"story-tables"},"Story tables"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Story table")," Steps, in our opinion, are the most effective and flexible way to set the values of fields in ALKiln in most cases. Using them, it doesn't matter what order you use to list your fields or what order your pages come in. It also doesn't matter if you include extra fields accidentally. They are a snapshot of the user who's filling out the form for that test."),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    And I get to the question id "has sink" with this data:\n      | var | value | trigger |\n      | last_haircut_date | today - 730 | last_haircut_date |\n      | wants_virtual_haircut | True | wants_virtual_haircut |\n      | scissors[i].length | 2 | scissors[0].length |\n      | scissors[i].length | 7 | scissors[1].length |\n')),(0,i.kt)("p",null,"You can write a story table that goes all the way through your interview, or a story table that only goes part way."),(0,i.kt)("p",null,"Very basically, you tell the story table Step what ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," you want to get to and the variables and values it will need to get there. Whenever the test gets to a page, it checks your story table for any variables that match a variable on the page. When it finds a match, it sets the value of the field. When it's done with a page, it continues to the next page until it reaches the terminal ",(0,i.kt)("inlineCode",{parentName:"p"},"question"),"."),(0,i.kt)("p",null,"You can have multiple tables in one Scenario and you can put other steps between story table Steps."),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"A story table Step ",(0,i.kt)("strong",{parentName:"p"},"must not")," be the first step in your Scenario. The ",(0,i.kt)("a",{parentName:"p",href:"#starting-steps"},(0,i.kt)("inlineCode",{parentName:"a"},"interview")," Step")," ",(0,i.kt)("strong",{parentName:"p"},"must")," come before it."))),(0,i.kt)("h3",{id:"generate-a-story-table"},"Generate a story table"),(0,i.kt)("p",null,"You can use the ",(0,i.kt)("a",{parentName:"p",href:"https://plocket.github.io/al_story/"},"story table generator")," to generate a Scenario draft. Depending on your interview's code you might need to edit the table for it to work properly, but it can give you a good start."),(0,i.kt)("p",null,"Follow these instructions to use the generator:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"If you don't have one already, ",(0,i.kt)("a",{parentName:"li",href:"#how-do-i-add-a-new-test-file"},"add a new test file"),". You can leave out the Scenario."),(0,i.kt)("li",{parentName:"ol"},"Ensure your server config is set up to ",(0,i.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/config.html#debug"},"show debug info"),"."),(0,i.kt)("li",{parentName:"ol"},"Run your interview manually until you reach the page you want the story table to get to."),(0,i.kt)("li",{parentName:"ol"},'Open the "source" display of the interview. Currently, that looks like angle brackets, ',(0,i.kt)("inlineCode",{parentName:"li"},"</>"),", in the header of the page."),(0,i.kt)("li",{parentName:"ol"},"Note the ",(0,i.kt)("inlineCode",{parentName:"li"},"id")," of the page."),(0,i.kt)("li",{parentName:"ol"},'Tap the "Show variables and values" button. It will open a new tab showing a big JSON object.'),(0,i.kt)("li",{parentName:"ol"},"Copy all the text on that page."),(0,i.kt)("li",{parentName:"ol"},"Go to the ",(0,i.kt)("a",{parentName:"li",href:"https://plocket.github.io/al_story/"},"story table generator"),"."),(0,i.kt)("li",{parentName:"ol"},"Paste the JSON into the text area there, as instructed."),(0,i.kt)("li",{parentName:"ol"},"Use the other input fields to help finalize your Scenario, including the page ",(0,i.kt)("inlineCode",{parentName:"li"},"id"),"."),(0,i.kt)("li",{parentName:"ol"},"Copy the Scenario that has been generated for you."),(0,i.kt)("li",{parentName:"ol"},"Paste that into the already prepared test file.")),(0,i.kt)("p",null,"This works best with interviews that don't need ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variables")," or ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#generic"},"generic objects"),"."),(0,i.kt)("h3",{id:"step-description"},"Step description"),(0,i.kt)("p",null,"The Step that triggers a story table is"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    And I get to the question id "some id!" with this data:\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"question id:")," The story table needs to know the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," of the page this story table should get to. You can find the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block in the YAML, or using the ",(0,i.kt)("inlineCode",{parentName:"p"},"</>")," button in the header of an open interview."),(0,i.kt)("h3",{id:"rows"},"Rows"),(0,i.kt)("p",null,"Indented under the description, put the header row of the table:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | var | value | trigger |\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"var")," lists the variable the field sets exactly as it appears in the code of the question."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"value")," is the value you want the test to fill in."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"trigger")," lists the variable that triggers that variable's page. We describe that more in a section below.")),(0,i.kt)("p",null,"Under that, add a blank row for a field that you want the test to interact with during the interview:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      |  |  |  |\n")),(0,i.kt)("p",null,"You must include a row for every variable that need to be set in order to get to the page with the ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," you chose."),(0,i.kt)("h3",{id:"var"},"var"),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," column, write the name of the variable that a field sets ",(0,i.kt)("strong",{parentName:"p"},"exactly as it appears in the ",(0,i.kt)("inlineCode",{parentName:"strong"},"question")," block"),". Most times you can see that name in the YAML ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block. If ",(0,i.kt)("inlineCode",{parentName:"p"},"code:")," is used to create the field's variable name, you may have to talk to the developers who wrote that code to find out the name or names of the variable or variables it generates."),(0,i.kt)("p",null,"Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"court_date\nusers[0].name.first\nusers[i].children[j].benefits['SSI']\nx.favorite_color\n")),(0,i.kt)("h3",{id:"value"},"value"),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," column, write what you want the field to be set to. For checkboxes, ",(0,i.kt)("inlineCode",{parentName:"p"},"True")," means 'checked' and ",(0,i.kt)("inlineCode",{parentName:"p"},"False")," means 'unchecked'."),(0,i.kt)("p",null,"One special value you can include is ",(0,i.kt)("inlineCode",{parentName:"p"},"today"),". That will insert the date on which the test is being run. You can also subtract from, or add days to, ",(0,i.kt)("inlineCode",{parentName:"p"},"today"),". Examples:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | signature_date | today |  |\n      | court_date | today + 20 |  |\n      | minors_birth_date | today - 3650 |  |\n")),(0,i.kt)("p",null,"The last example makes sure that the date is 10 years in the past, ensuring that a minor always stays a minor for that test."),(0,i.kt)("h3",{id:"trigger"},"trigger"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," is an optional value in most cases. It is mandatory for rows that list ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#index%20variables"},"index variables"),", like ",(0,i.kt)("inlineCode",{parentName:"p"},"i"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"j"),", or ",(0,i.kt)("inlineCode",{parentName:"p"},"k"),", or ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#generic"},"generic objects")," (",(0,i.kt)("inlineCode",{parentName:"p"},"x"),"). Your interview ",(0,i.kt)("strong",{parentName:"p"},"must always")," include ",(0,i.kt)("a",{parentName:"p",href:"#trigger_variable_code"},"some special HTML")," to let the trigger variable work properly. As you can see, you will get a warning in the report if you leave that out."),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," column, write the name of the variable that triggers the page on which the field appears."),(0,i.kt)("p",null,"For the below, the ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"users[0].hair.how_much"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"---\nid: interview order\nmandatory: True\ncode: |\n  users[0].hair.how_much\n---\nid: hair\nquestion: |\n  Tell us about your hair\nfields:\n  - How much hair do you have?: users[i].hair.how_much\n  - What color is your hair?: users[i].hair.color\n")),(0,i.kt)("p",null,"Your story table rows to set those values would look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | var | value | trigger |\n      | users[i].hair.how_much | Enough | users[0].hair.how_much |\n      | users[i].hair.color | Sea green | users[0].hair.how_much |\n")),(0,i.kt)("p",null,"Even though the ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," columns were different, both ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," columns listed ",(0,i.kt)("inlineCode",{parentName:"p"},"users[0].hair.how_much"),". That's because when the docassemble asks for ",(0,i.kt)("inlineCode",{parentName:"p"},"users[0].hair.how_much"),", both fields are on that page and both variables have to be set."),(0,i.kt)("p",null,"There are some rare cases where no ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," exists. For example, ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," blocks with the ",(0,i.kt)("inlineCode",{parentName:"p"},"mandatory")," specifier:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"mandatory: True\nquestion: |\n  Do you like mandatory questions?\nyesno: likes_mandatory_questions\n")),(0,i.kt)("p",null,"In those cases, leave the ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," column empty."),(0,i.kt)("h3",{id:"story-table-examples"},"Story table examples"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Simple field types with their values.")),(0,i.kt)("p",null,"The 'yes' choice of ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#yesno"},"yesno buttons"),", ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#fields%20yesno"},"yesnoradio")," fields, etc."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | has_hair | True | has_hair |\n")),(0,i.kt)("p",null,"The 'maybe' choice in ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#yesnomaybe"},"yesnomaybe buttons")," and ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#fields%20yesno"},"datatype: yesnomaybe")," fields."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | has_hair | None | has_hair |\n")),(0,i.kt)("p",null,"Checkboxes with multiple choices. The value 'True' means to check the checkbox and 'False' means to uncheck it."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | benefits['SSI'] | True | benefits |\n")),(0,i.kt)("p",null,"Radio or dropdown choices."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | favorite_color | green | favorite_color |\n")),(0,i.kt)("p",null,"Text field or textarea. Even if the answer has multiple lines, you can only use one line. When a new line is supposed to appear, instead use ",(0,i.kt)("inlineCode",{parentName:"p"},"\\n"),". See below:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | favorite_color | Blue.\\nNo, green!\\nAaah... | favorite_color |\n")),(0,i.kt)("p",null,"A generic object with an index variable."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | x[i].name.first | Umi | users[1].name.first |\n")),(0,i.kt)("h3",{id:"there_is_another-loop"},(0,i.kt)("inlineCode",{parentName:"h3"},".there_is_another")," loop"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},".there_is_another")," loop in a story table is more complicated than you might expect."),(0,i.kt)("p",null,"The story table must handle setting the ",(0,i.kt)("inlineCode",{parentName:"p"},".there_is_another")," attribute automatically. You, as the developer, must pretend to use the ",(0,i.kt)("inlineCode",{parentName:"p"},".target_number")," attribute instead, whether you actually use it or not."),(0,i.kt)("p",null,"In your ",(0,i.kt)("inlineCode",{parentName:"p"},"var")," column, replace any ",(0,i.kt)("inlineCode",{parentName:"p"},".there_is_another")," rows for a particular variable with with one ",(0,i.kt)("inlineCode",{parentName:"p"},".target_number")," row. In the ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," column, put the number of items of the appropriate type."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"trigger")," column should have the name of the page's trigger variable, as usual. Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | x[i].name.first | Jose | users[0].name.first |\n      | x[i].name.first | Sam | users[1].name.first |\n      | x[i].name.first | Umi | users[2].name.first |\n      | x.target_number | 3 | users.there_is_another |\n")),(0,i.kt)("h3",{id:"story-table-signature"},"Story table signature"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"value")," for a row setting a signature doesn't matter. All signatures will be a dot."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | user.signature |  | user.signature |\n")),(0,i.kt)("h3",{id:"other-story-table-notes"},"Other story table notes"),(0,i.kt)("p",null,"Don't worry about accidentally including variables that won't show up during the test. Extra rows will be ignored."),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/docs/gherkin/reference/#steps"},"Steps")," must be written one after the other in the order they should happen. It's a bit more like you're the user clicking through the form. They can let you do things like download a file or make sure an user input invalidation message appears. If you change the order of the questions, even if you don't change any variable names, you may have to update these types of steps to change their order to match the new order of the screens."),(0,i.kt)("p",null,"Note: ",(0,i.kt)("inlineCode",{parentName:"p"},"When"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"Then"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"And"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"Given")," at the beginning of sentences can all be used interchangeably. It doesn't matter which you use."),(0,i.kt)("h3",{id:"starting-steps"},"Starting Steps"),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"You ",(0,i.kt)("strong",{parentName:"p"},"must")," include the ",(0,i.kt)("inlineCode",{parentName:"p"},"interview")," Step in each Scenario before setting any fields."))),(0,i.kt)("p",null,"Use an interview's filename in the ",(0,i.kt)("inlineCode",{parentName:"p"},"interview")," Step to open the interview you want to test."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Given I start the interview at "yaml_file_name.yml"\n')),(0,i.kt)("p",null,"This Step must ",(0,i.kt)("strong",{parentName:"p"},"always")," be included in ",(0,i.kt)("strong",{parentName:"p"},"each")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," ",(0,i.kt)("strong",{parentName:"p"},"before")," setting the values of any fields. There is no other way for the tests to know what website to go to."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can also start by giving your interview more time to load. The default maximum time is 30 seconds. This Step can be useful if you know that your interview takes longer to load."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Given the maximum seconds for each Step is 200\n")),(0,i.kt)("p",null,"This Step can also be used anywhere else in your Scenario to give Steps more time to complete their action."),(0,i.kt)("h3",{id:"observe-things-about-the-page"},"Observe things about the page"),(0,i.kt)("p",null,"To check the id, look at the YAML ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block and copy the id from there. This Step can help humans keep track of what page the tests are on. It will also show up in the logs of the tests and can help you see where things went wrong."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then the question id should be "some yaml block id!"\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Some other observational steps are"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I can't continue\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I will be told an answer is invalid\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I arrive at the next page\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Screenshots will be in the GitHub action's ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/downloading-workflow-artifacts"},"artifacts"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then I take a screenshot\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can make sure a link appears on the page. For example, a link to quickly leave the page for forms that deal with domestic abuse."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I should see the link to "a-url.com"\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Checking phrases will be language specific."),(0,i.kt)("p",null,"Be aware that sometimes the characters in your code and the characters on screen aren't the same. In our code, we often use apostrophes as quotes (",(0,i.kt)("inlineCode",{parentName:"p"},"'"),") and docassemble changes them to actual opening and closing quote characters (",(0,i.kt)("inlineCode",{parentName:"p"},"\u2018")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"\u2019"),"). It's best to copy the text straight from the screen."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I SHOULD see the phrase "some phrase"\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I should NOT see the phrase "some phrase"\n')),(0,i.kt)("h3",{id:"set-fields"},"Set fields"),(0,i.kt)("p",null,"Use this Step to continue to the next page. The text on the button itself doesn't matter."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    When I tap to continue\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use this Step to set the values of fields. Comparing this to ",(0,i.kt)("a",{parentName:"p",href:"#story-tables"},"a story table"),", as described above, the first quotes contain the equivalent of the ",(0,i.kt)("a",{parentName:"p",href:"#var"},(0,i.kt)("inlineCode",{parentName:"a"},"var"))," column and the second quotes contain the ",(0,i.kt)("a",{parentName:"p",href:"#value"},(0,i.kt)("inlineCode",{parentName:"a"},"value"))," you want to set."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I set the variable "users[i].hair_color" to "blue"\n')),(0,i.kt)("p",null,"For example, you can use the special word ",(0,i.kt)("inlineCode",{parentName:"p"},"today")," as a value to set dates."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Sign on a signature field. All signatures are the same."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    When I sign\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,'The "name" Step is specifically for the Document Assembly Line 4-part name questions.'),(0,i.kt)("p",null,"Avoid punctuation. We recommend you just use 2 names - the first name and last name - but you can have all these formats:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Firstname Lastname"),(0,i.kt)("li",{parentName:"ul"},"Firstname Middlename Lastname"),(0,i.kt)("li",{parentName:"ul"},"Firstname Middlename Lastname Suffix (where suffix is one of the dropdown suffix choices, like ",(0,i.kt)("inlineCode",{parentName:"li"},"II"),")")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I set the name of "x[i]" to "Ulli User"\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,'The "address" Step is specifically for the Document Assembly Line 4-part address questions.'),(0,i.kt)("p",null,"It allows a US address format, but can otherwise be any address you want that matches the format of the example below. Remember the commas."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    When I set the address of "users[0]" to "120 Tremont Street, Unit 1, Boston, MA 02108"\n')),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use the story table Step to make sure the test reaches a particular screen given a set of fields with their values. See a better description in ",(0,i.kt)("a",{parentName:"p",href:"#story-tables"},"sections above"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    I get to the question id "some question block id" with this data:\n')),(0,i.kt)("h3",{id:"other-actions"},"Other actions"),(0,i.kt)("p",null,'Use the "continue" Step to continue to the next page. The text on the button itself doesn\'t matter.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    When I tap to continue\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,'Use the "download" Step to download files so that humans can check that they are correct. The files will be in ',(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/downloading-workflow-artifacts"},"the GitHub action's artifacts"),'. If you think this step could take more than 30 seconds, use the "maximum seconds for each Step" Step) to give the file more time to download.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    Then I download "file-name.pdf"\n')),(0,i.kt)("p",null,"Leave out other parts of file's url."),(0,i.kt)("hr",null),(0,i.kt)("p",null,'Use the "upload" step to upload one or more files. You must store files that you plan to upload in your ',(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/playground.html#templates"},'"Sources" folder')," along with your tests."),(0,i.kt)("p",null,"As you can see in the examples, if you want to upload more than one file you must separate their names with a comma."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'And I upload "irrefutable_evidence.jpg, refutable_evidence.pdf" to "evidence_files"\n')),(0,i.kt)("p",null,"To do this in a story table use the name of the variable as usual and use the name of the file or files in the value column."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"      | evidence_files | irrefutable_evidence.jpg, refutable_evidence.pdf |  |\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,'Use the "custom timeout" Step to give your pages or Steps more time to finish. The default maximum time is 30 seconds. This Step can be useful if you know that a page or an interaction with a field will take longer. You can also use it to shorten the time to let tests fail faster. If you need, you can use it in multiple places in each Scenario.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Then the maximum seconds for each Step is 200\n")),(0,i.kt)("hr",null),(0,i.kt)("p",null,'Use the "wait" Step to pause once a page has loaded. will let you wait for a number of seconds when you are on a page. The time must be shorter than the maximum amount of time for each Step. By default, that\'s 30 seconds, but you can increase that with the "maximum seconds for each Step" Step.'),(0,i.kt)("p",null,"Waiting can help in some situations where you run into timing issues. It does nothing for the timing of other steps. You can give this Step any number of seconds, though all Steps will timeout after two minutes. You can add multiple rows of these if you want."),(0,i.kt)("p",null,"The situations that need this are pretty rare, but here's an example: You navigate to a new page and set a field. Sometimes the test passes, but sometimes the test says an element on this page does not exist. The problem is probably that the page sometimes needs an extra few seconds to load. Add this step in to give it that time."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    When I wait 10 seconds\n")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'    And I tap to continue\n    When I wait 10 seconds\n    And I set the variable "favorite_color" to "puce"\n')),(0,i.kt)("h2",{id:"tips"},"Tips"),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Some of these are just good practices to follow when coding your interviews")),(0,i.kt)("p",null,"In questions with choices, give each label a value. See ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/fields.html#field%20with%20buttons"},"docassemble's documentation on buttons")," to read about key-value pairs."),(0,i.kt)("p",null,"Not great with just labels:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"question: Tell me about yourself\nfields:\n  - Favorite color\n")),(0,i.kt)("p",null,"Better with values as well:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ymlquestion:",metastring:"Tell me about yourself",Tell:!0,me:!0,about:!0,yourself:!0},"fields:\n  - Favorite color: user_favorite_color\n")),(0,i.kt)("p",null,"It's always possible to use the labels alone, but giving a value as well ensures your tests will work for translated versions of your interview. It also helps your code be more translatable in general."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Add a ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/modifiers.html#id"},"unique id")," to each ",(0,i.kt)("inlineCode",{parentName:"p"},"question")," block of your interview. This also helps your team communicate with each other more easily."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Avoid ",(0,i.kt)("inlineCode",{parentName:"p"},"noyes")," type fields. For one thing, the ",(0,i.kt)("a",{parentName:"p",href:"#generate-a-story-table"},"story table generator")," code will need less editing. For another, we've found that humans tend to find those confusing too."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"If your package is not importing specifically al_package.yml from the styled Assembly Line package, make sure to add the ",(0,i.kt)("a",{parentName:"p",href:"#trigger_variable_code"},"trigger variable code")," to your interview."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You can write tests that just go part-way through an interview. That way, you can work on adding more content and yet also be sure that the work you've already done isn't affected by the new changes."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Use old Scenarios or story tables to help you make new ones. You don't have to make everything from scratch."),(0,i.kt)("h2",{id:"test-results"},"Test results"),(0,i.kt)("p",null,"To see the list of past tests or running tests, go to your repository's ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#viewing-the-workflows-activity"},"GitHub Actions page"),"."),(0,i.kt)("p",null,"One of the rows should have the text of the commit you just made. The test may have a yellow dot next to it. That means it's still running. When the dot has turned into a red 'x' or a green checkmark, tap on the name to go to the test's Summary page."),(0,i.kt)("p",null,"To see the full output text of the test run, its logs, follow ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/using-workflow-run-logs"},"these GitHub instructions"),"."),(0,i.kt)("h3",{id:"summary-page"},"Summary page"),(0,i.kt)("p",null,"ALKiln automatically creates a report for each set of tests. If there are errors, it creates screenshots of those errors. You can ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/downloading-workflow-artifacts"},'download these GitHub "artifacts"')," at the bottom of the Summary page."),(0,i.kt)("h3",{id:"error-screenshots-artifacts"},"Error screenshots' artifacts"),(0,i.kt)("p",null,'When a test fails on an interview page, ALKiln will take a screenshot of the page. ALKiln saves these files in the "errors" GitHub artifact. The screenshot\'s name will be made of the scenario description and a timestamp of when the screenshot was taken.'),(0,i.kt)("p",null,"There you might see that the test was unable to continue to the next page because required fields weren't filled, or that a variable wasn't defined."),(0,i.kt)("h3",{id:"reports"},"Reports"),(0,i.kt)("p",null,"We're always trying to understand what people would find helpful in these reports. Tell us about your experiences at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues"},"https://github.com/SuffolkLITLab/ALKiln/issues"),"."),(0,i.kt)("p",null,'ALKiln saves the report in the "report" GitHub artifact. A report might look something like this:'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Assembly Line Kiln Automated Testing Report - Wed, 29 Dec 2021 17:49:00 GMT\n\n\n===============================\n===============================\nFailed scenarios:\n\n---------------\nScenario: I get to the download page\n---------------\n\nERROR: The question id was supposed to be "download", but it\'s actually "agree-to-terms".\n**-- Scenario Failed --**\n\n\n===============================\n===============================\nPassed scenarios:\n\n---------------\nScenario: I fill in my name\n---------------\nscreen id: user-name\n      | user.name.first | Maru |  |\n      | user.name.last | Plaintiff |  |\n')),(0,i.kt)("p",null,"A report has a title with the date and time. It also has two main sections - the failed Scenarios and the Scenarios that passed."),(0,i.kt)("p",null,"Within each of those, every Scenario will have its own section. In the Scenario's section, ALKiln will list the id of each screen where fields were set in the order in which they appeared. Under each ",(0,i.kt)("inlineCode",{parentName:"p"},"screen id")," will be the names of the variables whose fields were set and the values they were set to. We're still working out some issues here."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"If you used a ",(0,i.kt)("a",{parentName:"p",href:"#story-tables"},"story table")," Step, a Scenario might look more like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'---------------\nScenario: I fill in my name\n---------------\nscreen id: user-name\n      | user.name.first | Maru |  |\n      | user.name.last | Plaintiff |  |\n\n  Rows that got set:\n    And I get to the question id "child information" with this data:\n      | var | value | trigger |\n      | user.name.first | Maru |  |\n      | user.name.last | Plaintiff |  |\n  Unused rows:\n      | defendant.name.first | Sam |  |\n      | defendant.name.last | Defo |  |\n')),(0,i.kt)("p",null,"Since story table Steps don't care about having extra unused rows, the report lets you know which rows did or did not get used. If rows are listed under \"Unused rows\", ALKiln couldn't find the fields for those variables during the test. Despite that, it was still able to get to the desired question id."),(0,i.kt)("p",null,"Rows are listed in alphabetical order. If you have thoughts on pros and cons, we'd love to hear from you."),(0,i.kt)("p",null,'If everything looks right to you there, you can copy and paste the text under "Rows that got set" into your test to get rid of the extra rows you\'ve got hanging around.'),(0,i.kt)("hr",null),(0,i.kt)("p",null,"If a screen loaded with an error message, ALKiln will try to reload a few times, and will try to log the error message that it saw:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'---------------\nScenario: I opened the interview\n---------------\n\nERROR: On final attempt to load interview, got "Reference to invalid playground path"\n\nERROR: On final attempt to load interview, got "Reference to invalid playground path"\n\nERROR: On final attempt to load interview, got "Reference to invalid playground path"\n\nERROR: Failed to load "a-great-interview" after 3 tries. Each try gave the page 30 seconds to load.\n**-- Scenario Failed --**\n')),(0,i.kt)("p",null,"You will probably find a screenshot of the page in your ",(0,i.kt)("a",{parentName:"p",href:"#error-screenshots-artifacts"},"error artifacts"),"."),(0,i.kt)("p",null,"Also watch the ",(0,i.kt)("a",{parentName:"p",href:"#errors-and-warnings"},"errors and warnings")," section for updates on similar information."),(0,i.kt)("h3",{id:"your-screenshots-artifacts"},"Your screenshots' artifacts"),(0,i.kt)("p",null,"You can choose to take a screenshot of a page with the ",(0,i.kt)("inlineCode",{parentName:"p"},"Then I take a screenshot"),' Step. ALKiln saves these files in the "screenshots" GitHub artifact.'),(0,i.kt)("h3",{id:"your-downloaded-files-artifacts"},"Your downloaded files' artifacts"),(0,i.kt)("p",null,"You can choose to download a file with the ",(0,i.kt)("inlineCode",{parentName:"p"},'Then I download "file-name.pdf"'),' Step. ALKiln saves these in the "downloads" GitHub artifact. You can read more about that Step in the ',(0,i.kt)("a",{parentName:"p",href:"#other-actions"},"Other actions")," section."),(0,i.kt)("h2",{id:"errors-and-warnings"},"Errors and warnings"),(0,i.kt)("p",null,"This section will be filled out as we go."),(0,i.kt)("h3",{id:"a-missing-trigger-variable"},"A missing trigger variable"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This warning only matters for story tables that use index variables or generic objects.")),(0,i.kt)("p",null,"That warning isn't a bug, but if the above doesn't apply to you, you can ignore it. A future goal of ours is to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues/452"},"remove the warning from Steps that don't need it"),"."),(0,i.kt)("p",null,"If you are using a story table with index variables or generic objects, you need to add some code to the interview file where you set your ",(0,i.kt)("a",{parentName:"p",href:"https://docassemble.org/docs/initial.html#metadata"},(0,i.kt)("inlineCode",{parentName:"a"},"metadata")," block"),". It controls items like ",(0,i.kt)("inlineCode",{parentName:"p"},"title")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"authors"),"."),(0,i.kt)("a",{name:"trigger_variable_code"}),(0,i.kt)("p",null,"Add this code to your ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata")," block to insert an invisible element in all your screens:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},'  post: |\n    <div data-variable="${ encode_name(str( user_info().variable )) }" id="trigger" aria-hidden="true" style="display: none;"></div>\n')),(0,i.kt)("p",null,"If you already have something in your ",(0,i.kt)("inlineCode",{parentName:"p"},"post:")," metadata, just add that code anywhere inside there. There's a chance it can interfere with your css styles, so putting it at the end may be the best choice."),(0,i.kt)("p",null,"If you want to see some very technical details about why we need it in the first place, you can go to ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues/256"},"https://github.com/SuffolkLITLab/ALKiln/issues/256"),", where we've tried to summarize the problem this is solving. Unfortunately, we haven't found another way to solve this particular problem."),(0,i.kt)("h3",{id:"timeout-or-took-too-long-error"},'Timeout or "took too long" error'),(0,i.kt)("p",null,'Different problems can cause the report to say that something "took too long" or cause a "timeout" error to show up in the logs of the ',(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/monitoring-and-troubleshooting-workflows/using-workflow-run-logs"},'workflow\'s "job" page'),"."),(0,i.kt)("p",null,"This error can happen when the test is trying to go to the wrong url, usually because:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"SERVER_URL")," ",(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets"},"GitHub secret")," has a typo or the server address is wrong. This secret is usually created by the ",(0,i.kt)("a",{parentName:"li",href:"#start"},"setup interview"),". It is supposed to be the address of the docassemble server where the docassemble testing account is located. Find the right server name and edit the secret to contain that server name. Exclude an ending ",(0,i.kt)("inlineCode",{parentName:"li"},"/"),"."),(0,i.kt)("li",{parentName:"ol"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"Given I start the interview at...")," Step is naming an interview that doesn't exist. Check for a typo in the file name.")),(0,i.kt)("p",null,'A "timeout" error can also happen when a page took too long to load at some point in setup, when running tests, or during test cleanup. This can be because:'),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The page was trying to load a big file."),(0,i.kt)("li",{parentName:"ol"},"The server was busy for too long."),(0,i.kt)("li",{parentName:"ol"},"The server is down.")),(0,i.kt)("p",null,'If a page was taking to load a big files, use the "custom timeout" Step to give the page more time to load.'),(0,i.kt)("p",null,"If the server was busy, try ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/re-running-workflows-and-jobs#re-running-all-the-jobs-in-a-workflow"},"re-running the tests"),". As of 01/2022 you have to navigate to the newly running tests manually. For example, by going to the Actions page again."),(0,i.kt)("p",null,"You can download and look at your ",(0,i.kt)("a",{parentName:"p",href:"http://localhost:3000/docassemble-AssemblyLine-documentation/docs/automated_integrated_testing#error-screenshots-artifacts"},'"error" artifacts screenshots')," to check for more details."),(0,i.kt)("h3",{id:"invalid-playground-path-error"},"Invalid playground path error"),(0,i.kt)("p",null,'If you see the text "invalid playground path" in the report, that means the ',(0,i.kt)("inlineCode",{parentName:"p"},"Given I start the interview at...")," Step for that scenario is naming an interview that doesn't exist. Check for a typo."),(0,i.kt)("h3",{id:"unhandledpromiserejection-error"},"UnhandledPromiseRejection error"),(0,i.kt)("p",null,"This is a misleading error. You need to read the text of the whole paragraph to see what the actual error is."),(0,i.kt)("h2",{id:"security"},"Security"),(0,i.kt)("p",null,"Using a third-party library or package is always a risk. That said, we're working on some measures to help secure our code and to give you access to more secure ways to do this stuff. You can follow this conversation in GitHub at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln/issues/425"},"https://github.com/SuffolkLITLab/ALKiln/issues/425"),"."),(0,i.kt)("h3",{id:"disable-the-tests"},"Disable the tests"),(0,i.kt)("p",null,"If you become worried about the tests, there are different ways you can stop the tests from running."),(0,i.kt)("p",null,'In order to run, the test setup interview added a "workflow" file to your repository. GitHub sometimes calls that an "action". That\'s what triggers the tests. You can manage that workflow, and your actions in general, in GitHub.'),(0,i.kt)("h4",{id:"disabling-tests-in-one-repository"},"Disabling tests in one repository"),(0,i.kt)("p",null,"GitHub lets you disable workflow files like these. See their instructions at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow"},"https://docs.github.com/en/actions/managing-workflow-runs/disabling-and-enabling-a-workflow"),"."),(0,i.kt)("p",null,"You can also delete the file from your repository completely. If you go to the front page of your repository, the file is in the ",(0,i.kt)("inlineCode",{parentName:"p"},"workflows")," folder of the ",(0,i.kt)("inlineCode",{parentName:"p"},".github")," folder. It's called ",(0,i.kt)("inlineCode",{parentName:"p"},"run_form_tests.yml"),". GitHub's instructions about how to delete a file are at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/deleting-files-in-a-repository"},"https://docs.github.com/en/repositories/working-with-files/managing-files/deleting-files-in-a-repository"),"."),(0,i.kt)("p",null,"Another option is to disable or limiting all tests, all actions, in your repository. GitHub's documentation for managing repository actions is at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#managing-github-actions-permissions-for-your-repository"},"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#managing-github-actions-permissions-for-your-repository"),"."),(0,i.kt)("h4",{id:"disabling-tests-for-the-whole-organization"},"Disabling tests for the whole organization"),(0,i.kt)("p",null,"You can disable these tests, or any actions, for a whole organization. GitHub's documentation for managing organization actions is at ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#managing-github-actions-permissions-for-your-organization"},"https://docs.github.com/en/organizations/managing-organization-settings/disabling-or-limiting-github-actions-for-your-organization#managing-github-actions-permissions-for-your-organization"),"."),(0,i.kt)("h2",{id:"customizations"},"Customizations"),(0,i.kt)("h3",{id:"automate-making-a-github-issue-when-tests-fail"},"Automate making a GitHub issue when tests fail"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Go to your GitHub repository."),(0,i.kt)("li",{parentName:"ol"},"Tap on the ",(0,i.kt)("inlineCode",{parentName:"li"},".github")," folder, then on ",(0,i.kt)("inlineCode",{parentName:"li"},"workflows"),", then on the run_form_tests.yml."),(0,i.kt)("li",{parentName:"ol"},"Tap to ",(0,i.kt)("a",{parentName:"li",href:"https://docs.github.com/en/repositories/working-with-files/managing-files/editing-files"},"edit the file"),"."),(0,i.kt)("li",{parentName:"ol"},"Add the below code under the last line of text in the file."),(0,i.kt)("li",{parentName:"ol"},"Do not add any GitHub new secrets to your repository for this, even if you know how to.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yml"},"      - name: If tests failed create an issue\n        if: ${{ failure() }}\n        uses: actions-ecosystem/action-create-issue@v1\n        with:\n          github_token: ${{ secrets.github_token }}\n          title: ALKiln tests failed\n          body: |\n            An ALKiln test failed. See the action at ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}.\n          labels: |\n            bug\n")),(0,i.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Avoid changing the value ",(0,i.kt)("inlineCode",{parentName:"p"},"github_token")," and avoid creating a new secret for it. The variable ",(0,i.kt)("inlineCode",{parentName:"p"},"secrets.github_token")," is a value that your repository has by default."))),(0,i.kt)("p",null,"If you use the code above, the ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues"},"GitHub issue")," will contain a link to the workflow's action page itself."),(0,i.kt)("p",null,"You can edit the values of ",(0,i.kt)("inlineCode",{parentName:"p"},"title"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"body"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"bug")," to customize the issue."),(0,i.kt)("h2",{id:"faq"},"FAQ"),(0,i.kt)("h3",{id:"i-have-a-private-github-repository-can-i-use-this-testing-framework"},"I have a private GitHub repository. Can I use this testing framework?"),(0,i.kt)("p",null,"Yes, you can use ALKiln with a private repository, though you have to do a bit of extra work."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Pick a GitHub account that has permission to change the private repository. "),(0,i.kt)("li",{parentName:"ol"},"Make sure the account on your docassemble server that you linked to the tests is integrated with the GitHub account. See ",(0,i.kt)("a",{parentName:"li",href:"https://docassemble.org/docs/packages.html#github"},"docassemble's documentation on integrating a GitHub account"),".")),(0,i.kt)("p",null,"As that documentation explains, no two accounts on a docassemble server can be connected to the same GitHub account."),(0,i.kt)("p",null,"Also, there are some limits on the amount of time private repositories can run workflows: ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions"},"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions")),(0,i.kt)("h3",{id:"how-do-i-add-a-new-test-file"},"How do I add a new test file?"),(0,i.kt)("p",null,"Go to your Playground > the dropdown Folders menu > Sources."),(0,i.kt)("p",null,"Add a new file that ends in the extension ",(0,i.kt)("inlineCode",{parentName:"p"},".feature"),". Ex: ",(0,i.kt)("inlineCode",{parentName:"p"},"has_children.feature")),(0,i.kt)("p",null,"Add this to the blank file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Feature: A description of the category of the tests you\'ll write in this file\n\nScenario: The specific situation that this test is written for\n  Given I start the interview at "name_of_the_interview_file_to_test.yml"\n')),(0,i.kt)("p",null,"Make sure that"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Feature:")," and it's description is on the first line."),(0,i.kt)("li",{parentName:"ol"},"Each test starts with a ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario:")," and its description."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Given I start the interview...")," is the first line under ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario"),".")),(0,i.kt)("p",null,"After that, you can add the story table or other Steps that will test your code. Add the file to the files you commit to GitHub. From then on, GitHub will run that tests whenever you commit, or push, to GitHub."),(0,i.kt)("p",null,"An example for the start of two separate tests for a restraining order:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Feature: I have children\n\nScenario: I need visits to be supervised\n  Given I start the interview at "restraining_order.yml"\n\n\nScenario: I allow unsupervised visitation\n  Given I start the interview at "restraining_order.yml"\n')),(0,i.kt)("p",null,"The Steps under each scenario will be a bit different because they each test a different path for the user."),(0,i.kt)("h3",{id:"how-do-i-add-a-new-test-to-an-existing-test-file"},"How do I add a new test to an existing test file?"),(0,i.kt)("p",null,"To add a new test to the existing file you need:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The keyword ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario")," with the ",(0,i.kt)("inlineCode",{parentName:"li"},"Scenario")," description."),(0,i.kt)("li",{parentName:"ol"},"The step that loads the interview's page: ",(0,i.kt)("inlineCode",{parentName:"li"},"Given I start the interview at"),". You must use it before you fill out any fields: ")),(0,i.kt)("p",null,"Example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'Scenario: I allow unsupervised visitation\n  Given I start the interview at "restraining_order.yml"\n')),(0,i.kt)("p",null,"Make sure to leave the ",(0,i.kt)("inlineCode",{parentName:"p"},"Feature")," line at the very top of the file."),(0,i.kt)("p",null,"After the ",(0,i.kt)("inlineCode",{parentName:"p"},"Given")," step, you can add the story table or other Steps that will test your interview."),(0,i.kt)("p",null,"ALKiln uses the ",(0,i.kt)("inlineCode",{parentName:"p"},"Scenario")," description to label test results. Try to use something you'll recognize later."),(0,i.kt)("h3",{id:"when-do-tests-run"},"When do tests run?"),(0,i.kt)("p",null,"Tests run when you commit your files to GitHub. That might be when you hit the 'Commit' button on the Packages page. It can also happen when you edit, add, or delete files in GitHub itself."),(0,i.kt)("p",null,"If you know how to use GitHub ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions#viewing-the-workflows-activity"},"actions"),", you can also run the tests manually from GitHub actions with some more options."),(0,i.kt)("h3",{id:"why-should-i-write-a-scenario-description"},"Why should I write a Scenario description?"),(0,i.kt)("p",null,"Scenario descriptions affect the names of error screenshot files and report headings, so try to write something you will recognize later."),(0,i.kt)("h2",{id:"built-with"},"Built with"),(0,i.kt)("p",null,"Kiln uses cucumberjs, puppeteerjs, cheerio, and runs the assertions using mocha and chai libraries."),(0,i.kt)("p",null,"Even though this is built using ",(0,i.kt)("a",{parentName:"p",href:"https://cucumber.io/"},"cucumberjs"),", this framework has a different, less lofty, purpose. cucumber focuses on BDD (behavior driven development). This framework mostly deals with regression testing and other conveniences."),(0,i.kt)("h2",{id:"repositories"},"Repositories"),(0,i.kt)("p",null,"ALKiln's repository is at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SuffolkLITLab/ALKiln"},"https://github.com/SuffolkLITLab/ALKiln"),"."),(0,i.kt)("p",null,"The developer test setup interivew's repo is at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/plocket/docassemble-ALAutomatedTestingTests"},"https://github.com/plocket/docassemble-ALAutomatedTestingTests"),"."),(0,i.kt)("p",null,"ALKiln also tests itself using some of the interviews at ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/plocket/docassemble-ALAutomatedTestingTests"},"https://github.com/plocket/docassemble-ALAutomatedTestingTests"),"."))}d.isMDXComponent=!0}}]);